var MooTools = {version: "1.2.5", build: "008d8f0f2fcc2044e54fdd3635341aaab274e757"};
var Native = function (l)
{
    l = l || {};
    var a = l.name;
    var j = l.legacy;
    var b = l.protect;
    var c = l.implement;
    var i = l.generics;
    var g = l.initialize;
    var h = l.afterImplement || function ()
    {
    };
    var d = g || j;
    i = i !== false;
    d.constructor = Native;
    d.$family = {name: "native"};
    if(j && g)
    {
        d.prototype = j.prototype
    }
    d.prototype.constructor = d;
    if(a)
    {
        var f = a.toLowerCase();
        d.prototype.$family = {name: f};
        Native.typize(d, f)
    }
    var k = function (o, m, p, n)
    {
        if(!b || n || !o.prototype[m])
        {
            o.prototype[m] = p
        }
        if(i)
        {
            Native.genericize(o, m, b)
        }
        h.call(o, m, p);
        return o
    };
    d.alias = function (o, m, q)
    {
        if(typeof o == "string")
        {
            var p = this.prototype[o];
            if((o = p))
            {
                return k(this, m, o, q)
            }
        }
        for(var n in o)
        {
            this.alias(n, o[n], m)
        }
        return this
    };
    d.implement = function (n, m, q)
    {
        if(typeof n == "string")
        {
            return k(this, n, m, q)
        }
        for(var o in n)
        {
            k(this, o, n[o], m)
        }
        return this
    };
    if(c)
    {
        d.implement(c)
    }
    return d
};
Native.genericize = function (b, c, a)
{
    if((!a || !b[c]) && typeof b.prototype[c] == "function")
    {
        b[c] = function ()
        {
            var d = Array.prototype.slice.call(arguments);
            return b.prototype[c].apply(d.shift(), d)
        }
    }
};
Native.implement = function (d, c)
{
    for(var b = 0, a = d.length; b < a; b++)
    {
        d[b].implement(c)
    }
};
Native.typize = function (a, b)
{
    if(!a.type)
    {
        a.type = function (c)
        {
            return($type(c) === b)
        }
    }
};
(function ()
{
    var a = {Array: Array, Date: Date, Function: Function, Number: Number, RegExp: RegExp, String: String};
    for(var j in a)
    {
        new Native({name: j, initialize: a[j], protect: true})
    }
    var d = {"boolean": Boolean, "native": Native, object: Object};
    for(var c in d)
    {
        Native.typize(d[c], c)
    }
    var h = {Array: [
        "concat", "indexOf", "join", "lastIndexOf", "pop", "push", "reverse", "shift", "slice", "sort",
        "splice", "toString", "unshift", "valueOf"
    ], String     : [
        "charAt", "charCodeAt", "concat", "indexOf", "lastIndexOf", "match", "replace", "search", "slice",
        "split", "substr", "substring", "toLowerCase", "toUpperCase", "valueOf"
    ]};
    for(var f in h)
    {
        for(var b = h[f].length; b--;)
        {
            Native.genericize(a[f], h[f][b], true)
        }
    }
})();
var Hash = new Native({name: "Hash", initialize: function (a)
{
    if($type(a) == "hash")
    {
        a = $unlink(a.getClean())
    }
    for(var b in a)
    {
        this[b] = a[b]
    }
    return this
}});
Hash.implement({forEach: function (b, c)
{
    for(var a in this)
    {
        if(this.hasOwnProperty(a))
        {
            b.call(c, this[a], a, this)
        }
    }
}, getClean            : function ()
{
    var b = {};
    for(var a in this)
    {
        if(this.hasOwnProperty(a))
        {
            b[a] = this[a]
        }
    }
    return b
}, getLength           : function ()
{
    var b = 0;
    for(var a in this)
    {
        if(this.hasOwnProperty(a))
        {
            b++
        }
    }
    return b
}});
Hash.alias("forEach", "each");
Array.implement({forEach: function (c, d)
{
    for(var b = 0, a = this.length; b < a; b++)
    {
        c.call(d, this[b], b, this)
    }
}});
Array.alias("forEach", "each");
function $A(b)
{
    if(b.item)
    {
        var a = b.length, c = new Array(a);
        while (a--)
        {
            c[a] = b[a]
        }
        return c
    }
    return Array.prototype.slice.call(b)
}
function $arguments(a)
{
    return function ()
    {
        return arguments[a]
    }
}
function $chk(a)
{
    return !!(a || a === 0)
}
function $clear(a)
{
    clearTimeout(a);
    clearInterval(a);
    return null
}
function $defined(a)
{
    return(a != undefined)
}
function $each(c, b, d)
{
    var a = $type(c);
    ((a == "arguments" || a == "collection" || a == "array") ? Array : Hash).each(c, b, d)
}
function $empty()
{
}
function $extend(c, a)
{
    for(var b in (a || {}))
    {
        c[b] = a[b]
    }
    return c
}
function $H(a)
{
    return new Hash(a)
}
function $lambda(a)
{
    return($type(a) == "function") ? a : function ()
    {
        return a
    }
}
function $merge()
{
    var a = Array.slice(arguments);
    a.unshift({});
    return $mixin.apply(null, a)
}
function $mixin(f)
{
    for(var d = 1, a = arguments.length; d < a; d++)
    {
        var b = arguments[d];
        if($type(b) != "object")
        {
            continue
        }
        for(var c in b)
        {
            var h = b[c], g = f[c];
            f[c] = (g && $type(h) == "object" && $type(g) == "object") ? $mixin(g, h) : $unlink(h)
        }
    }
    return f
}
function $pick()
{
    for(var b = 0, a = arguments.length; b < a; b++)
    {
        if(arguments[b] != undefined)
        {
            return arguments[b]
        }
    }
    return null
}
function $random(b, a)
{
    return Math.floor(Math.random() * (a - b + 1) + b)
}
function $splat(b)
{
    var a = $type(b);
    return(a) ? ((a != "array" && a != "arguments") ? [b] : b) : []
}
var $time = Date.now || function ()
{
    return +new Date
};
function $try()
{
    for(var b = 0, a = arguments.length; b < a; b++)
    {
        try
        {
            return arguments[b]()
        }
        catch (c)
        {
        }
    }
    return null
}
function $type(a)
{
    if(a == undefined)
    {
        return false
    }
    if(a.$family)
    {
        return(a.$family.name == "number" && !isFinite(a)) ? false : a.$family.name
    }
    if(a.nodeName)
    {
        switch (a.nodeType)
        {
            case 1:
                return"element";
            case 3:
                return(/\S/).test(a.nodeValue) ? "textnode" : "whitespace"
        }
    } else
    {
        if(typeof a.length == "number")
        {
            if(a.callee)
            {
                return"arguments"
            } else
            {
                if(a.item)
                {
                    return"collection"
                }
            }
        }
    }
    return typeof a
}
function $unlink(c)
{
    var b;
    switch ($type(c))
    {
        case"object":
            b = {};
            for(var f in c)
            {
                b[f] = $unlink(c[f])
            }
            break;
        case"hash":
            b = new Hash(c);
            break;
        case"array":
            b = [];
            for(var d = 0, a = c.length; d < a; d++)
            {
                b[d] = $unlink(c[d])
            }
            break;
        default:
            return c
    }
    return b
}
var Browser = $merge({Engine      : {name: "unknown", version: 0}, Platform: {name: (window.orientation != undefined) ? "ipod" : (navigator.platform.match(/mac|win|linux/i) ||
    [
        "other"
    ])[0].toLowerCase()}, Features: {xpath: !!(document.evaluate), air: !!(window.runtime), query: !!(document.querySelector)}, Plugins: {}, Engines: {presto: function ()
{
    return(!window.opera) ? false : ((arguments.callee.caller) ? 960 : ((document.getElementsByClassName) ? 950 : 925))
}, trident                                                                                                                                                   : function ()
{
    return(!window.ActiveXObject) ? false : ((window.XMLHttpRequest) ? ((document.querySelectorAll) ? 6 : 5) : 4)
}, webkit                                                                                                                                                    : function ()
{
    return(navigator.taintEnabled) ? false : ((Browser.Features.xpath) ? ((Browser.Features.query) ? 525 : 420) : 419)
}, gecko                                                                                                                                                     : function ()
{
    return(!document.getBoxObjectFor && window.mozInnerScreenX == null) ? false : ((document.getElementsByClassName) ? 19 : 18)
}}}, Browser || {});
Browser.Platform[Browser.Platform.name] = true;
Browser.detect = function ()
{
    for(var b in this.Engines)
    {
        var a = this.Engines[b]();
        if(a)
        {
            this.Engine = {name: b, version: a};
            this.Engine[b] = this.Engine[b + a] = true;
            break
        }
    }
    return{name: b, version: a}
};
Browser.detect();
Browser.Request = function ()
{
    return $try(function ()
    {
        return new XMLHttpRequest()
    }, function ()
    {
        return new ActiveXObject("MSXML2.XMLHTTP")
    }, function ()
    {
        return new ActiveXObject("Microsoft.XMLHTTP")
    })
};
Browser.Features.xhr = !!(Browser.Request());
Browser.Plugins.Flash = (function ()
{
    var a = ($try(function ()
    {
        return navigator.plugins["Shockwave Flash"].description
    }, function ()
    {
        return new ActiveXObject("ShockwaveFlash.ShockwaveFlash").GetVariable("$version")
    }) || "0 r0").match(/\d+/g);
    return{version: parseInt(a[0] || 0 + "." + a[1], 10) || 0, build: parseInt(a[2], 10) || 0}
})();
function $exec(b)
{
    if(!b)
    {
        return b
    }
    if(window.execScript)
    {
        window.execScript(b)
    } else
    {
        var a = document.createElement("script");
        a.setAttribute("type", "text/javascript");
        a[(Browser.Engine.webkit && Browser.Engine.version < 420) ? "innerText" : "text"] = b;
        document.head.appendChild(a);
        document.head.removeChild(a)
    }
    return b
}
Native.UID = 1;
var $uid = (Browser.Engine.trident) ? function (a)
{
    return(a.uid || (a.uid = [Native.UID++]))[0]
} : function (a)
{
    return a.uid || (a.uid = Native.UID++)
};
var Window = new Native({name: "Window", legacy: (Browser.Engine.trident) ? null : window.Window, initialize: function (a)
{
    $uid(a);
    if(!a.Element)
    {
        a.Element = $empty;
        if(Browser.Engine.webkit)
        {
            a.document.createElement("iframe")
        }
        a.Element.prototype = (Browser.Engine.webkit) ? window["[[DOMElement.prototype]]"] : {}
    }
    a.document.window = a;
    return $extend(a, Window.Prototype)
}, afterImplement            : function (b, a)
{
    window[b] = Window.Prototype[b] = a
}});
Window.Prototype = {$family: {name: "window"}};
new Window(window);
var Document = new Native({name: "Document", legacy: (Browser.Engine.trident) ? null : window.Document, initialize: function (a)
{
    $uid(a);
    a.head = a.getElementsByTagName("head")[0];
    a.html = a.getElementsByTagName("html")[0];
    if(Browser.Engine.trident && Browser.Engine.version <= 4)
    {
        $try(function ()
        {
            a.execCommand("BackgroundImageCache", false, true)
        })
    }
    if(Browser.Engine.trident)
    {
        a.window.attachEvent("onunload", function ()
        {
            a.window.detachEvent("onunload", arguments.callee);
            a.head = a.html = a.window = null
        })
    }
    return $extend(a, Document.Prototype)
}, afterImplement              : function (b, a)
{
    document[b] = Document.Prototype[b] = a
}});
Document.Prototype = {$family: {name: "document"}};
new Document(document);
Array.implement({every: function (c, d)
{
    for(var b = 0, a = this.length; b < a; b++)
    {
        if(!c.call(d, this[b], b, this))
        {
            return false
        }
    }
    return true
}, filter             : function (d, f)
{
    var c = [];
    for(var b = 0, a = this.length; b < a; b++)
    {
        if(d.call(f, this[b], b, this))
        {
            c.push(this[b])
        }
    }
    return c
}, clean              : function ()
{
    return this.filter($defined)
}, indexOf            : function (c, d)
{
    var a = this.length;
    for(var b = (d < 0) ? Math.max(0, a + d) : d || 0; b < a; b++)
    {
        if(this[b] === c)
        {
            return b
        }
    }
    return -1
}, map                : function (d, f)
{
    var c = [];
    for(var b = 0, a = this.length; b < a; b++)
    {
        c[b] = d.call(f, this[b], b, this)
    }
    return c
}, some               : function (c, d)
{
    for(var b = 0, a = this.length; b < a; b++)
    {
        if(c.call(d, this[b], b, this))
        {
            return true
        }
    }
    return false
}, associate          : function (c)
{
    var d = {}, b = Math.min(this.length, c.length);
    for(var a = 0; a < b; a++)
    {
        d[c[a]] = this[a]
    }
    return d
}, link               : function (c)
{
    var a = {};
    for(var f = 0, b = this.length; f < b; f++)
    {
        for(var d in c)
        {
            if(c[d](this[f]))
            {
                a[d] = this[f];
                delete c[d];
                break
            }
        }
    }
    return a
}, contains           : function (a, b)
{
    return this.indexOf(a, b) != -1
}, extend             : function (c)
{
    for(var b = 0, a = c.length; b < a; b++)
    {
        this.push(c[b])
    }
    return this
}, getLast            : function ()
{
    return(this.length) ? this[this.length - 1] : null
}, getRandom          : function ()
{
    return(this.length) ? this[$random(0, this.length - 1)] : null
}, include            : function (a)
{
    if(!this.contains(a))
    {
        this.push(a)
    }
    return this
}, combine            : function (c)
{
    for(var b = 0, a = c.length; b < a; b++)
    {
        this.include(c[b])
    }
    return this
}, erase              : function (b)
{
    for(var a = this.length; a--; a)
    {
        if(this[a] === b)
        {
            this.splice(a, 1)
        }
    }
    return this
}, empty              : function ()
{
    this.length = 0;
    return this
}, flatten            : function ()
{
    var d = [];
    for(var b = 0, a = this.length; b < a; b++)
    {
        var c = $type(this[b]);
        if(!c)
        {
            continue
        }
        d = d.concat((c == "array" || c == "collection" || c == "arguments") ? Array.flatten(this[b]) : this[b])
    }
    return d
}, hexToRgb           : function (b)
{
    if(this.length != 3)
    {
        return null
    }
    var a = this.map(function (c)
    {
        if(c.length == 1)
        {
            c += c
        }
        return c.toInt(16)
    });
    return(b) ? a : "rgb(" + a + ")"
}, rgbToHex           : function (d)
{
    if(this.length < 3)
    {
        return null
    }
    if(this.length == 4 && this[3] == 0 && !d)
    {
        return"transparent"
    }
    var b = [];
    for(var a = 0; a < 3; a++)
    {
        var c = (this[a] - 0).toString(16);
        b.push((c.length == 1) ? "0" + c : c)
    }
    return(d) ? b : "#" + b.join("")
}});
try
{
    //delete Function.prototype.bind // Conflicts with AngularJS, testing without - 05.07.17 HL
}
catch (e)
{
}
Function.implement({extend: function (a)
{
    for(var b in a)
    {
        this[b] = a[b]
    }
    return this
}, create                 : function (b)
{
    var a = this;
    b = b || {};
    return function (d)
    {
        var c = b.arguments;
        c = (c != undefined) ? $splat(c) : Array.slice(arguments, (b.event) ? 1 : 0);
        if(b.event)
        {
            c = [d || window.event].extend(c)
        }
        var f = function ()
        {
            return a.apply(b.bind || null, c)
        };
        if(b.delay)
        {
            return setTimeout(f, b.delay)
        }
        if(b.periodical)
        {
            return setInterval(f, b.periodical)
        }
        if(b.attempt)
        {
            return $try(f)
        }
        return f()
    }
}, run                    : function (a, b)
{
    return this.apply(b, $splat(a))
}, pass                   : function (a, b)
{
    return this.create({bind: b, arguments: a})
}, bind                   : function (b, a)
{
    return this.create({bind: b, arguments: a})
}, bindWithEvent          : function (b, a)
{
    return this.create({bind: b, arguments: a, event: true})
}, attempt                : function (a, b)
{
    return this.create({bind: b, arguments: a, attempt: true})()
}, delay                  : function (b, c, a)
{
    return this.create({bind: c, arguments: a, delay: b})()
}, periodical             : function (c, b, a)
{
    return this.create({bind: b, arguments: a, periodical: c})()
}});
Number.implement({limit: function (b, a)
{
    return Math.min(a, Math.max(b, this))
}, round               : function (a)
{
    a = Math.pow(10, a || 0);
    return Math.round(this * a) / a
}, times               : function (b, c)
{
    for(var a = 0; a < this; a++)
    {
        b.call(c, a, this)
    }
}, toFloat             : function ()
{
    return parseFloat(this)
}, toInt               : function (a)
{
    return parseInt(this, a || 10)
}});
Number.alias("times", "each");
(function (b)
{
    var a = {};
    b.each(function (c)
    {
        if(!Number[c])
        {
            a[c] = function ()
            {
                return Math[c].apply(null, [this].concat($A(arguments)))
            }
        }
    });
    Number.implement(a)
})([
    "abs", "acos", "asin", "atan", "atan2", "ceil", "cos", "exp", "floor", "log", "max", "min", "pow", "sin", "sqrt",
    "tan"
]);
String.implement({test: function (a, b)
{
    return((typeof a == "string") ? new RegExp(a, b) : a).test(this)
}, contains           : function (a, b)
{
    return(b) ? (b + this + b).indexOf(b + a + b) > -1 : this.indexOf(a) > -1
}, trim               : function ()
{
    return this.replace(/^\s+|\s+$/g, "")
}, clean              : function ()
{
    return this.replace(/\s+/g, " ").trim()
}, camelCase          : function ()
{
    return this.replace(/-\D/g, function (a)
    {
        return a.charAt(1).toUpperCase()
    })
}, hyphenate          : function ()
{
    return this.replace(/[A-Z]/g, function (a)
    {
        return("-" + a.charAt(0).toLowerCase())
    })
}, capitalize         : function ()
{
    return this.replace(/\b[a-z]/g, function (a)
    {
        return a.toUpperCase()
    })
}, escapeRegExp       : function ()
{
    return this.replace(/([-.*+?^${}()|[\]\/\\])/g, "\\$1")
}, toInt              : function (a)
{
    return parseInt(this, a || 10)
}, toFloat            : function ()
{
    return parseFloat(this)
}, hexToRgb           : function (b)
{
    var a = this.match(/^#?(\w{1,2})(\w{1,2})(\w{1,2})$/);
    return(a) ? a.slice(1).hexToRgb(b) : null
}, rgbToHex           : function (b)
{
    var a = this.match(/\d{1,3}/g);
    return(a) ? a.rgbToHex(b) : null
}, stripScripts       : function (b)
{
    var a = "";
    var c = this.replace(/<script[^>]*>([\s\S]*?)<\/script>/gi, function ()
    {
        a += arguments[1] + "\n";
        return""
    });
    if(b === true)
    {
        $exec(a)
    } else
    {
        if($type(b) == "function")
        {
            b(a, c)
        }
    }
    return c
}, substitute         : function (a, b)
{
    return this.replace(b || (/\\?\{([^{}]+)\}/g), function (d, c)
    {
        if(d.charAt(0) == "\\")
        {
            return d.slice(1)
        }
        return(a[c] != undefined) ? a[c] : ""
    })
}});
Hash.implement({has: Object.prototype.hasOwnProperty, keyOf: function (b)
{
    for(var a in this)
    {
        if(this.hasOwnProperty(a) && this[a] === b)
        {
            return a
        }
    }
    return null
}, hasValue        : function (a)
{
    return(Hash.keyOf(this, a) !== null)
}, extend          : function (a)
{
    Hash.each(a || {}, function (c, b)
    {
        Hash.set(this, b, c)
    }, this);
    return this
}, combine         : function (a)
{
    Hash.each(a || {}, function (c, b)
    {
        Hash.include(this, b, c)
    }, this);
    return this
}, erase           : function (a)
{
    if(this.hasOwnProperty(a))
    {
        delete this[a]
    }
    return this
}, get             : function (a)
{
    return(this.hasOwnProperty(a)) ? this[a] : null
}, set             : function (a, b)
{
    if(!this[a] || this.hasOwnProperty(a))
    {
        this[a] = b
    }
    return this
}, empty           : function ()
{
    Hash.each(this, function (b, a)
    {
        delete this[a]
    }, this);
    return this
}, include         : function (a, b)
{
    if(this[a] == undefined)
    {
        this[a] = b
    }
    return this
}, map             : function (b, c)
{
    var a = new Hash;
    Hash.each(this, function (f, d)
    {
        a.set(d, b.call(c, f, d, this))
    }, this);
    return a
}, filter          : function (b, c)
{
    var a = new Hash;
    Hash.each(this, function (f, d)
    {
        if(b.call(c, f, d, this))
        {
            a.set(d, f)
        }
    }, this);
    return a
}, every           : function (b, c)
{
    for(var a in this)
    {
        if(this.hasOwnProperty(a) && !b.call(c, this[a], a))
        {
            return false
        }
    }
    return true
}, some            : function (b, c)
{
    for(var a in this)
    {
        if(this.hasOwnProperty(a) && b.call(c, this[a], a))
        {
            return true
        }
    }
    return false
}, getKeys         : function ()
{
    var a = [];
    Hash.each(this, function (c, b)
    {
        a.push(b)
    });
    return a
}, getValues       : function ()
{
    var a = [];
    Hash.each(this, function (b)
    {
        a.push(b)
    });
    return a
}, toQueryString   : function (a)
{
    var b = [];
    Hash.each(this, function (g, f)
    {
        if(a)
        {
            f = a + "[" + f + "]"
        }
        var d;
        switch ($type(g))
        {
            case"object":
                d = Hash.toQueryString(g, f);
                break;
            case"array":
                var c = {};
                g.each(function (j, h)
                {
                    c[h] = j
                });
                d = Hash.toQueryString(c, f);
                break;
            default:
                d = f + "=" + encodeURIComponent(g)
        }
        if(g != undefined)
        {
            b.push(d)
        }
    });
    return b.join("&")
}});
Hash.alias({keyOf: "indexOf", hasValue: "contains"});
var Event = new Native({name: "Event", initialize: function (a, g)
{
    g = g || window;
    var l = g.document;
    a = a || g.event;
    if(a.$extended)
    {
        return a
    }
    this.$extended = true;
    var k = a.type;
    var h = a.target || a.srcElement;
    while (h && h.nodeType == 3)
    {
        h = h.parentNode
    }
    if(k.test(/key/))
    {
        var b = a.which || a.keyCode;
        var n = Event.Keys.keyOf(b);
        if(k == "keydown")
        {
            var d = b - 111;
            if(d > 0 && d < 13)
            {
                n = "f" + d
            }
        }
        n = n || String.fromCharCode(b).toLowerCase()
    } else
    {
        if(k.match(/(click|mouse|menu)/i))
        {
            l = (!l.compatMode || l.compatMode == "CSS1Compat") ? l.html : l.body;
            var j = {x: a.pageX || a.clientX + l.scrollLeft, y: a.pageY || a.clientY + l.scrollTop};
            var c = {x: (a.pageX) ? a.pageX - g.pageXOffset : a.clientX, y: (a.pageY) ? a.pageY - g.pageYOffset : a.clientY};
            if(k.match(/DOMMouseScroll|mousewheel/))
            {
                var i = (a.wheelDelta) ? a.wheelDelta / 120 : -(a.detail || 0) / 3
            }
            var f = (a.which == 3) || (a.button == 2);
            var m = null;
            if(k.match(/over|out/))
            {
                switch (k)
                {
                    case"mouseover":
                        m = a.relatedTarget || a.fromElement;
                        break;
                    case"mouseout":
                        m = a.relatedTarget || a.toElement
                }
                if(!(function ()
                {
                    while (m && m.nodeType == 3)
                    {
                        m = m.parentNode
                    }
                    return true
                }).create({attempt: Browser.Engine.gecko})())
                {
                    m = false
                }
            }
        }
    }
    return $extend(this, {event: a, type: k, page: j, client: c, rightClick: f, wheel: i, relatedTarget: m, target: h, code: b, key: n, shift: a.shiftKey, control: a.ctrlKey, alt: a.altKey, meta: a.metaKey})
}});
Event.Keys = new Hash({enter: 13, up: 38, down: 40, left: 37, right: 39, esc: 27, space: 32, backspace: 8, tab: 9, "delete": 46});
Event.implement({stop: function ()
{
    return this.stopPropagation().preventDefault()
}, stopPropagation   : function ()
{
    if(this.event.stopPropagation)
    {
        this.event.stopPropagation()
    } else
    {
        this.event.cancelBubble = true
    }
    return this
}, preventDefault    : function ()
{
    if(this.event.preventDefault)
    {
        this.event.preventDefault()
    } else
    {
        this.event.returnValue = false
    }
    return this
}});
function Class(b)
{
    if(b instanceof Function)
    {
        b = {initialize: b}
    }
    var a = function ()
    {
        Object.reset(this);
        if(a._prototyping)
        {
            return this
        }
        this._current = $empty;
        var c = (this.initialize) ? this.initialize.apply(this, arguments) : this;
        delete this._current;
        delete this.caller;
        return c
    }.extend(this);
    a.implement(b);
    a.constructor = Class;
    a.prototype.constructor = a;
    return a
}
Function.prototype.protect = function ()
{
    this._protected = true;
    return this
};
Object.reset = function (a, c)
{
    if(c == null)
    {
        for(var f in a)
        {
            Object.reset(a, f)
        }
        return a
    }
    delete a[c];
    switch ($type(a[c]))
    {
        case"object":
            var d = function ()
            {
            };
            d.prototype = a[c];
            var b = new d;
            a[c] = Object.reset(b);
            break;
        case"array":
            a[c] = $unlink(a[c]);
            break
    }
    return a
};
new Native({name: "Class", initialize: Class}).extend({instantiate: function (b)
{
    b._prototyping = true;
    var a = new b;
    delete b._prototyping;
    return a
}, wrap                                                           : function (a, b, c)
{
    if(c._origin)
    {
        c = c._origin
    }
    return function ()
    {
        if(c._protected && this._current == null)
        {
            throw new Error('The method "' + b + '" cannot be called.')
        }
        var f = this.caller, g = this._current;
        this.caller = g;
        this._current = arguments.callee;
        var d = c.apply(this, arguments);
        this._current = g;
        this.caller = f;
        return d
    }.extend({_owner: a, _origin: c, _name: b})
}});
Class.implement({implement: function (a, d)
{
    if($type(a) == "object")
    {
        for(var f in a)
        {
            this.implement(f, a[f])
        }
        return this
    }
    var g = Class.Mutators[a];
    if(g)
    {
        d = g.call(this, d);
        if(d == null)
        {
            return this
        }
    }
    var c = this.prototype;
    switch ($type(d))
    {
        case"function":
            if(d._hidden)
            {
                return this
            }
            c[a] = Class.wrap(this, a, d);
            break;
        case"object":
            var b = c[a];
            if($type(b) == "object")
            {
                $mixin(b, d)
            } else
            {
                c[a] = $unlink(d)
            }
            break;
        case"array":
            c[a] = $unlink(d);
            break;
        default:
            c[a] = d
    }
    return this
}});
Class.Mutators = {Extends: function (a)
{
    this.parent = a;
    this.prototype = Class.instantiate(a);
    this.implement("parent", function ()
    {
        var b = this.caller._name, c = this.caller._owner.parent.prototype[b];
        if(!c)
        {
            throw new Error('The method "' + b + '" has no parent.')
        }
        return c.apply(this, arguments)
    }.protect())
}, Implements            : function (a)
{
    $splat(a).each(function (b)
    {
        if(b instanceof Function)
        {
            b = Class.instantiate(b)
        }
        this.implement(b)
    }, this)
}};
var Chain = new Class({$chain: [], chain: function ()
{
    this.$chain.extend(Array.flatten(arguments));
    return this
}, callChain                 : function ()
{
    return(this.$chain.length) ? this.$chain.shift().apply(this, arguments) : false
}, clearChain                : function ()
{
    this.$chain.empty();
    return this
}});
var Events = new Class({$events: {}, addEvent: function (c, b, a)
{
    c = Events.removeOn(c);
    if(b != $empty)
    {
        this.$events[c] = this.$events[c] || [];
        this.$events[c].include(b);
        if(a)
        {
            b.internal = true
        }
    }
    return this
}, addEvents                   : function (a)
{
    for(var b in a)
    {
        this.addEvent(b, a[b])
    }
    return this
}, fireEvent                   : function (c, b, a)
{
    c = Events.removeOn(c);
    if(!this.$events || !this.$events[c])
    {
        return this
    }
    this.$events[c].each(function (d)
    {
        d.create({bind: this, delay: a, "arguments": b})()
    }, this);
    return this
}, removeEvent                 : function (b, a)
{
    b = Events.removeOn(b);
    if(!this.$events[b])
    {
        return this
    }
    if(!a.internal)
    {
        this.$events[b].erase(a)
    }
    return this
}, removeEvents                : function (c)
{
    var d;
    if($type(c) == "object")
    {
        for(d in c)
        {
            this.removeEvent(d, c[d])
        }
        return this
    }
    if(c)
    {
        c = Events.removeOn(c)
    }
    for(d in this.$events)
    {
        if(c && c != d)
        {
            continue
        }
        var b = this.$events[d];
        for(var a = b.length; a--; a)
        {
            this.removeEvent(d, b[a])
        }
    }
    return this
}});
Events.removeOn = function (a)
{
    return a.replace(/^on([A-Z])/, function (b, c)
    {
        return c.toLowerCase()
    })
};
var Options = new Class({setOptions: function ()
{
    this.options = $merge.run([this.options].extend(arguments));
    if(!this.addEvent)
    {
        return this
    }
    for(var a in this.options)
    {
        if($type(this.options[a]) != "function" || !(/^on[A-Z]/).test(a))
        {
            continue
        }
        this.addEvent(a, this.options[a]);
        delete this.options[a]
    }
    return this
}});
var Element = new Native({name: "Element", legacy: window.Element, initialize: function (a, b)
{
    var c = Element.Constructors.get(a);
    if(c)
    {
        return c(b)
    }
    if(typeof a == "string")
    {
        return document.newElement(a, b)
    }
    return document.id(a).set(b)
}, afterImplement             : function (a, b)
{
    Element.Prototype[a] = b;
    if(Array[a])
    {
        return
    }
    Elements.implement(a, function ()
    {
        var c = [], h = true;
        for(var f = 0, d = this.length; f < d; f++)
        {
            var g = this[f][a].apply(this[f], arguments);
            c.push(g);
            if(h)
            {
                h = ($type(g) == "element")
            }
        }
        return(h) ? new Elements(c) : c
    })
}});
Element.Prototype = {$family: {name: "element"}};
Element.Constructors = new Hash;
var IFrame = new Native({name: "IFrame", generics: false, initialize: function ()
{
    var g = Array.link(arguments, {properties: Object.type, iframe: $defined});
    var d = g.properties || {};
    var c = document.id(g.iframe);
    var f = d.onload || $empty;
    delete d.onload;
    d.id = d.name = $pick(d.id, d.name, c ? (c.id || c.name) : "IFrame_" + $time());
    c = new Element(c || "iframe", d);
    var b = function ()
    {
        var h = $try(function ()
        {
            return c.contentWindow.location.host
        });
        if(!h || h == window.location.host)
        {
            var i = new Window(c.contentWindow);
            new Document(c.contentWindow.document);
            $extend(i.Element.prototype, Element.Prototype)
        }
        f.call(c.contentWindow, c.contentWindow.document)
    };
    var a = $try(function ()
    {
        return c.contentWindow
    });
    ((a && a.document.body) || window.frames[d.id]) ? b() : c.addListener("load", b);
    return c
}});
var Elements = new Native({initialize: function (g, b)
{
    b = $extend({ddup: true, cash: true}, b);
    g = g || [];
    if(b.ddup || b.cash)
    {
        var h = {}, f = [];
        for(var c = 0, a = g.length; c < a; c++)
        {
            var d = document.id(g[c], !b.cash);
            if(b.ddup)
            {
                if(h[d.uid])
                {
                    continue
                }
                h[d.uid] = true
            }
            if(d)
            {
                f.push(d)
            }
        }
        g = f
    }
    return(b.cash) ? $extend(g, this) : g
}});
Elements.implement({filter: function (a, b)
{
    if(!a)
    {
        return this
    }
    return new Elements(Array.filter(this, (typeof a == "string") ? function (c)
    {
        return c.match(a)
    } : a, b))
}});
(function ()
{
    var d;
    try
    {
        var a = document.createElement("<input name=x>");
        d = (a.name == "x")
    }
    catch (b)
    {
    }
    var c = function (f)
    {
        return("" + f).replace(/&/g, "&amp;").replace(/"/g, "&quot;")
    };
    Document.implement({newElement: function (f, g)
    {
        if(g && g.checked != null)
        {
            g.defaultChecked = g.checked
        }
        if(d && g)
        {
            f = "<" + f;
            if(g.name)
            {
                f += ' name="' + c(g.name) + '"'
            }
            if(g.type)
            {
                f += ' type="' + c(g.type) + '"'
            }
            f += ">";
            delete g.name;
            delete g.type
        }
        return this.id(this.createElement(f)).set(g)
    }, newTextNode                : function (f)
    {
        return this.createTextNode(f)
    }, getDocument                : function ()
    {
        return this
    }, getWindow                  : function ()
    {
        return this.window
    }, id                         : (function ()
    {
        var f = {string: function (i, h, g)
        {
            i = g.getElementById(i);
            return(i) ? f.element(i, h) : null
        }, element     : function (g, j)
        {
            $uid(g);
            if(!j && !g.$family && !(/^object|embed$/i).test(g.tagName))
            {
                var h = Element.Prototype;
                for(var i in h)
                {
                    g[i] = h[i]
                }
            }
            return g
        }, object      : function (h, i, g)
        {
            if(h.toElement)
            {
                return f.element(h.toElement(g), i)
            }
            return null
        }};
        f.textnode = f.whitespace = f.window = f.document = $arguments(0);
        return function (h, j, i)
        {
            if(h && h.$family && h.uid)
            {
                return h
            }
            var g = $type(h);
            return(f[g]) ? f[g](h, j, i || document) : null
        }
    })()})
})();
if(window.$ == null)
{
    Window.implement({$: function (a, b)
    {
        return document.id(a, b, this.document)
    }})
}
Window.implement({$$: function (a)
{
    if(arguments.length == 1 && typeof a == "string")
    {
        return this.document.getElements(a)
    }
    var g = [];
    var c = Array.flatten(arguments);
    for(var d = 0, b = c.length; d < b; d++)
    {
        var f = c[d];
        switch ($type(f))
        {
            case"element":
                g.push(f);
                break;
            case"string":
                g.extend(this.document.getElements(f, true))
        }
    }
    return new Elements(g)
}, getDocument      : function ()
{
    return this.document
}, getWindow        : function ()
{
    return this
}});
Native.implement([Element, Document], {getElement: function (a, b)
{
    return document.id(this.getElements(a, true)[0] || null, b)
}, getElements                                   : function (a, d)
{
    a = a.split(",");
    var c = [];
    var b = (a.length > 1);
    a.each(function (f)
    {
        var g = this.getElementsByTagName(f.trim());
        (b) ? c.extend(g) : c = g
    }, this);
    return new Elements(c, {ddup: b, cash: !d})
}});
(function ()
{
    var i = {}, g = {};
    var j = {input: "checked", option: "selected", textarea: (Browser.Engine.webkit && Browser.Engine.version < 420) ? "innerHTML" : "value"};
    var c = function (m)
    {
        return(g[m] || (g[m] = {}))
    };
    var h = function (o, m)
    {
        if(!o)
        {
            return
        }
        var n = o.uid;
        if(m !== true)
        {
            m = false
        }
        if(Browser.Engine.trident)
        {
            if(o.clearAttributes)
            {
                var r = m && o.cloneNode(false);
                o.clearAttributes();
                if(r)
                {
                    o.mergeAttributes(r)
                }
            } else
            {
                if(o.removeEvents)
                {
                    o.removeEvents()
                }
            }
            if((/object/i).test(o.tagName))
            {
                for(var q in o)
                {
                    if(typeof o[q] == "function")
                    {
                        o[q] = $empty
                    }
                }
                Element.dispose(o)
            }
        }
        if(!n)
        {
            return
        }
        i[n] = g[n] = null
    };
    var d = function ()
    {
        Hash.each(i, h);
        if(Browser.Engine.trident)
        {
            $A(document.getElementsByTagName("object")).each(h)
        }
        if(window.CollectGarbage)
        {
            CollectGarbage()
        }
        i = g = null
    };
    var k = function (o, m, t, n, q, s)
    {
        var p = o[t || m];
        var r = [];
        while (p)
        {
            if(p.nodeType == 1 && (!n || Element.match(p, n)))
            {
                if(!q)
                {
                    return document.id(p, s)
                }
                r.push(p)
            }
            p = p[m]
        }
        return(q) ? new Elements(r, {ddup: false, cash: !s}) : null
    };
    var f = {html: "innerHTML", "class": "className", "for": "htmlFor", defaultValue: "defaultValue", text: (Browser.Engine.trident || (Browser.Engine.webkit && Browser.Engine.version < 420)) ? "innerText" : "textContent"};
    var b = [
        "compact", "nowrap", "ismap", "declare", "noshade", "checked", "disabled", "readonly", "multiple",
        "selected", "noresize", "defer"
    ];
    var l = [
        "value", "type", "defaultValue", "accessKey", "cellPadding", "cellSpacing", "colSpan", "frameBorder",
        "maxLength", "readOnly", "rowSpan", "tabIndex", "useMap"
    ];
    b = b.associate(b);
    Hash.extend(f, b);
    Hash.extend(f, l.associate(l.map(String.toLowerCase)));
    var a = {before: function (n, m)
    {
        if(m.parentNode)
        {
            m.parentNode.insertBefore(n, m)
        }
    }, after       : function (n, m)
    {
        if(!m.parentNode)
        {
            return
        }
        var o = m.nextSibling;
        (o) ? m.parentNode.insertBefore(n, o) : m.parentNode.appendChild(n)
    }, bottom      : function (n, m)
    {
        m.appendChild(n)
    }, top         : function (n, m)
    {
        var o = m.firstChild;
        (o) ? m.insertBefore(n, o) : m.appendChild(n)
    }};
    a.inside = a.bottom;
    Hash.each(a, function (m, n)
    {
        n = n.capitalize();
        Element.implement("inject" + n, function (o)
        {
            m(this, document.id(o, true));
            return this
        });
        Element.implement("grab" + n, function (o)
        {
            m(document.id(o, true), this);
            return this
        })
    });
    Element.implement({set: function (q, n)
    {
        switch ($type(q))
        {
            case"object":
                for(var o in q)
                {
                    this.set(o, q[o])
                }
                break;
            case"string":
                var m = Element.Properties.get(q);
                (m && m.set) ? m.set.apply(this, Array.slice(arguments, 1)) : this.setProperty(q, n)
        }
        return this
    }, get                : function (n)
    {
        var m = Element.Properties.get(n);
        return(m && m.get) ? m.get.apply(this, Array.slice(arguments, 1)) : this.getProperty(n)
    }, erase              : function (n)
    {
        var m = Element.Properties.get(n);
        (m && m.erase) ? m.erase.apply(this) : this.removeProperty(n);
        return this
    }, setProperty        : function (n, o)
    {
        var m = f[n];
        if(o == undefined)
        {
            return this.removeProperty(n)
        }
        if(m && b[n])
        {
            o = !!o
        }
        (m) ? this[m] = o : this.setAttribute(n, "" + o);
        return this
    }, setProperties      : function (m)
    {
        for(var n in m)
        {
            this.setProperty(n, m[n])
        }
        return this
    }, getProperty        : function (n)
    {
        var m = f[n];
        var o = (m) ? this[m] : this.getAttribute(n, 2);
        return(b[n]) ? !!o : (m) ? o : o || null
    }, getProperties      : function ()
    {
        var m = $A(arguments);
        return m.map(this.getProperty, this).associate(m)
    }, removeProperty     : function (n)
    {
        var m = f[n];
        (m) ? this[m] = (m && b[n]) ? false : "" : this.removeAttribute(n);
        return this
    }, removeProperties   : function ()
    {
        Array.each(arguments, this.removeProperty, this);
        return this
    }, hasClass           : function (m)
    {
        return this.className.contains(m, " ")
    }, addClass           : function (m)
    {
        if(!this.hasClass(m))
        {
            this.className = (this.className + " " + m).clean()
        }
        return this
    }, removeClass        : function (m)
    {
        this.className = this.className.replace(new RegExp("(^|\\s)" + m + "(?:\\s|$)"), "$1");
        return this
    }, toggleClass        : function (m)
    {
        return this.hasClass(m) ? this.removeClass(m) : this.addClass(m)
    }, adopt              : function ()
    {
        Array.flatten(arguments).each(function (m)
        {
            m = document.id(m, true);
            if(m)
            {
                this.appendChild(m)
            }
        }, this);
        return this
    }, appendText         : function (n, m)
    {
        return this.grab(this.getDocument().newTextNode(n), m)
    }, grab               : function (n, m)
    {
        a[m || "bottom"](document.id(n, true), this);
        return this
    }, inject             : function (n, m)
    {
        a[m || "bottom"](this, document.id(n, true));
        return this
    }, replaces           : function (m)
    {
        m = document.id(m, true);
        m.parentNode.replaceChild(this, m);
        return this
    }, wraps              : function (n, m)
    {
        n = document.id(n, true);
        return this.replaces(n).grab(n, m)
    }, getPrevious        : function (m, n)
    {
        return k(this, "previousSibling", null, m, false, n)
    }, getAllPrevious     : function (m, n)
    {
        return k(this, "previousSibling", null, m, true, n)
    }, getNext            : function (m, n)
    {
        return k(this, "nextSibling", null, m, false, n)
    }, getAllNext         : function (m, n)
    {
        return k(this, "nextSibling", null, m, true, n)
    }, getFirst           : function (m, n)
    {
        return k(this, "nextSibling", "firstChild", m, false, n)
    }, getLast            : function (m, n)
    {
        return k(this, "previousSibling", "lastChild", m, false, n)
    }, getParent          : function (m, n)
    {
        return k(this, "parentNode", null, m, false, n)
    }, getParents         : function (m, n)
    {
        return k(this, "parentNode", null, m, true, n)
    }, getSiblings        : function (m, n)
    {
        return this.getParent().getChildren(m, n).erase(this)
    }, getChildren        : function (m, n)
    {
        return k(this, "nextSibling", "firstChild", m, true, n)
    }, getWindow          : function ()
    {
        return this.ownerDocument.window
    }, getDocument        : function ()
    {
        return this.ownerDocument
    }, getElementById     : function (p, o)
    {
        var n = this.ownerDocument.getElementById(p);
        if(!n)
        {
            return null
        }
        for(var m = n.parentNode; m != this; m = m.parentNode)
        {
            if(!m)
            {
                return null
            }
        }
        return document.id(n, o)
    }, getSelected        : function ()
    {
        return new Elements($A(this.options).filter(function (m)
        {
            return m.selected
        }))
    }, getComputedStyle   : function (n)
    {
        if(this.currentStyle)
        {
            return this.currentStyle[n.camelCase()]
        }
        var m = this.getDocument().defaultView.getComputedStyle(this, null);
        return(m) ? m.getPropertyValue([n.hyphenate()]) : null
    }, toQueryString      : function ()
    {
        var m = [];
        this.getElements("input, select, textarea", true).each(function (n)
        {
            if(!n.name || n.disabled || n.type == "submit" || n.type == "reset" || n.type == "file")
            {
                return
            }
            var o = (n.tagName.toLowerCase() == "select") ? Element.getSelected(n).map(function (p)
            {
                return p.value
            }) : ((n.type == "radio" || n.type == "checkbox") && !n.checked) ? null : n.value;
            $splat(o).each(function (p)
            {
                if(typeof p != "undefined")
                {
                    m.push(n.name + "=" + encodeURIComponent(p))
                }
            })
        });
        return m.join("&")
    }, clone              : function (p, m)
    {
        p = p !== false;
        var s = this.cloneNode(p);
        var o = function (w, v)
        {
            if(!m)
            {
                w.removeAttribute("id")
            }
            if(Browser.Engine.trident)
            {
                w.clearAttributes();
                w.mergeAttributes(v);
                w.removeAttribute("uid");
                if(w.options)
                {
                    var x = w.options, t = v.options;
                    for(var u = x.length; u--;)
                    {
                        x[u].selected = t[u].selected
                    }
                }
            }
            var y = j[v.tagName.toLowerCase()];
            if(y && v[y])
            {
                w[y] = v[y]
            }
        };
        if(p)
        {
            var q = s.getElementsByTagName("*"), r = this.getElementsByTagName("*");
            for(var n = q.length; n--;)
            {
                o(q[n], r[n])
            }
        }
        o(s, this);
        return document.id(s)
    }, destroy            : function ()
    {
        Element.empty(this);
        Element.dispose(this);
        h(this, true);
        return null
    }, empty              : function ()
    {
        $A(this.childNodes).each(function (m)
        {
            Element.destroy(m)
        });
        return this
    }, dispose            : function ()
    {
        return(this.parentNode) ? this.parentNode.removeChild(this) : this
    }, hasChild           : function (m)
    {
        m = document.id(m, true);
        if(!m)
        {
            return false
        }
        if(Browser.Engine.webkit && Browser.Engine.version < 420)
        {
            return $A(this.getElementsByTagName(m.tagName)).contains(m)
        }
        return(this.contains) ? (this != m && this.contains(m)) : !!(this.compareDocumentPosition(m) & 16)
    }, match              : function (m)
    {
        return(!m || (m == this) || (Element.get(this, "tag") == m))
    }});
    Native.implement([Element, Window, Document], {addListener: function (p, o)
    {
        if(p == "unload")
        {
            var m = o, n = this;
            o = function ()
            {
                n.removeListener("unload", o);
                m()
            }
        } else
        {
            i[this.uid] = this
        }
        if(this.addEventListener)
        {
            this.addEventListener(p, o, false)
        } else
        {
            this.attachEvent("on" + p, o)
        }
        return this
    }, removeListener                                         : function (n, m)
    {
        if(this.removeEventListener)
        {
            this.removeEventListener(n, m, false)
        } else
        {
            this.detachEvent("on" + n, m)
        }
        return this
    }, retrieve                                               : function (n, m)
    {
        var p = c(this.uid), o = p[n];
        if(m != undefined && o == undefined)
        {
            o = p[n] = m
        }
        return $pick(o)
    }, store                                                  : function (n, m)
    {
        var o = c(this.uid);
        o[n] = m;
        return this
    }, eliminate                                              : function (m)
    {
        var n = c(this.uid);
        delete n[m];
        return this
    }});
    window.addListener("unload", d)
})();
Element.Properties = new Hash;
Element.Properties.style = {set: function (a)
{
    this.style.cssText = a
}, get                         : function ()
{
    return this.style.cssText
}, erase                       : function ()
{
    this.style.cssText = ""
}};
Element.Properties.tag = {get: function ()
{
    return this.tagName.toLowerCase()
}};
Element.Properties.html = (function ()
{
    var c = document.createElement("div");
    var a = {table: [1, "<table>", "</table>"], select: [1, "<select>", "</select>"], tbody: [
        2, "<table><tbody>",
        "</tbody></table>"
    ], tr         : [3, "<table><tbody><tr>", "</tr></tbody></table>"]};
    a.thead = a.tfoot = a.tbody;
    var b = {set: function ()
    {
        var f = Array.flatten(arguments).join("");
        var g = Browser.Engine.trident && a[this.get("tag")];
        if(g)
        {
            var h = c;
            h.innerHTML = g[1] + f + g[2];
            for(var d = g[0]; d--;)
            {
                h = h.firstChild
            }
            this.empty().adopt(h.childNodes)
        } else
        {
            this.innerHTML = f
        }
    }};
    b.erase = b.set;
    return b
})();
if(Browser.Engine.webkit && Browser.Engine.version < 420)
{
    Element.Properties.text = {get: function ()
    {
        if(this.innerText)
        {
            return this.innerText
        }
        var a = this.ownerDocument.newElement("div", {html: this.innerHTML}).inject(this.ownerDocument.body);
        var b = a.innerText;
        a.destroy();
        return b
    }}
}
Element.Properties.events = {set: function (a)
{
    this.addEvents(a)
}};
Native.implement([Element, Window, Document], {addEvent: function (f, h)
{
    var i = this.retrieve("events", {});
    i[f] = i[f] || {keys: [], values: []};
    if(i[f].keys.contains(h))
    {
        return this
    }
    i[f].keys.push(h);
    var g = f, a = Element.Events.get(f), c = h, j = this;
    if(a)
    {
        if(a.onAdd)
        {
            a.onAdd.call(this, h)
        }
        if(a.condition)
        {
            c = function (k)
            {
                if(a.condition.call(this, k))
                {
                    return h.call(this, k)
                }
                return true
            }
        }
        g = a.base || g
    }
    var d = function ()
    {
        return h.call(j)
    };
    var b = Element.NativeEvents[g];
    if(b)
    {
        if(b == 2)
        {
            d = function (k)
            {
                k = new Event(k, j.getWindow());
                if(c.call(j, k) === false)
                {
                    k.stop()
                }
            }
        }
        this.addListener(g, d)
    }
    i[f].values.push(d);
    return this
}, removeEvent                                         : function (c, b)
{
    var a = this.retrieve("events");
    if(!a || !a[c])
    {
        return this
    }
    var g = a[c].keys.indexOf(b);
    if(g == -1)
    {
        return this
    }
    a[c].keys.splice(g, 1);
    var f = a[c].values.splice(g, 1)[0];
    var d = Element.Events.get(c);
    if(d)
    {
        if(d.onRemove)
        {
            d.onRemove.call(this, b)
        }
        c = d.base || c
    }
    return(Element.NativeEvents[c]) ? this.removeListener(c, f) : this
}, addEvents                                           : function (a)
{
    for(var b in a)
    {
        this.addEvent(b, a[b])
    }
    return this
}, removeEvents                                        : function (a)
{
    var c;
    if($type(a) == "object")
    {
        for(c in a)
        {
            this.removeEvent(c, a[c])
        }
        return this
    }
    var b = this.retrieve("events");
    if(!b)
    {
        return this
    }
    if(!a)
    {
        for(c in b)
        {
            this.removeEvents(c)
        }
        this.eliminate("events")
    } else
    {
        if(b[a])
        {
            while (b[a].keys[0])
            {
                this.removeEvent(a, b[a].keys[0])
            }
            b[a] = null
        }
    }
    return this
}, fireEvent                                           : function (d, b, a)
{
    var c = this.retrieve("events");
    if(!c || !c[d])
    {
        return this
    }
    c[d].keys.each(function (f)
    {
        f.create({bind: this, delay: a, "arguments": b})()
    }, this);
    return this
}, cloneEvents                                         : function (d, a)
{
    d = document.id(d);
    var c = d.retrieve("events");
    if(!c)
    {
        return this
    }
    if(!a)
    {
        for(var b in c)
        {
            this.cloneEvents(d, b)
        }
    } else
    {
        if(c[a])
        {
            c[a].keys.each(function (f)
            {
                this.addEvent(a, f)
            }, this)
        }
    }
    return this
}});
try
{
    if(typeof HTMLElement != "undefined")
    {
        HTMLElement.prototype.fireEvent = Element.prototype.fireEvent
    }
}
catch (e)
{
}
Element.NativeEvents = {click: 2, dblclick: 2, mouseup: 2, mousedown: 2, contextmenu: 2, mousewheel: 2, DOMMouseScroll: 2, mouseover: 2, mouseout: 2, mousemove: 2, selectstart: 2, selectend: 2, keydown: 2, keypress: 2, keyup: 2, focus: 2, blur: 2, change: 2, reset: 2, select: 2, submit: 2, load: 1, unload: 1, beforeunload: 2, resize: 1, move: 1, DOMContentLoaded: 1, readystatechange: 1, error: 1, abort: 1, scroll: 1};
(function ()
{
    var a = function (b)
    {
        var c = b.relatedTarget;
        if(c == undefined)
        {
            return true
        }
        if(c === false)
        {
            return false
        }
        return($type(this) != "document" && c != this && c.prefix != "xul" && !this.hasChild(c))
    };
    Element.Events = new Hash({mouseenter: {base: "mouseover", condition: a}, mouseleave: {base: "mouseout", condition: a}, mousewheel: {base: (Browser.Engine.gecko) ? "DOMMouseScroll" : "mousewheel"}})
})();
Element.Properties.styles = {set: function (a)
{
    this.setStyles(a)
}};
Element.Properties.opacity = {set: function (a, b)
{
    if(!b)
    {
        if(a == 0)
        {
            if(this.style.visibility != "hidden")
            {
                this.style.visibility = "hidden"
            }
        } else
        {
            if(this.style.visibility != "visible")
            {
                this.style.visibility = "visible"
            }
        }
    }
    if(!this.currentStyle || !this.currentStyle.hasLayout)
    {
        this.style.zoom = 1
    }
    if(Browser.Engine.trident)
    {
        this.style.filter = (a == 1) ? "" : "alpha(opacity=" + a * 100 + ")"
    }
    this.style.opacity = a;
    this.store("opacity", a)
}, get                           : function ()
{
    return this.retrieve("opacity", 1)
}};
Element.implement({setOpacity: function (a)
{
    return this.set("opacity", a, true)
}, getOpacity                : function ()
{
    return this.get("opacity")
}, setStyle                  : function (b, a)
{
    switch (b)
    {
        case"opacity":
            return this.set("opacity", parseFloat(a));
        case"float":
            b = (Browser.Engine.trident) ? "styleFloat" : "cssFloat"
    }
    b = b.camelCase();
    if($type(a) != "string")
    {
        var c = (Element.Styles.get(b) || "@").split(" ");
        a = $splat(a).map(function (f, d)
        {
            if(!c[d])
            {
                return""
            }
            return($type(f) == "number") ? c[d].replace("@", Math.round(f)) : f
        }).join(" ")
    } else
    {
        if(a == String(Number(a)))
        {
            a = Math.round(a)
        }
    }
    this.style[b] = a;
    return this
}, getStyle                  : function (h)
{
    switch (h)
    {
        case"opacity":
            return this.get("opacity");
        case"float":
            h = (Browser.Engine.trident) ? "styleFloat" : "cssFloat"
    }
    h = h.camelCase();
    var a = this.style[h];
    if(!$chk(a))
    {
        a = [];
        for(var g in Element.ShortStyles)
        {
            if(h != g)
            {
                continue
            }
            for(var f in Element.ShortStyles[g])
            {
                a.push(this.getStyle(f))
            }
            return a.join(" ")
        }
        a = this.getComputedStyle(h)
    }
    if(a)
    {
        a = String(a);
        var c = a.match(/rgba?\([\d\s,]+\)/);
        if(c)
        {
            a = a.replace(c[0], c[0].rgbToHex())
        }
    }
    if(Browser.Engine.presto || (Browser.Engine.trident && !$chk(parseInt(a, 10))))
    {
        if(h.test(/^(height|width)$/))
        {
            var b = (h == "width") ? ["left", "right"] : ["top", "bottom"], d = 0;
            b.each(function (i)
            {
                d += this.getStyle("border-" + i + "-width").toInt() + this.getStyle("padding-" + i).toInt()
            }, this);
            return this["offset" + h.capitalize()] - d + "px"
        }
        if((Browser.Engine.presto) && String(a).test("px"))
        {
            return a
        }
        if(h.test(/(border(.+)Width|margin|padding)/))
        {
            return"0px"
        }
    }
    return a
}, setStyles                 : function (b)
{
    for(var a in b)
    {
        this.setStyle(a, b[a])
    }
    return this
}, getStyles                 : function ()
{
    var a = {};
    Array.flatten(arguments).each(function (b)
    {
        a[b] = this.getStyle(b)
    }, this);
    return a
}});
Element.Styles = new Hash({left: "@px", top: "@px", bottom: "@px", right: "@px", width: "@px", height: "@px", maxWidth: "@px", maxHeight: "@px", minWidth: "@px", minHeight: "@px", backgroundColor: "rgb(@, @, @)", backgroundPosition: "@px @px", color: "rgb(@, @, @)", fontSize: "@px", letterSpacing: "@px", lineHeight: "@px", clip: "rect(@px @px @px @px)", margin: "@px @px @px @px", padding: "@px @px @px @px", border: "@px @ rgb(@, @, @) @px @ rgb(@, @, @) @px @ rgb(@, @, @)", borderWidth: "@px @px @px @px", borderStyle: "@ @ @ @", borderColor: "rgb(@, @, @) rgb(@, @, @) rgb(@, @, @) rgb(@, @, @)", zIndex: "@", zoom: "@", fontWeight: "@", textIndent: "@px", opacity: "@"});
Element.ShortStyles = {margin: {}, padding: {}, border: {}, borderWidth: {}, borderStyle: {}, borderColor: {}};
["Top", "Right", "Bottom", "Left"].each(function (h)
{
    var g = Element.ShortStyles;
    var b = Element.Styles;
    ["margin", "padding"].each(function (i)
    {
        var j = i + h;
        g[i][j] = b[j] = "@px"
    });
    var f = "border" + h;
    g.border[f] = b[f] = "@px @ rgb(@, @, @)";
    var d = f + "Width", a = f + "Style", c = f + "Color";
    g[f] = {};
    g.borderWidth[d] = g[f][d] = b[d] = "@px";
    g.borderStyle[a] = g[f][a] = b[a] = "@";
    g.borderColor[c] = g[f][c] = b[c] = "rgb(@, @, @)"
});
(function ()
{
    Element.implement({scrollTo: function (i, j)
    {
        if(b(this))
        {
            this.getWindow().scrollTo(i, j)
        } else
        {
            this.scrollLeft = i;
            this.scrollTop = j
        }
        return this
    }, getSize                 : function ()
    {
        if(b(this))
        {
            return this.getWindow().getSize()
        }
        return{x: this.offsetWidth, y: this.offsetHeight}
    }, getScrollSize           : function ()
    {
        if(b(this))
        {
            return this.getWindow().getScrollSize()
        }
        return{x: this.scrollWidth, y: this.scrollHeight}
    }, getScroll               : function ()
    {
        if(b(this))
        {
            return this.getWindow().getScroll()
        }
        return{x: this.scrollLeft, y: this.scrollTop}
    }, getScrolls              : function ()
    {
        var j = this, i = {x: 0, y: 0};
        while (j && !b(j))
        {
            i.x += j.scrollLeft;
            i.y += j.scrollTop;
            j = j.parentNode
        }
        return i
    }, getOffsetParent         : function ()
    {
        var i = this;
        if(b(i))
        {
            return null
        }
        if(!Browser.Engine.trident)
        {
            return i.offsetParent
        }
        while ((i = i.parentNode) && !b(i))
        {
            if(d(i, "position") != "static")
            {
                return i
            }
        }
        return null
    }, getOffsets              : function ()
    {
        if(this.getBoundingClientRect)
        {
            var k = this.getBoundingClientRect(), n = document.id(this.getDocument().documentElement), q = n.getScroll(), l = this.getScrolls(), j = this.getScroll(), i = (d(this, "position") == "fixed");
            return{x: k.left.toInt() + l.x - j.x + ((i) ? 0 : q.x) - n.clientLeft, y: k.top.toInt() + l.y - j.y + ((i) ? 0 : q.y) - n.clientTop}
        }
        var m = this, o = {x: 0, y: 0};
        if(b(this))
        {
            return o
        }
        while (m && !b(m))
        {
            o.x += m.offsetLeft;
            o.y += m.offsetTop;
            if(Browser.Engine.gecko)
            {
                if(!g(m))
                {
                    o.x += c(m);
                    o.y += h(m)
                }
                var p = m.parentNode;
                if(p && d(p, "overflow") != "visible")
                {
                    o.x += c(p);
                    o.y += h(p)
                }
            } else
            {
                if(m != this && Browser.Engine.webkit)
                {
                    o.x += c(m);
                    o.y += h(m)
                }
            }
            m = m.offsetParent
        }
        if(Browser.Engine.gecko && !g(this))
        {
            o.x -= c(this);
            o.y -= h(this)
        }
        return o
    }, getPosition             : function (l)
    {
        if(b(this))
        {
            return{x: 0, y: 0}
        }
        var m = this.getOffsets(), j = this.getScrolls();
        var i = {x: m.x - j.x, y: m.y - j.y};
        var k = (l && (l = document.id(l))) ? l.getPosition() : {x: 0, y: 0};
        return{x: i.x - k.x, y: i.y - k.y}
    }, getCoordinates          : function (k)
    {
        if(b(this))
        {
            return this.getWindow().getCoordinates()
        }
        var i = this.getPosition(k), j = this.getSize();
        var l = {left: i.x, top: i.y, width: j.x, height: j.y};
        l.right = l.left + l.width;
        l.bottom = l.top + l.height;
        return l
    }, computePosition         : function (i)
    {
        return{left: i.x - f(this, "margin-left"), top: i.y - f(this, "margin-top")}
    }, setPosition             : function (i)
    {
        return this.setStyles(this.computePosition(i))
    }});
    Native.implement([Document, Window], {getSize: function ()
    {
        if(Browser.Engine.presto || Browser.Engine.webkit)
        {
            var j = this.getWindow();
            return{x: j.innerWidth, y: j.innerHeight}
        }
        var i = a(this);
        return{x: i.clientWidth, y: i.clientHeight}
    }, getScroll                                 : function ()
    {
        var j = this.getWindow(), i = a(this);
        return{x: j.pageXOffset || i.scrollLeft, y: j.pageYOffset || i.scrollTop}
    }, getScrollSize                             : function ()
    {
        var j = a(this), i = this.getSize();
        return{x: Math.max(j.scrollWidth, i.x), y: Math.max(j.scrollHeight, i.y)}
    }, getPosition                               : function ()
    {
        return{x: 0, y: 0}
    }, getCoordinates                            : function ()
    {
        var i = this.getSize();
        return{top: 0, left: 0, bottom: i.y, right: i.x, height: i.y, width: i.x}
    }});
    var d = Element.getComputedStyle;

    function f(i, j)
    {
        return d(i, j).toInt() || 0
    }

    function g(i)
    {
        return d(i, "-moz-box-sizing") == "border-box"
    }

    function h(i)
    {
        return f(i, "border-top-width")
    }

    function c(i)
    {
        return f(i, "border-left-width")
    }

    function b(i)
    {
        return(/^(?:body|html)$/i).test(i.tagName)
    }

    function a(i)
    {
        var j = i.getDocument();
        return(!j.compatMode || j.compatMode == "CSS1Compat") ? j.html : j.body
    }
})();
Element.alias("setPosition", "position");
Native.implement([Window, Document, Element], {getHeight: function ()
{
    return this.getSize().y
}, getWidth                                             : function ()
{
    return this.getSize().x
}, getScrollTop                                         : function ()
{
    return this.getScroll().y
}, getScrollLeft                                        : function ()
{
    return this.getScroll().x
}, getScrollHeight                                      : function ()
{
    return this.getScrollSize().y
}, getScrollWidth                                       : function ()
{
    return this.getScrollSize().x
}, getTop                                               : function ()
{
    return this.getPosition().y
}, getLeft                                              : function ()
{
    return this.getPosition().x
}});
Native.implement([Document, Element], {getElements: function (j, h)
{
    j = j.split(",");
    var c, f = {};
    for(var d = 0, b = j.length; d < b; d++)
    {
        var a = j[d], g = Selectors.Utils.search(this, a, f);
        if(d != 0 && g.item)
        {
            g = $A(g)
        }
        c = (d == 0) ? g : (c.item) ? $A(c).concat(g) : c.concat(g)
    }
    return new Elements(c, {ddup: (j.length > 1), cash: !h})
}});
Element.implement({match: function (b)
{
    if(!b || (b == this))
    {
        return true
    }
    var d = Selectors.Utils.parseTagAndID(b);
    var a = d[0], f = d[1];
    if(!Selectors.Filters.byID(this, f) || !Selectors.Filters.byTag(this, a))
    {
        return false
    }
    var c = Selectors.Utils.parseSelector(b);
    return(c) ? Selectors.Utils.filter(this, c, {}) : true
}});
var Selectors = {Cache: {nth: {}, parsed: {}}};
Selectors.RegExps = {id: (/#([\w-]+)/), tag: (/^(\w+|\*)/), quick: (/^(\w+|\*)$/), splitter: (/\s*([+>~\s])\s*([a-zA-Z#.*:\[])/g), combined: (/\.([\w-]+)|\[(\w+)(?:([!*^$~|]?=)(["']?)([^\4]*?)\4)?\]|:([\w-]+)(?:\(["']?(.*?)?["']?\)|$)/g)};
Selectors.Utils = {chk: function (b, c)
{
    if(!c)
    {
        return true
    }
    var a = $uid(b);
    if(!c[a])
    {
        return c[a] = true
    }
    return false
}, parseNthArgument   : function (i)
{
    if(Selectors.Cache.nth[i])
    {
        return Selectors.Cache.nth[i]
    }
    var f = i.match(/^([+-]?\d*)?([a-z]+)?([+-]?\d*)?$/);
    if(!f)
    {
        return false
    }
    var h = parseInt(f[1], 10);
    var d = (h || h === 0) ? h : 1;
    var g = f[2] || false;
    var c = parseInt(f[3], 10) || 0;
    if(d != 0)
    {
        c--;
        while (c < 1)
        {
            c += d
        }
        while (c >= d)
        {
            c -= d
        }
    } else
    {
        d = c;
        g = "index"
    }
    switch (g)
    {
        case"n":
            f = {a: d, b: c, special: "n"};
            break;
        case"odd":
            f = {a: 2, b: 0, special: "n"};
            break;
        case"even":
            f = {a: 2, b: 1, special: "n"};
            break;
        case"first":
            f = {a: 0, special: "index"};
            break;
        case"last":
            f = {special: "last-child"};
            break;
        case"only":
            f = {special: "only-child"};
            break;
        default:
            f = {a: (d - 1), special: "index"}
    }
    return Selectors.Cache.nth[i] = f
}, parseSelector      : function (f)
{
    if(Selectors.Cache.parsed[f])
    {
        return Selectors.Cache.parsed[f]
    }
    var d, i = {classes: [], pseudos: [], attributes: []};
    while ((d = Selectors.RegExps.combined.exec(f)))
    {
        var j = d[1], h = d[2], g = d[3], b = d[5], c = d[6], k = d[7];
        if(j)
        {
            i.classes.push(j)
        } else
        {
            if(c)
            {
                var a = Selectors.Pseudo.get(c);
                if(a)
                {
                    i.pseudos.push({parser: a, argument: k})
                } else
                {
                    i.attributes.push({name: c, operator: "=", value: k})
                }
            } else
            {
                if(h)
                {
                    i.attributes.push({name: h, operator: g, value: b})
                }
            }
        }
    }
    if(!i.classes.length)
    {
        delete i.classes
    }
    if(!i.attributes.length)
    {
        delete i.attributes
    }
    if(!i.pseudos.length)
    {
        delete i.pseudos
    }
    if(!i.classes && !i.attributes && !i.pseudos)
    {
        i = null
    }
    return Selectors.Cache.parsed[f] = i
}, parseTagAndID      : function (b)
{
    var a = b.match(Selectors.RegExps.tag);
    var c = b.match(Selectors.RegExps.id);
    return[(a) ? a[1] : "*", (c) ? c[1] : false]
}, filter             : function (g, c, f)
{
    var d;
    if(c.classes)
    {
        for(d = c.classes.length; d--; d)
        {
            var h = c.classes[d];
            if(!Selectors.Filters.byClass(g, h))
            {
                return false
            }
        }
    }
    if(c.attributes)
    {
        for(d = c.attributes.length; d--; d)
        {
            var b = c.attributes[d];
            if(!Selectors.Filters.byAttribute(g, b.name, b.operator, b.value))
            {
                return false
            }
        }
    }
    if(c.pseudos)
    {
        for(d = c.pseudos.length; d--; d)
        {
            var a = c.pseudos[d];
            if(!Selectors.Filters.byPseudo(g, a.parser, a.argument, f))
            {
                return false
            }
        }
    }
    return true
}, getByTagAndID      : function (b, a, d)
{
    if(d)
    {
        var c = (b.getElementById) ? b.getElementById(d, true) : Element.getElementById(b, d, true);
        return(c && Selectors.Filters.byTag(c, a)) ? [c] : []
    } else
    {
        return b.getElementsByTagName(a)
    }
}, search             : function (p, o, u)
{
    var b = [];
    var c = o.trim().replace(Selectors.RegExps.splitter,function (k, j, i)
    {
        b.push(j);
        return":)" + i
    }).split(":)");
    var q, f, B;
    for(var A = 0, w = c.length; A < w; A++)
    {
        var z = c[A];
        if(A == 0 && Selectors.RegExps.quick.test(z))
        {
            q = p.getElementsByTagName(z);
            continue
        }
        var a = b[A - 1];
        var r = Selectors.Utils.parseTagAndID(z);
        var C = r[0], s = r[1];
        if(A == 0)
        {
            q = Selectors.Utils.getByTagAndID(p, C, s)
        } else
        {
            var d = {}, h = [];
            for(var y = 0, x = q.length; y < x; y++)
            {
                h = Selectors.Getters[a](h, q[y], C, s, d)
            }
            q = h
        }
        var g = Selectors.Utils.parseSelector(z);
        if(g)
        {
            f = [];
            for(var v = 0, t = q.length; v < t; v++)
            {
                B = q[v];
                if(Selectors.Utils.filter(B, g, u))
                {
                    f.push(B)
                }
            }
            q = f
        }
    }
    return q
}};
Selectors.Getters = {" ": function (j, h, k, a, f)
{
    var d = Selectors.Utils.getByTagAndID(h, k, a);
    for(var c = 0, b = d.length; c < b; c++)
    {
        var g = d[c];
        if(Selectors.Utils.chk(g, f))
        {
            j.push(g)
        }
    }
    return j
}, ">"                  : function (j, h, k, a, g)
{
    var c = Selectors.Utils.getByTagAndID(h, k, a);
    for(var f = 0, d = c.length; f < d; f++)
    {
        var b = c[f];
        if(b.parentNode == h && Selectors.Utils.chk(b, g))
        {
            j.push(b)
        }
    }
    return j
}, "+"                  : function (c, b, a, f, d)
{
    while ((b = b.nextSibling))
    {
        if(b.nodeType == 1)
        {
            if(Selectors.Utils.chk(b, d) && Selectors.Filters.byTag(b, a) && Selectors.Filters.byID(b, f))
            {
                c.push(b)
            }
            break
        }
    }
    return c
}, "~"                  : function (c, b, a, f, d)
{
    while ((b = b.nextSibling))
    {
        if(b.nodeType == 1)
        {
            if(!Selectors.Utils.chk(b, d))
            {
                break
            }
            if(Selectors.Filters.byTag(b, a) && Selectors.Filters.byID(b, f))
            {
                c.push(b)
            }
        }
    }
    return c
}};
Selectors.Filters = {byTag: function (b, a)
{
    return(a == "*" || (b.tagName && b.tagName.toLowerCase() == a))
}, byID                   : function (a, b)
{
    return(!b || (a.id && a.id == b))
}, byClass                : function (b, a)
{
    return(b.className && b.className.contains && b.className.contains(a, " "))
}, byPseudo               : function (a, d, c, b)
{
    return d.call(a, c, b)
}, byAttribute            : function (c, d, b, f)
{
    var a = Element.prototype.getProperty.call(c, d);
    if(!a)
    {
        return(b == "!=")
    }
    if(!b || f == undefined)
    {
        return true
    }
    switch (b)
    {
        case"=":
            return(a == f);
        case"*=":
            return(a.contains(f));
        case"^=":
            return(a.substr(0, f.length) == f);
        case"$=":
            return(a.substr(a.length - f.length) == f);
        case"!=":
            return(a != f);
        case"~=":
            return a.contains(f, " ");
        case"|=":
            return a.contains(f, "-")
    }
    return false
}};
Selectors.Pseudo = new Hash({checked: function ()
{
    return this.checked
}, empty                            : function ()
{
    return !(this.innerText || this.textContent || "").length
}, not                              : function (a)
{
    return !Element.match(this, a)
}, contains                         : function (a)
{
    return(this.innerText || this.textContent || "").contains(a)
}, "first-child"                    : function ()
{
    return Selectors.Pseudo.index.call(this, 0)
}, "last-child"                     : function ()
{
    var a = this;
    while ((a = a.nextSibling))
    {
        if(a.nodeType == 1)
        {
            return false
        }
    }
    return true
}, "only-child"                     : function ()
{
    var b = this;
    while ((b = b.previousSibling))
    {
        if(b.nodeType == 1)
        {
            return false
        }
    }
    var a = this;
    while ((a = a.nextSibling))
    {
        if(a.nodeType == 1)
        {
            return false
        }
    }
    return true
}, "nth-child"                      : function (h, f)
{
    h = (h == undefined) ? "n" : h;
    var c = Selectors.Utils.parseNthArgument(h);
    if(c.special != "n")
    {
        return Selectors.Pseudo[c.special].call(this, c.a, f)
    }
    var g = 0;
    f.positions = f.positions || {};
    var d = $uid(this);
    if(!f.positions[d])
    {
        var b = this;
        while ((b = b.previousSibling))
        {
            if(b.nodeType != 1)
            {
                continue
            }
            g++;
            var a = f.positions[$uid(b)];
            if(a != undefined)
            {
                g = a + g;
                break
            }
        }
        f.positions[d] = g
    }
    return(f.positions[d] % c.a == c.b)
}, index                            : function (a)
{
    var b = this, c = 0;
    while ((b = b.previousSibling))
    {
        if(b.nodeType == 1 && ++c > a)
        {
            return false
        }
    }
    return(c == a)
}, even                             : function (b, a)
{
    return Selectors.Pseudo["nth-child"].call(this, "2n+1", a)
}, odd                              : function (b, a)
{
    return Selectors.Pseudo["nth-child"].call(this, "2n", a)
}, selected                         : function ()
{
    return this.selected
}, enabled                          : function ()
{
    return(this.disabled === false)
}});
Element.Events.domready = {onAdd: function (a)
{
    if(Browser.loaded)
    {
        a.call(this)
    }
}};
(function ()
{
    var b = function ()
    {
        if(Browser.loaded)
        {
            return
        }
        Browser.loaded = true;
        window.fireEvent("domready");
        document.fireEvent("domready")
    };
    window.addEvent("load", b);
    if(Browser.Engine.trident)
    {
        var a = document.createElement("div");
        (function ()
        {
            ($try(function ()
            {
                a.doScroll();
                return document.id(a).inject(document.body).set("html", "temp").dispose()
            })) ? b() : arguments.callee.delay(50)
        })()
    } else
    {
        if(Browser.Engine.webkit && Browser.Engine.version < 525)
        {
            (function ()
            {
                (["loaded", "complete"].contains(document.readyState)) ? b() : arguments.callee.delay(50)
            })()
        } else
        {
            document.addEvent("DOMContentLoaded", b)
        }
    }
})();
var JSON = new Hash(this.JSON && {stringify: JSON.stringify, parse: JSON.parse}).extend({$specialChars: {"\b": "\\b", "\t": "\\t", "\n": "\\n", "\f": "\\f", "\r": "\\r", '"': '\\"', "\\": "\\\\"}, $replaceChars: function (a)
{
    return JSON.$specialChars[a] || "\\u00" + Math.floor(a.charCodeAt() / 16).toString(16) + (a.charCodeAt() % 16).toString(16)
}, encode                                                                                             : function (b)
{
    switch ($type(b))
    {
        case"string":
            return'"' + b.replace(/[\x00-\x1f\\"]/g, JSON.$replaceChars) + '"';
        case"array":
            return"[" + String(b.map(JSON.encode).clean()) + "]";
        case"object":
        case"hash":
            var a = [];
            Hash.each(b, function (f, d)
            {
                var c = JSON.encode(f);
                if(c)
                {
                    a.push(JSON.encode(d) + ":" + c)
                }
            });
            return"{" + a + "}";
        case"number":
        case"boolean":
            return String(b);
        case false:
            return"null"
    }
    return null
}, decode                                                                                             : function (string, secure)
{
    if($type(string) != "string" || !string.length)
    {
        return null
    }
    if(secure && !(/^[,:{}\[\]0-9.\-+Eaeflnr-u \n\r\t]*$/).test(string.replace(/\\./g, "@").replace(/"[^"\\\n\r]*"/g, "")))
    {
        return null
    }
    return eval("(" + string + ")")
}});
var Cookie = new Class({Implements: Options, options: {path: false, domain: false, duration: false, secure: false, document: document}, initialize: function (b, a)
{
    this.key = b;
    this.setOptions(a)
}, write                          : function (b)
{
    b = encodeURIComponent(b);
    if(this.options.domain)
    {
        b += "; domain=" + this.options.domain
    }
    if(this.options.path)
    {
        b += "; path=" + this.options.path
    }
    if(this.options.duration)
    {
        var a = new Date();
        a.setTime(a.getTime() + this.options.duration * 24 * 60 * 60 * 1000);
        b += "; expires=" + a.toGMTString()
    }
    if(this.options.secure)
    {
        b += "; secure"
    }
    this.options.document.cookie = this.key + "=" + b;
    return this
}, read                           : function ()
{
    var a = this.options.document.cookie.match("(?:^|;)\\s*" + this.key.escapeRegExp() + "=([^;]*)");
    return(a) ? decodeURIComponent(a[1]) : null
}, dispose                        : function ()
{
    new Cookie(this.key, $merge(this.options, {duration: -1})).write("");
    return this
}});
Cookie.write = function (b, c, a)
{
    return new Cookie(b, a).write(c)
};
Cookie.read = function (a)
{
    return new Cookie(a).read()
};
Cookie.dispose = function (b, a)
{
    return new Cookie(b, a).dispose()
};
var Swiff = new Class({Implements: [
    Options
], options                       : {id: null, height: 1, width: 1, container: null, properties: {}, params: {quality: "high", allowScriptAccess: "always", wMode: "transparent", swLiveConnect: true}, callBacks: {}, vars: {}}, toElement: function ()
{
    return this.object
}, initialize                    : function (m, n)
{
    this.instance = "Swiff_" + $time();
    this.setOptions(n);
    n = this.options;
    var b = this.id = n.id || this.instance;
    var a = document.id(n.container);
    Swiff.CallBacks[this.instance] = {};
    var f = n.params, h = n.vars, g = n.callBacks;
    var i = $extend({height: n.height, width: n.width}, n.properties);
    var l = this;
    for(var d in g)
    {
        Swiff.CallBacks[this.instance][d] = (function (o)
        {
            return function ()
            {
                return o.apply(l.object, arguments)
            }
        })(g[d]);
        h[d] = "Swiff.CallBacks." + this.instance + "." + d
    }
    f.flashVars = Hash.toQueryString(h);
    if(Browser.Engine.trident)
    {
        i.classid = "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000";
        f.movie = m
    } else
    {
        i.type = "application/x-shockwave-flash";
        i.data = m
    }
    var k = '<object id="' + b + '"';
    for(var j in i)
    {
        k += " " + j + '="' + i[j] + '"'
    }
    k += ">";
    for(var c in f)
    {
        if(f[c])
        {
            k += '<param name="' + c + '" value="' + f[c] + '" />'
        }
    }
    k += "</object>";
    this.object = ((a) ? a.empty() : new Element("div")).set("html", k).firstChild
}, replaces                      : function (a)
{
    a = document.id(a, true);
    a.parentNode.replaceChild(this.toElement(), a);
    return this
}, inject                        : function (a)
{
    document.id(a, true).appendChild(this.toElement());
    return this
}, remote                        : function ()
{
    return Swiff.remote.apply(Swiff, [this.toElement()].extend(arguments))
}});
Swiff.CallBacks = {};
Swiff.remote = function (obj, fn)
{
    var rs = obj.CallFunction('<invoke name="' + fn + '" returntype="javascript">' + __flash__argumentsToXML(arguments, 2) + "</invoke>");
    return eval(rs)
};
var Fx = new Class({Implements: [
    Chain, Events, Options
], options                    : {fps: 50, unit: false, duration: 500, link: "ignore"}, initialize: function (a)
{
    this.subject = this.subject || this;
    this.setOptions(a);
    this.options.duration = Fx.Durations[this.options.duration] || this.options.duration.toInt();
    var b = this.options.wait;
    if(b === false)
    {
        this.options.link = "cancel"
    }
}, getTransition              : function ()
{
    return function (a)
    {
        return -(Math.cos(Math.PI * a) - 1) / 2
    }
}, step                       : function ()
{
    var a = $time();
    if(a < this.time + this.options.duration)
    {
        var b = this.transition((a - this.time) / this.options.duration);
        this.set(this.compute(this.from, this.to, b))
    } else
    {
        this.set(this.compute(this.from, this.to, 1));
        this.complete()
    }
}, set                        : function (a)
{
    return a
}, compute                    : function (c, b, a)
{
    return Fx.compute(c, b, a)
}, check                      : function ()
{
    if(!this.timer)
    {
        return true
    }
    switch (this.options.link)
    {
        case"cancel":
            this.cancel();
            return true;
        case"chain":
            this.chain(this.caller.bind(this, arguments));
            return false
    }
    return false
}, start                      : function (b, a)
{
    if(!this.check(b, a))
    {
        return this
    }
    this.from = b;
    this.to = a;
    this.time = 0;
    this.transition = this.getTransition();
    this.startTimer();
    this.onStart();
    return this
}, complete                   : function ()
{
    if(this.stopTimer())
    {
        this.onComplete()
    }
    return this
}, cancel                     : function ()
{
    if(this.stopTimer())
    {
        this.onCancel()
    }
    return this
}, onStart                    : function ()
{
    this.fireEvent("start", this.subject)
}, onComplete                 : function ()
{
    this.fireEvent("complete", this.subject);
    if(!this.callChain())
    {
        this.fireEvent("chainComplete", this.subject)
    }
}, onCancel                   : function ()
{
    this.fireEvent("cancel", this.subject).clearChain()
}, pause                      : function ()
{
    this.stopTimer();
    return this
}, resume                     : function ()
{
    this.startTimer();
    return this
}, stopTimer                  : function ()
{
    if(!this.timer)
    {
        return false
    }
    this.time = $time() - this.time;
    this.timer = $clear(this.timer);
    return true
}, startTimer                 : function ()
{
    if(this.timer)
    {
        return false
    }
    this.time = $time() - this.time;
    this.timer = this.step.periodical(Math.round(1000 / this.options.fps), this);
    return true
}});
Fx.compute = function (c, b, a)
{
    return(b - c) * a + c
};
Fx.Durations = {"short": 250, normal: 500, "long": 1000};
Fx.CSS = new Class({Extends: Fx, prepare: function (d, f, b)
{
    b = $splat(b);
    var c = b[1];
    if(!$chk(c))
    {
        b[1] = b[0];
        b[0] = d.getStyle(f)
    }
    var a = b.map(this.parse);
    return{from: a[0], to: a[1]}
}, parse                   : function (a)
{
    a = $lambda(a)();
    a = (typeof a == "string") ? a.split(" ") : $splat(a);
    return a.map(function (c)
    {
        c = String(c);
        var b = false;
        Fx.CSS.Parsers.each(function (g, f)
        {
            if(b)
            {
                return
            }
            var d = g.parse(c);
            if($chk(d))
            {
                b = {value: d, parser: g}
            }
        });
        b = b || {value: c, parser: Fx.CSS.Parsers.String};
        return b
    })
}, compute                 : function (d, c, b)
{
    var a = [];
    (Math.min(d.length, c.length)).times(function (f)
    {
        a.push({value: d[f].parser.compute(d[f].value, c[f].value, b), parser: d[f].parser})
    });
    a.$family = {name: "fx:css:value"};
    return a
}, serve                   : function (c, b)
{
    if($type(c) != "fx:css:value")
    {
        c = this.parse(c)
    }
    var a = [];
    c.each(function (d)
    {
        a = a.concat(d.parser.serve(d.value, b))
    });
    return a
}, render                  : function (a, d, c, b)
{
    a.setStyle(d, this.serve(c, b))
}, search                  : function (a)
{
    if(Fx.CSS.Cache[a])
    {
        return Fx.CSS.Cache[a]
    }
    var b = {};
    Array.each(document.styleSheets, function (f, d)
    {
        var c = f.href;
        if(c && c.contains("://") && !c.contains(document.domain))
        {
            return
        }
        var g = f.rules || f.cssRules;
        Array.each(g, function (k, h)
        {
            if(!k.style)
            {
                return
            }
            var j = (k.selectorText) ? k.selectorText.replace(/^\w+/, function (i)
            {
                return i.toLowerCase()
            }) : null;
            if(!j || !j.test("^" + a + "$"))
            {
                return
            }
            Element.Styles.each(function (l, i)
            {
                if(!k.style[i] || Element.ShortStyles[i])
                {
                    return
                }
                l = String(k.style[i]);
                b[i] = (l.test(/^rgb/)) ? l.rgbToHex() : l
            })
        })
    });
    return Fx.CSS.Cache[a] = b
}});
Fx.CSS.Cache = {};
Fx.CSS.Parsers = new Hash({Color: {parse: function (a)
{
    if(a.match(/^#[0-9a-f]{3,6}$/i))
    {
        return a.hexToRgb(true)
    }
    return((a = a.match(/(\d+),\s*(\d+),\s*(\d+)/))) ? [a[1], a[2], a[3]] : false
}, compute                              : function (c, b, a)
{
    return c.map(function (f, d)
    {
        return Math.round(Fx.compute(c[d], b[d], a))
    })
}, serve                                : function (a)
{
    return a.map(Number)
}}, Number                      : {parse: parseFloat, compute: Fx.compute, serve: function (b, a)
{
    return(a) ? b + a : b
}}, String                      : {parse: $lambda(false), compute: $arguments(1), serve: $arguments(0)}});
Fx.Tween = new Class({Extends: Fx.CSS, initialize: function (b, a)
{
    this.element = this.subject = document.id(b);
    this.parent(a)
}, set                       : function (b, a)
{
    if(arguments.length == 1)
    {
        a = b;
        b = this.property || this.options.property
    }
    this.render(this.element, b, a, this.options.unit);
    return this
}, start                     : function (c, f, d)
{
    if(!this.check(c, f, d))
    {
        return this
    }
    var b = Array.flatten(arguments);
    this.property = this.options.property || b.shift();
    var a = this.prepare(this.element, this.property, b);
    return this.parent(a.from, a.to)
}});
Element.Properties.tween = {set: function (a)
{
    var b = this.retrieve("tween");
    if(b)
    {
        b.cancel()
    }
    return this.eliminate("tween").store("tween:options", $extend({link: "cancel"}, a))
}, get                         : function (a)
{
    if(a || !this.retrieve("tween"))
    {
        if(a || !this.retrieve("tween:options"))
        {
            this.set("tween", a)
        }
        this.store("tween", new Fx.Tween(this, this.retrieve("tween:options")))
    }
    return this.retrieve("tween")
}};
Element.implement({tween: function (a, c, b)
{
    this.get("tween").start(arguments);
    return this
}, fade                 : function (c)
{
    var f = this.get("tween"), d = "opacity", a;
    c = $pick(c, "toggle");
    switch (c)
    {
        case"in":
            f.start(d, 1);
            break;
        case"out":
            f.start(d, 0);
            break;
        case"show":
            f.set(d, 1);
            break;
        case"hide":
            f.set(d, 0);
            break;
        case"toggle":
            var b = this.retrieve("fade:flag", this.get("opacity") == 1);
            f.start(d, (b) ? 0 : 1);
            this.store("fade:flag", !b);
            a = true;
            break;
        default:
            f.start(d, arguments)
    }
    if(!a)
    {
        this.eliminate("fade:flag")
    }
    return this
}, highlight            : function (c, a)
{
    if(!a)
    {
        a = this.retrieve("highlight:original", this.getStyle("background-color"));
        a = (a == "transparent") ? "#fff" : a
    }
    var b = this.get("tween");
    b.start("background-color", c || "#ffff88", a).chain(function ()
    {
        this.setStyle("background-color", this.retrieve("highlight:original"));
        b.callChain()
    }.bind(this));
    return this
}});
Fx.Morph = new Class({Extends: Fx.CSS, initialize: function (b, a)
{
    this.element = this.subject = document.id(b);
    this.parent(a)
}, set                       : function (a)
{
    if(typeof a == "string")
    {
        a = this.search(a)
    }
    for(var b in a)
    {
        this.render(this.element, b, a[b], this.options.unit)
    }
    return this
}, compute                   : function (f, d, c)
{
    var a = {};
    for(var b in f)
    {
        a[b] = this.parent(f[b], d[b], c)
    }
    return a
}, start                     : function (b)
{
    if(!this.check(b))
    {
        return this
    }
    if(typeof b == "string")
    {
        b = this.search(b)
    }
    var f = {}, d = {};
    for(var c in b)
    {
        var a = this.prepare(this.element, c, b[c]);
        f[c] = a.from;
        d[c] = a.to
    }
    return this.parent(f, d)
}});
Element.Properties.morph = {set: function (a)
{
    var b = this.retrieve("morph");
    if(b)
    {
        b.cancel()
    }
    return this.eliminate("morph").store("morph:options", $extend({link: "cancel"}, a))
}, get                         : function (a)
{
    if(a || !this.retrieve("morph"))
    {
        if(a || !this.retrieve("morph:options"))
        {
            this.set("morph", a)
        }
        this.store("morph", new Fx.Morph(this, this.retrieve("morph:options")))
    }
    return this.retrieve("morph")
}};
Element.implement({morph: function (a)
{
    this.get("morph").start(a);
    return this
}});
Fx.implement({getTransition: function ()
{
    var a = this.options.transition || Fx.Transitions.Sine.easeInOut;
    if(typeof a == "string")
    {
        var b = a.split(":");
        a = Fx.Transitions;
        a = a[b[0]] || a[b[0].capitalize()];
        if(b[1])
        {
            a = a["ease" + b[1].capitalize() + (b[2] ? b[2].capitalize() : "")]
        }
    }
    return a
}});
Fx.Transition = function (b, a)
{
    a = $splat(a);
    return $extend(b, {easeIn: function (c)
    {
        return b(c, a)
    }, easeOut               : function (c)
    {
        return 1 - b(1 - c, a)
    }, easeInOut             : function (c)
    {
        return(c <= 0.5) ? b(2 * c, a) / 2 : (2 - b(2 * (1 - c), a)) / 2
    }})
};
Fx.Transitions = new Hash({linear: $arguments(0)});
Fx.Transitions.extend = function (a)
{
    for(var b in a)
    {
        Fx.Transitions[b] = new Fx.Transition(a[b])
    }
};
Fx.Transitions.extend({Pow: function (b, a)
{
    return Math.pow(b, a[0] || 6)
}, Expo                   : function (a)
{
    return Math.pow(2, 8 * (a - 1))
}, Circ                   : function (a)
{
    return 1 - Math.sin(Math.acos(a))
}, Sine                   : function (a)
{
    return 1 - Math.sin((1 - a) * Math.PI / 2)
}, Back                   : function (b, a)
{
    a = a[0] || 1.618;
    return Math.pow(b, 2) * ((a + 1) * b - a)
}, Bounce                 : function (g)
{
    var f;
    for(var d = 0, c = 1; 1; d += c, c /= 2)
    {
        if(g >= (7 - 4 * d) / 11)
        {
            f = c * c - Math.pow((11 - 6 * d - 11 * g) / 4, 2);
            break
        }
    }
    return f
}, Elastic                : function (b, a)
{
    return Math.pow(2, 10 * --b) * Math.cos(20 * b * Math.PI * (a[0] || 1) / 3)
}});
["Quad", "Cubic", "Quart", "Quint"].each(function (b, a)
{
    Fx.Transitions[b] = new Fx.Transition(function (c)
    {
        return Math.pow(c, [a + 2])
    })
});
var Request = new Class({Implements: [
    Chain, Events, Options
], options                         : {url: "", data: "", headers: {"X-Requested-With": "XMLHttpRequest", Accept: "text/javascript, text/html, application/xml, text/xml, */*"}, async: true, format: false, method: "post", link: "ignore", isSuccess: null, emulation: true, urlEncoded: true, encoding: "utf-8", evalScripts: false, evalResponse: false, noCache: false}, initialize: function (a)
{
    this.xhr = new Browser.Request();
    this.setOptions(a);
    this.options.isSuccess = this.options.isSuccess || this.isSuccess;
    this.headers = new Hash(this.options.headers)
}, onStateChange                   : function ()
{
    if(this.xhr.readyState != 4 || !this.running)
    {
        return
    }
    this.running = false;
    this.status = 0;
    $try(function ()
    {
        this.status = this.xhr.status
    }.bind(this));
    this.xhr.onreadystatechange = $empty;
    if(this.options.isSuccess.call(this, this.status))
    {
        this.response = {text: this.xhr.responseText, xml: this.xhr.responseXML};
        this.success(this.response.text, this.response.xml)
    } else
    {
        this.response = {text: null, xml: null};
        this.failure()
    }
}, isSuccess                       : function ()
{
    return((this.status >= 200) && (this.status < 300))
}, processScripts                  : function (a)
{
    if(this.options.evalResponse || (/(ecma|java)script/).test(this.getHeader("Content-type")))
    {
        return $exec(a)
    }
    return a.stripScripts(this.options.evalScripts)
}, success                         : function (b, a)
{
    this.onSuccess(this.processScripts(b), a)
}, onSuccess                       : function ()
{
    this.fireEvent("complete", arguments).fireEvent("success", arguments).callChain()
}, failure                         : function ()
{
    this.onFailure()
}, onFailure                       : function ()
{
    this.fireEvent("complete").fireEvent("failure", this.xhr)
}, setHeader                       : function (a, b)
{
    this.headers.set(a, b);
    return this
}, getHeader                       : function (a)
{
    return $try(function ()
    {
        return this.xhr.getResponseHeader(a)
    }.bind(this))
}, check                           : function ()
{
    if(!this.running)
    {
        return true
    }
    switch (this.options.link)
    {
        case"cancel":
            this.cancel();
            return true;
        case"chain":
            this.chain(this.caller.bind(this, arguments));
            return false
    }
    return false
}, send                            : function (l)
{
    if(!this.check(l))
    {
        return this
    }
    this.running = true;
    var j = $type(l);
    if(j == "string" || j == "element")
    {
        l = {data: l}
    }
    var d = this.options;
    l = $extend({data: d.data, url: d.url, method: d.method}, l);
    var h = l.data, b = String(l.url), a = l.method.toLowerCase();
    switch ($type(h))
    {
        case"element":
            h = document.id(h).toQueryString();
            break;
        case"object":
        case"hash":
            h = Hash.toQueryString(h)
    }
    if(this.options.format)
    {
        var k = "format=" + this.options.format;
        h = (h) ? k + "&" + h : k
    }
    if(this.options.emulation && !["get", "post"].contains(a))
    {
        var i = "_method=" + a;
        h = (h) ? i + "&" + h : i;
        a = "post"
    }
    if(this.options.urlEncoded && a == "post")
    {
        var c = (this.options.encoding) ? "; charset=" + this.options.encoding : "";
        this.headers.set("Content-type", "application/x-www-form-urlencoded" + c)
    }
    if(this.options.noCache)
    {
        var g = "noCache=" + new Date().getTime();
        h = (h) ? g + "&" + h : g
    }
    var f = b.lastIndexOf("/");
    if(f > -1 && (f = b.indexOf("#")) > -1)
    {
        b = b.substr(0, f)
    }
    if(h && a == "get")
    {
        b = b + (b.contains("?") ? "&" : "?") + h;
        h = null
    }
    this.xhr.open(a.toUpperCase(), b, this.options.async);
    this.xhr.onreadystatechange = this.onStateChange.bind(this);
    this.headers.each(function (n, m)
    {
        try
        {
            this.xhr.setRequestHeader(m, n)
        }
        catch (o)
        {
            this.fireEvent("exception", [m, n])
        }
    }, this);
    this.fireEvent("request");
    this.xhr.send(h);
    if(!this.options.async)
    {
        this.onStateChange()
    }
    return this
}, cancel                          : function ()
{
    if(!this.running)
    {
        return this
    }
    this.running = false;
    this.xhr.abort();
    this.xhr.onreadystatechange = $empty;
    this.xhr = new Browser.Request();
    this.fireEvent("cancel");
    return this
}});
(function ()
{
    var a = {};
    ["get", "post", "put", "delete", "GET", "POST", "PUT", "DELETE"].each(function (b)
    {
        a[b] = function ()
        {
            var c = Array.link(arguments, {url: String.type, data: $defined});
            return this.send($extend(c, {method: b}))
        }
    });
    Request.implement(a)
})();
Element.Properties.send = {set: function (a)
{
    var b = this.retrieve("send");
    if(b)
    {
        b.cancel()
    }
    return this.eliminate("send").store("send:options", $extend({data: this, link: "cancel", method: this.get("method") || "post", url: this.get("action")}, a))
}, get                        : function (a)
{
    if(a || !this.retrieve("send"))
    {
        if(a || !this.retrieve("send:options"))
        {
            this.set("send", a)
        }
        this.store("send", new Request(this.retrieve("send:options")))
    }
    return this.retrieve("send")
}};
Element.implement({send: function (a)
{
    var b = this.get("send");
    b.send({data: this, url: a || b.options.url});
    return this
}});
Request.HTML = new Class({Extends: Request, options: {update: false, append: false, evalScripts: true, filter: false}, processHTML: function (c)
{
    var b = c.match(/<body[^>]*>([\s\S]*?)<\/body>/i);
    c = (b) ? b[1] : c;
    var a = new Element("div");
    return $try(function ()
    {
        var d = "<root>" + c + "</root>", h;
        if(Browser.Engine.trident)
        {
            h = new ActiveXObject("Microsoft.XMLDOM");
            h.async = false;
            h.loadXML(d)
        } else
        {
            h = new DOMParser().parseFromString(d, "text/xml")
        }
        d = h.getElementsByTagName("root")[0];
        if(!d)
        {
            return null
        }
        for(var g = 0, f = d.childNodes.length; g < f; g++)
        {
            var j = Element.clone(d.childNodes[g], true, true);
            if(j)
            {
                a.grab(j)
            }
        }
        return a
    }) || a.set("html", c)
}, success                       : function (d)
{
    var c = this.options, b = this.response;
    b.html = d.stripScripts(function (f)
    {
        b.javascript = f
    });
    var a = this.processHTML(b.html);
    b.tree = a.childNodes;
    b.elements = a.getElements("*");
    if(c.filter)
    {
        b.tree = b.elements.filter(c.filter)
    }
    if(c.update)
    {
        document.id(c.update).empty().set("html", b.html)
    } else
    {
        if(c.append)
        {
            document.id(c.append).adopt(a.getChildren())
        }
    }
    if(c.evalScripts)
    {
        $exec(b.javascript)
    }
    this.onSuccess(b.tree, b.elements, b.html, b.javascript)
}});
Element.Properties.load = {set: function (a)
{
    var b = this.retrieve("load");
    if(b)
    {
        b.cancel()
    }
    return this.eliminate("load").store("load:options", $extend({data: this, link: "cancel", update: this, method: "get"}, a))
}, get                        : function (a)
{
    if(a || !this.retrieve("load"))
    {
        if(a || !this.retrieve("load:options"))
        {
            this.set("load", a)
        }
        this.store("load", new Request.HTML(this.retrieve("load:options")))
    }
    return this.retrieve("load")
}};
Element.implement({load: function ()
{
    this.get("load").send(Array.link(arguments, {data: Object.type, url: String.type}));
    return this
}});
Request.JSON = new Class({Extends: Request, options: {secure: true}, initialize: function (a)
{
    this.parent(a);
    this.headers.extend({Accept: "application/json", "X-Request": "JSON"})
}, success                       : function (a)
{
    this.response.json = JSON.decode(a, this.options.secure);
    this.onSuccess(this.response.json, a)
}});
/* MooTools More, <http://mootools.net/more>. Copyright (c) 2006-2009 Aaron Newton <http://clientcide.com/>, Valerio Proietti <http://mad4milk.net> & the MooTools team <http://mootools.net/developers>, MIT Style License. */
MooTools.More = {version: "1.2.4.4", build: "6f6057dc645fdb7547689183b2311063bd653ddf"};
(function ()
{
    var a = {language: "en-US", languages: {"en-US": {}}, cascades: ["en-US"]};
    var b;
    MooTools.lang = new Events();
    $extend(MooTools.lang, {setLanguage: function (c)
    {
        if(!a.languages[c])
        {
            return this
        }
        a.language = c;
        this.load();
        this.fireEvent("langChange", c);
        return this
    }, load                            : function ()
    {
        var c = this.cascade(this.getCurrentLanguage());
        b = {};
        $each(c, function (f, d)
        {
            b[d] = this.lambda(f)
        }, this)
    }, getCurrentLanguage              : function ()
    {
        return a.language
    }, addLanguage                     : function (c)
    {
        a.languages[c] = a.languages[c] || {};
        return this
    }, cascade                         : function (f)
    {
        var c = (a.languages[f] || {}).cascades || [];
        c.combine(a.cascades);
        c.erase(f).push(f);
        var d = c.map(function (g)
        {
            return a.languages[g]
        }, this);
        return $merge.apply(this, d)
    }, lambda                          : function (c)
    {
        (c || {}).get = function (f, d)
        {
            return $lambda(c[f]).apply(this, $splat(d))
        };
        return c
    }, get                             : function (f, d, c)
    {
        if(b && b[f])
        {
            return(d ? b[f].get(d, c) : b[f])
        }
    }, set                             : function (d, f, c)
    {
        this.addLanguage(d);
        langData = a.languages[d];
        if(!langData[f])
        {
            langData[f] = {}
        }
        $extend(langData[f], c);
        if(d == this.getCurrentLanguage())
        {
            this.load();
            this.fireEvent("langChange", d)
        }
        return this
    }, list                            : function ()
    {
        return Hash.getKeys(a.languages)
    }})
})();
(function ()
{
    var c = this;
    var b = function ()
    {
        if(c.console && console.log)
        {
            try
            {
                console.log.apply(console, arguments)
            }
            catch (d)
            {
                console.log(Array.slice(arguments))
            }
        } else
        {
            Log.logged.push(arguments)
        }
        return this
    };
    var a = function ()
    {
        this.logged.push(arguments);
        return this
    };
    this.Log = new Class({logged: [], log: a, resetLog: function ()
    {
        this.logged.empty();
        return this
    }, enableLog                : function ()
    {
        this.log = b;
        this.logged.each(function (d)
        {
            this.log.apply(this, d)
        }, this);
        return this.resetLog()
    }, disableLog               : function ()
    {
        this.log = a;
        return this
    }});
    Log.extend(new Log).enableLog();
    Log.logger = function ()
    {
        return this.log.apply(this, arguments)
    }
})();
Class.refactor = function (b, a)
{
    $each(a, function (f, d)
    {
        var c = b.prototype[d];
        if(c && (c = c._origin) && typeof f == "function")
        {
            b.implement(d, function ()
            {
                var g = this.previous;
                this.previous = c;
                var h = f.apply(this, arguments);
                this.previous = g;
                return h
            })
        } else
        {
            b.implement(d, f)
        }
    });
    return b
};
Class.Mutators.Binds = function (a)
{
    return a
};
Class.Mutators.initialize = function (a)
{
    return function ()
    {
        $splat(this.Binds).each(function (b)
        {
            var c = this[b];
            if(c)
            {
                this[b] = c.bind(this)
            }
        }, this);
        return a.apply(this, arguments)
    }
};
Class.Occlude = new Class({occlude: function (c, b)
{
    b = document.id(b || this.element);
    var a = b.retrieve(c || this.property);
    if(a && !$defined(this.occluded))
    {
        return this.occluded = a
    }
    this.occluded = false;
    b.store(c || this.property, this);
    return this.occluded
}});
(function ()
{
    var a = {wait: function (b)
    {
        return this.chain(function ()
        {
            this.callChain.delay($pick(b, 500), this)
        }.bind(this))
    }};
    Chain.implement(a);
    if(window.Fx)
    {
        Fx.implement(a);
        ["Css", "Tween", "Elements"].each(function (b)
        {
            if(Fx[b])
            {
                Fx[b].implement(a)
            }
        })
    }
    Element.implement({chains: function (b)
    {
        $splat($pick(b, ["tween", "morph", "reveal"])).each(function (c)
        {
            c = this.get(c);
            if(!c)
            {
                return
            }
            c.setOptions({link: "chain"})
        }, this);
        return this
    }, pauseFx               : function (c, b)
    {
        this.chains(b).get($pick(b, "tween")).wait(c);
        return this
    }})
})();
String.implement({parseQueryString: function ()
{
    var b = this.split(/[&;]/), a = {};
    if(b.length)
    {
        b.each(function (h)
        {
            var c = h.indexOf("="), d = c < 0 ?
                [""] : h.substr(0, c).match(/[^\]\[]+/g), f = decodeURIComponent(h.substr(c + 1)), g = a;
            d.each(function (k, j)
            {
                var l = g[k];
                if(j < d.length - 1)
                {
                    g = g[k] = l || {}
                } else
                {
                    if($type(l) == "array")
                    {
                        l.push(f)
                    } else
                    {
                        g[k] = $defined(l) ? [l, f] : f
                    }
                }
            })
        })
    }
    return a
}, cleanQueryString               : function (a)
{
    return this.split("&").filter(function (f)
    {
        var b = f.indexOf("="), c = b < 0 ? "" : f.substr(0, b), d = f.substr(b + 1);
        return a ? a.run([c, d]) : $chk(d)
    }).join("&")
}});
Element.implement({tidy: function ()
{
    this.set("value", this.get("value").tidy())
}, getTextInRange      : function (b, a)
{
    return this.get("value").substring(b, a)
}, getSelectedText     : function ()
{
    if(this.setSelectionRange)
    {
        return this.getTextInRange(this.getSelectionStart(), this.getSelectionEnd())
    }
    return document.selection.createRange().text
}, getSelectedRange    : function ()
{
    if($defined(this.selectionStart))
    {
        return{start: this.selectionStart, end: this.selectionEnd}
    }
    var f = {start: 0, end: 0};
    var a = this.getDocument().selection.createRange();
    if(!a || a.parentElement() != this)
    {
        return f
    }
    var c = a.duplicate();
    if(this.type == "text")
    {
        f.start = 0 - c.moveStart("character", -100000);
        f.end = f.start + a.text.length
    } else
    {
        var b = this.get("value");
        var d = b.length;
        c.moveToElementText(this);
        c.setEndPoint("StartToEnd", a);
        if(c.text.length)
        {
            d -= b.match(/[\n\r]*$/)[0].length
        }
        f.end = d - c.text.length;
        c.setEndPoint("StartToStart", a);
        f.start = d - c.text.length
    }
    return f
}, getSelectionStart   : function ()
{
    return this.getSelectedRange().start
}, getSelectionEnd     : function ()
{
    return this.getSelectedRange().end
}, setCaretPosition    : function (a)
{
    if(a == "end")
    {
        a = this.get("value").length
    }
    this.selectRange(a, a);
    return this
}, getCaretPosition    : function ()
{
    return this.getSelectedRange().start
}, selectRange         : function (f, a)
{
    if(this.setSelectionRange)
    {
        this.focus();
        this.setSelectionRange(f, a)
    } else
    {
        var c = this.get("value");
        var d = c.substr(f, a - f).replace(/\r/g, "").length;
        f = c.substr(0, f).replace(/\r/g, "").length;
        var b = this.createTextRange();
        b.collapse(true);
        b.moveEnd("character", f + d);
        b.moveStart("character", f);
        b.select()
    }
    return this
}, insertAtCursor      : function (b, a)
{
    var d = this.getSelectedRange();
    var c = this.get("value");
    this.set("value", c.substring(0, d.start) + b + c.substring(d.end, c.length));
    if($pick(a, true))
    {
        this.selectRange(d.start, d.start + b.length)
    } else
    {
        this.setCaretPosition(d.start + b.length)
    }
    return this
}, insertAroundCursor  : function (b, a)
{
    b = $extend({before: "", defaultMiddle: "", after: ""}, b);
    var c = this.getSelectedText() || b.defaultMiddle;
    var h = this.getSelectedRange();
    var g = this.get("value");
    if(h.start == h.end)
    {
        this.set("value", g.substring(0, h.start) + b.before + c + b.after + g.substring(h.end, g.length));
        this.selectRange(h.start + b.before.length, h.end + b.before.length + c.length)
    } else
    {
        var d = g.substring(h.start, h.end);
        this.set("value", g.substring(0, h.start) + b.before + d + b.after + g.substring(h.end, g.length));
        var f = h.start + b.before.length;
        if($pick(a, true))
        {
            this.selectRange(f, f + d.length)
        } else
        {
            this.setCaretPosition(f + g.length)
        }
    }
    return this
}});


Elements.from = function (f, d)
{
    if($pick(d, true))
    {
        f = f.stripScripts()
    }
    var b, c = f.match(/^\s*<(t[dhr]|tbody|tfoot|thead)/i);
    if(c)
    {
        b = new Element("table");
        var a = c[1].toLowerCase();
        if(["td", "th", "tr"].contains(a))
        {
            b = new Element("tbody").inject(b);
            if(a != "tr")
            {
                b = new Element("tr").inject(b)
            }
        }
    }
    return(b || new Element("div")).set("html", f).getChildren()
};
Element.implement({measure: function (f)
{
    var h = function (i)
    {
        return !!(!i || i.offsetHeight || i.offsetWidth)
    };
    if(h(this))
    {
        return f.apply(this)
    }
    var d = this.getParent(), g = [], b = [];
    while (!h(d) && d != document.body)
    {
        b.push(d.expose());
        d = d.getParent()
    }
    var c = this.expose();
    var a = f.apply(this);
    c();
    b.each(function (i)
    {
        i()
    });
    return a
}, expose                 : function ()
{
    if(this.getStyle("display") != "none")
    {
        return $empty
    }
    var a = this.style.cssText;
    this.setStyles({display: "block", position: "absolute", visibility: "hidden"});
    return function ()
    {
        this.style.cssText = a
    }.bind(this)
}, getDimensions          : function (a)
{
    a = $merge({computeSize: false}, a);
    var f = {};
    var d = function (h, g)
    {
        return(g.computeSize) ? h.getComputedSize(g) : h.getSize()
    };
    var b = this.getParent("body");
    if(b && this.getStyle("display") == "none")
    {
        f = this.measure(function ()
        {
            return d(this, a)
        })
    } else
    {
        if(b)
        {
            try
            {
                f = d(this, a)
            }
            catch (c)
            {
            }
        } else
        {
            f = {x: 0, y: 0}
        }
    }
    return $chk(f.x) ? $extend(f, {width: f.x, height: f.y}) : $extend(f, {x: f.width, y: f.height})
}, getComputedSize        : function (a)
{
    a = $merge({styles: ["padding", "border"], plains: {height: ["top", "bottom"], width: [
        "left", "right"
    ]}, mode          : "both"}, a);
    var c = {width: 0, height: 0};
    switch (a.mode)
    {
        case"vertical":
            delete c.width;
            delete a.plains.width;
            break;
        case"horizontal":
            delete c.height;
            delete a.plains.height;
            break
    }
    var b = [];
    $each(a.plains, function (h, g)
    {
        h.each(function (i)
        {
            a.styles.each(function (j)
            {
                b.push((j == "border") ? j + "-" + i + "-width" : j + "-" + i)
            })
        })
    });
    var f = {};
    b.each(function (g)
    {
        f[g] = this.getComputedStyle(g)
    }, this);
    var d = [];
    $each(a.plains, function (h, g)
    {
        var i = g.capitalize();
        c["total" + i] = c["computed" + i] = 0;
        h.each(function (j)
        {
            c["computed" + j.capitalize()] = 0;
            b.each(function (l, k)
            {
                if(l.test(j))
                {
                    f[l] = f[l].toInt() || 0;
                    c["total" + i] = c["total" + i] + f[l];
                    c["computed" + j.capitalize()] = c["computed" + j.capitalize()] + f[l]
                }
                if(l.test(j) && g != l && (l.test("border") || l.test("padding")) && !d.contains(l))
                {
                    d.push(l);
                    c["computed" + i] = c["computed" + i] - f[l]
                }
            })
        })
    });
    ["Width", "Height"].each(function (h)
    {
        var g = h.toLowerCase();
        if(!$chk(c[g]))
        {
            return
        }
        c[g] = c[g] + this["offset" + h] + c["computed" + h];
        c["total" + h] = c[g] + c["total" + h];
        delete c["computed" + h]
    }, this);
    return $extend(f, c)
}});
(function ()
{
    var a = Element.prototype.position;
    Element.implement({position: function (h)
    {
        if(h && ($defined(h.x) || $defined(h.y)))
        {
            return a ? a.apply(this, arguments) : this
        }
        $each(h || {}, function (w, u)
        {
            if(!$defined(w))
            {
                delete h[u]
            }
        });
        h = $merge({relativeTo: document.body, position: {x: "center", y: "center"}, edge: false, offset: {x: 0, y: 0}, returnPos: false, relFixedPosition: false, ignoreMargins: false, ignoreScroll: false, allowNegative: false}, h);
        var s = {x: 0, y: 0}, f = false;
        var c = this.measure(function ()
        {
            return document.id(this.getOffsetParent())
        });
        if(c && c != this.getDocument().body)
        {
            s = c.measure(function ()
            {
                return this.getPosition()
            });
            f = c != document.id(h.relativeTo);
            h.offset.x = h.offset.x - s.x;
            h.offset.y = h.offset.y - s.y
        }
        var t = function (u)
        {
            if($type(u) != "string")
            {
                return u
            }
            u = u.toLowerCase();
            var v = {};
            if(u.test("left"))
            {
                v.x = "left"
            } else
            {
                if(u.test("right"))
                {
                    v.x = "right"
                } else
                {
                    v.x = "center"
                }
            }
            if(u.test("upper") || u.test("top"))
            {
                v.y = "top"
            } else
            {
                if(u.test("bottom"))
                {
                    v.y = "bottom"
                } else
                {
                    v.y = "center"
                }
            }
            return v
        };
        h.edge = t(h.edge);
        h.position = t(h.position);
        if(!h.edge)
        {
            if(h.position.x == "center" && h.position.y == "center")
            {
                h.edge = {x: "center", y: "center"}
            } else
            {
                h.edge = {x: "left", y: "top"}
            }
        }
        this.setStyle("position", "absolute");
        var g = document.id(h.relativeTo) || document.body, d = g == document.body ? window.getScroll() : g.getPosition(), m = d.y, i = d.x;
        var o = this.getDimensions({computeSize: true, styles: ["padding", "border", "margin"]});
        var k = {}, p = h.offset.y, r = h.offset.x, l = window.getSize();
        switch (h.position.x)
        {
            case"left":
                k.x = i + r;
                break;
            case"right":
                k.x = i + r + g.offsetWidth;
                break;
            default:
                k.x = i + ((g == document.body ? l.x : g.offsetWidth) / 2) + r;
                break
        }
        switch (h.position.y)
        {
            case"top":
                k.y = m + p;
                break;
            case"bottom":
                k.y = m + p + g.offsetHeight;
                break;
            default:
                k.y = m + ((g == document.body ? l.y : g.offsetHeight) / 2) + p;
                break
        }
        if(h.edge)
        {
            var b = {};
            switch (h.edge.x)
            {
                case"left":
                    b.x = 0;
                    break;
                case"right":
                    b.x = -o.x - o.computedRight - o.computedLeft;
                    break;
                default:
                    b.x = -(o.totalWidth / 2);
                    break
            }
            switch (h.edge.y)
            {
                case"top":
                    b.y = 0;
                    break;
                case"bottom":
                    b.y = -o.y - o.computedTop - o.computedBottom;
                    break;
                default:
                    b.y = -(o.totalHeight / 2);
                    break
            }
            k.x += b.x;
            k.y += b.y
        }
        k = {left: ((k.x >= 0 || f || h.allowNegative) ? k.x : 0).toInt(), top: ((k.y >= 0 || f || h.allowNegative) ? k.y : 0).toInt()};
        var j = {left: "x", top: "y"};
        ["minimum", "maximum"].each(function (u)
        {
            ["left", "top"].each(function (v)
            {
                var w = h[u] ? h[u][j[v]] : null;
                if(w != null && k[v] < w)
                {
                    k[v] = w
                }
            })
        });
        if(g.getStyle("position") == "fixed" || h.relFixedPosition)
        {
            var n = window.getScroll();
            k.top += n.y;
            k.left += n.x
        }
        if(h.ignoreScroll)
        {
            var q = g.getScroll();
            k.top -= q.y;
            k.left -= q.x
        }
        if(h.ignoreMargins)
        {
            k.left += (h.edge.x == "right" ? o["margin-right"] : h.edge.x == "center" ? -o["margin-left"] + ((o["margin-right"] + o["margin-left"]) / 2) : -o["margin-left"]);
            k.top += (h.edge.y == "bottom" ? o["margin-bottom"] : h.edge.y == "center" ? -o["margin-top"] + ((o["margin-bottom"] + o["margin-top"]) / 2) : -o["margin-top"])
        }
        k.left = Math.ceil(k.left);
        k.top = Math.ceil(k.top);
        if(h.returnPos)
        {
            return k
        } else
        {
            this.setStyles(k)
        }
        return this
    }})
})();

////    @ Didrik fixed bug / REMOVED
//Element.implement({isDisplayed: function ()
//{
//    return this.getStyle("display") != "none"
//}, isVisible                  : function ()
//{
//    var a = this.offsetWidth, b = this.offsetHeight;
//    return(a == 0 && b == 0) ? false : (a > 0 && b > 0) ? true : this.isDisplayed()
//}, toggle                     : function ()
//{
//    return this[this.isDisplayed() ? "hide" : "show"]()
//}, hide                       : function ()
//{
//    var b;
//    try
//    {
//        b = this.getStyle("display")
//    }
//    catch (a)
//    {
//    }
//

//    return this.store("originalDisplay", b || "").setStyle("display", "block")
//}, show                       : function (a)
//{
//    a = a || this.retrieve("originalDisplay") || "block";
//    return this.setStyle("display", (a == "none") ? "block" : a)
//}, swapClass                  : function (a, b)
//{
//    return this.removeClass(a).addClass(b)
//}});
if(!window.Form)
{
    window.Form = {}
}
(function ()
{
    Form.Request = new Class({Binds: ["onSubmit", "onFormValidate"], Implements: [
        Options, Events, Class.Occlude
    ], options                     : {requestOptions: {evalScripts: true, useSpinner: true, emulation: false, link: "ignore"}, extraData: {}, resetForm: true}, property: "form.request", initialize: function (b, c, a)
    {
        this.element = document.id(b);
        if(this.occlude())
        {
            return this.occluded
        }
        this.update = document.id(c);
        this.setOptions(a);
        this.makeRequest();
        if(this.options.resetForm)
        {
            this.request.addEvent("success", function ()
            {
                $try(function ()
                {
                    this.element.reset()
                }.bind(this));
                if(window.OverText)
                {
                    OverText.update()
                }
            }.bind(this))
        }
        this.attach()
    }, toElement                   : function ()
    {
        return this.element
    }, makeRequest                 : function ()
    {
        this.request = new Request.HTML($merge({update: this.update, emulation: false, spinnerTarget: this.element, method: this.element.get("method") || "post"}, this.options.requestOptions)).addEvents({success: function (b, a)
        {
            ["complete", "success"].each(function (c)
            {
                this.fireEvent(c, [this.update, b, a])
            }, this)
        }.bind(this), failure                                                                                                                                                                                      : function (a)
        {
            this.fireEvent("complete").fireEvent("failure", a)
        }.bind(this), exception                                                                                                                                                                                    : function ()
        {
            this.fireEvent("failure", xhr)
        }.bind(this)})
    }, attach                      : function (a)
    {
        a = $pick(a, true);
        method = a ? "addEvent" : "removeEvent";
        var b = this.element.retrieve("validator");
        if(b)
        {
            b[method]("onFormValidate", this.onFormValidate)
        }
        if(!b || !a)
        {
            this.element[method]("submit", this.onSubmit)
        }
    }, detach                      : function ()
    {
        this.attach(false)
    }, enable                      : function ()
    {
        this.attach()
    }, disable                     : function ()
    {
        this.detach()
    }, onFormValidate              : function (b, a, d)
    {
        var c = this.element.retrieve("validator");
        if(b || (c && !c.options.stopOnFailure))
        {
            if(d && d.stop)
            {
                d.stop()
            }
            this.send()
        }
    }, onSubmit                    : function (a)
    {
        if(this.element.retrieve("validator"))
        {
            this.detach();
            return
        }
        a.stop();
        this.send()
    }, send                        : function ()
    {
        var b = this.element.toQueryString().trim();
        var a = $H(this.options.extraData).toQueryString();
        if(b)
        {
            b += "&" + a
        } else
        {
            b = a
        }
        this.fireEvent("send", [this.element, b.parseQueryString()]);
        this.request.send({data: b, url: this.element.get("action")});
        return this
    }});
    Element.Properties.formRequest = {set: function ()
    {
        var a = Array.link(arguments, {options: Object.type, update: Element.type, updateId: String.type});
        var c = a.update || a.updateId;
        var b = this.retrieve("form.request");
        if(c)
        {
            if(b)
            {
                b.update = document.id(c)
            }
            this.store("form.request:update", c)
        }
        if(a.options)
        {
            if(b)
            {
                b.setOptions(a.options)
            }
            this.store("form.request:options", a.options)
        }
        return this
    }, get                               : function ()
    {
        var a = Array.link(arguments, {options: Object.type, update: Element.type, updateId: String.type});
        var b = a.update || a.updateId;
        if(a.options || b || !this.retrieve("form.request"))
        {
            if(a.options || !this.retrieve("form.request:options"))
            {
                this.set("form.request", a.options)
            }
            if(b)
            {
                this.set("form.request", b)
            }
            this.store("form.request", new Form.Request(this, this.retrieve("form.request:update"), this.retrieve("form.request:options")))
        }
        return this.retrieve("form.request")
    }};
    Element.implement({formUpdate: function (b, a)
    {
        this.get("form.request", b, a).send();
        return this
    }})
})();
Form.Request.Append = new Class({Extends: Form.Request, options: {useReveal: true, revealOptions: {}, inject: "bottom"}, makeRequest: function ()
{
    this.request = new Request.HTML($merge({url: this.element.get("action"), method: this.element.get("method") || "post", spinnerTarget: this.element}, this.options.requestOptions, {evalScripts: false})).addEvents({success: function (b, h, g, a)
    {
        var c;
        var d = Elements.from(g);
        if(d.length == 1)
        {
            c = d[0]
        } else
        {
            c = new Element("div", {styles: {display: "none"}}).adopt(d)
        }
        c.inject(this.update, this.options.inject);
        if(this.options.requestOptions.evalScripts)
        {
            $exec(a)
        }
        this.fireEvent("beforeEffect", c);
        var f = function ()
        {
            this.fireEvent("success", [c, this.update, b, h, g, a])
        }.bind(this);
        if(this.options.useReveal)
        {
            c.get("reveal", this.options.revealOptions).chain(f);
            c.reveal()
        } else
        {
            f()
        }
    }.bind(this), failure                                                                                                                                                                                                      : function (a)
    {
        this.fireEvent("failure", a)
    }.bind(this)})
}});
Fx.Elements = new Class({Extends: Fx.CSS, initialize: function (b, a)
{
    this.elements = this.subject = $$(b);
    this.parent(a)
}, compute                      : function (h, j, k)
{
    var c = {};
    for(var d in h)
    {
        var a = h[d], f = j[d], g = c[d] = {};
        for(var b in a)
        {
            g[b] = this.parent(a[b], f[b], k)
        }
    }
    return c
}, set                          : function (b)
{
    for(var c in b)
    {
        var a = b[c];
        for(var d in a)
        {
            this.render(this.elements[c], d, a[d], this.options.unit)
        }
    }
    return this
}, start                        : function (c)
{
    if(!this.check(c))
    {
        return this
    }
    var j = {}, k = {};
    for(var d in c)
    {
        var g = c[d], a = j[d] = {}, h = k[d] = {};
        for(var b in g)
        {
            var f = this.prepare(this.elements[d], b, g[b]);
            a[b] = f.from;
            h[b] = f.to
        }
    }
    return this.parent(j, k)
}});
Fx.Accordion = new Class({Extends: Fx.Elements, options: {display: 0, show: false, height: true, width: false, opacity: true, alwayshide: false, trigger: "click", initialDisplayFx: true, returnHeightToAuto: true}, initialize: function ()
{
    var c = Array.link(arguments, {container: Element.type, options: Object.type, togglers: $defined, elements: $defined});
    this.parent(c.elements, c.options);
    this.togglers = $$(c.togglers);
    this.previous = -1;
    this.internalChain = new Chain();
    if(this.options.alwayshide)
    {
        this.options.wait = true
    }
    if($chk(this.options.show))
    {
        this.options.display = false;
        this.previous = this.options.show
    }
    if(this.options.start)
    {
        this.options.display = false;
        this.options.show = false
    }
    this.effects = {};
    if(this.options.opacity)
    {
        this.effects.opacity = "fullOpacity"
    }
    if(this.options.width)
    {
        this.effects.width = this.options.fixedWidth ? "fullWidth" : "offsetWidth"
    }
    if(this.options.height)
    {
        this.effects.height = this.options.fixedHeight ? "fullHeight" : "scrollHeight"
    }
    for(var b = 0, a = this.togglers.length; b < a; b++)
    {
        this.addSection(this.togglers[b], this.elements[b])
    }
    this.elements.each(function (f, d)
    {
        if(this.options.show === d)
        {
            this.fireEvent("active", [this.togglers[d], f])
        } else
        {
            for(var g in this.effects)
            {
                f.setStyle(g, 0)
            }
        }
    }, this);
    if($chk(this.options.display) || this.options.initialDisplayFx === false)
    {
        this.display(this.options.display, this.options.initialDisplayFx)
    }
    if(this.options.fixedHeight !== false)
    {
        this.options.returnHeightToAuto = false
    }
    this.addEvent("complete", this.internalChain.callChain.bind(this.internalChain))
}, addSection                    : function (f, c)
{
    f = document.id(f);
    c = document.id(c);
    var g = this.togglers.contains(f);
    this.togglers.include(f);
    this.elements.include(c);
    var a = this.togglers.indexOf(f);
    var b = this.display.bind(this, a);
    f.store("accordion:display", b);
    f.addEvent(this.options.trigger, b);
    if(this.options.height)
    {
        c.setStyles({"padding-top": 0, "border-top": "none", "padding-bottom": 0, "border-bottom": "none"})
    }
    if(this.options.width)
    {
        c.setStyles({"padding-left": 0, "border-left": "none", "padding-right": 0, "border-right": "none"})
    }
    c.fullOpacity = 1;
    if(this.options.fixedWidth)
    {
        c.fullWidth = this.options.fixedWidth
    }
    if(this.options.fixedHeight)
    {
        c.fullHeight = this.options.fixedHeight
    }
    c.setStyle("overflow", "hidden");
    if(!g)
    {
        for(var d in this.effects)
        {
            c.setStyle(d, 0)
        }
    }
    return this
}, detach                        : function ()
{
    this.togglers.each(function (a)
    {
        a.removeEvent(this.options.trigger, a.retrieve("accordion:display"))
    }, this)
}, display                       : function (a, b)
{
    if(!this.check(a, b))
    {
        return this
    }
    b = $pick(b, true);
    if(this.options.returnHeightToAuto)
    {
        var d = this.elements[this.previous];
        if(d && !this.selfHidden)
        {
            for(var c in this.effects)
            {
                d.setStyle(c, d[this.effects[c]])
            }
        }
    }
    a = ($type(a) == "element") ? this.elements.indexOf(a) : a;
    if((this.timer && this.options.wait) || (a === this.previous && !this.options.alwayshide))
    {
        return this
    }
    this.previous = a;
    var f = {};
    this.elements.each(function (j, h)
    {
        f[h] = {};
        var g;
        if(h != a)
        {
            g = true
        } else
        {
            if(this.options.alwayshide && ((j.offsetHeight > 0 && this.options.height) || j.offsetWidth > 0 && this.options.width))
            {
                g = true;
                this.selfHidden = true
            }
        }
        this.fireEvent(g ? "background" : "active", [this.togglers[h], j]);
        for(var k in this.effects)
        {
            f[h][k] = g ? 0 : j[this.effects[k]]
        }
    }, this);
    this.internalChain.chain(function ()
    {
        if(this.options.returnHeightToAuto && !this.selfHidden)
        {
            var g = this.elements[a];
            if(g)
            {
                g.setStyle("height", "auto")
            }
        }
    }.bind(this));
    return b ? this.start(f) : this.set(f)
}});
var Accordion = new Class({Extends: Fx.Accordion, initialize: function ()
{
    this.parent.apply(this, arguments);
    var a = Array.link(arguments, {container: Element.type});
    this.container = a.container
}, addSection                     : function (c, b, f)
{
    c = document.id(c);
    b = document.id(b);
    var d = this.togglers.contains(c);
    var a = this.togglers.length;
    if(a && (!d || f))
    {
        f = $pick(f, a - 1);
        c.inject(this.togglers[f], "before");
        b.inject(c, "after")
    } else
    {
        if(this.container && !d)
        {
            c.inject(this.container);
            b.inject(this.container)
        }
    }
    return this.parent.apply(this, arguments)
}});
Fx.Move = new Class({Extends: Fx.Morph, options: {relativeTo: document.body, position: "center", edge: false, offset: {x: 0, y: 0}}, start: function (a)
{
    return this.parent(this.element.position($merge(this.options, a, {returnPos: true})))
}});
Element.Properties.move = {set: function (a)
{
    var b = this.retrieve("move");
    if(b)
    {
        b.cancel()
    }
    return this.eliminate("move").store("move:options", $extend({link: "cancel"}, a))
}, get                        : function (a)
{
    if(a || !this.retrieve("move"))
    {
        if(a || !this.retrieve("move:options"))
        {
            this.set("move", a)
        }
        this.store("move", new Fx.Move(this, this.retrieve("move:options")))
    }
    return this.retrieve("move")
}};
Element.implement({move: function (a)
{
    this.get("move").start(a);
    return this
}});



Fx.Reveal = new Class({Extends: Fx.Morph, options: {link: "cancel", styles: [
    "padding", "border", "margin"
], transitionOpacity                                    : !Browser.Engine.trident4, mode: "vertical", display: "block", hideInputs: Browser.Engine.trident ? "select, input, textarea, object, embed" : false}, dissolve: function ()
{
    try
    {
        if(!this.hiding && !this.showing)
        {
            if(this.element.getStyle("display") != "none")
            {
                this.hiding = true;
                this.showing = false;
                this.hidden = true;
                this.cssText = this.element.style.cssText;
                var d = this.element.getComputedSize({styles: this.options.styles, mode: this.options.mode});
                this.element.setStyle("display", this.options.display);
                if(this.options.transitionOpacity)
                {
                    d.opacity = 1
                }
                var b = {};
                $each(d, function (g, f)
                {
                    b[f] = [g, 0]
                }, this);
                this.element.setStyle("overflow", "hidden");
                var a = this.options.hideInputs ? this.element.getElements(this.options.hideInputs) : null;
                this.$chain.unshift(function ()
                {
                    if(this.hidden)
                    {
                        this.hiding = false;
                        $each(d, function (g, f)
                        {
                            d[f] = g
                        }, this);
                        this.element.style.cssText = this.cssText;
                        this.element.setStyle("display:none");
                        if(a)
                        {
                            a.setStyle("visibility", "visible")
                        }
                    }
                    this.fireEvent("hide", this.element);
                    this.callChain()
                }.bind(this));
                if(a)
                {
                    a.setStyle("visibility", "hidden")
                }
                this.start(b)
            } else
            {
                this.callChain.delay(10, this);
                this.fireEvent("complete", this.element);
                this.fireEvent("hide", this.element)
            }
        } else
        {
            if(this.options.link == "chain")
            {
                this.chain(this.dissolve.bind(this))
            } else
            {
                if(this.options.link == "cancel" && !this.hiding)
                {
                    this.cancel();
                    this.dissolve()
                }
            }
        }
    }
    catch (c)
    {
        this.hiding = false;
        this.element.setStyle("display", "none");
        this.callChain.delay(10, this);
        this.fireEvent("complete", this.element);
        this.fireEvent("hide", this.element)
    }
    return this
}, reveal: function ()
{
    try
    {
        if(!this.showing && !this.hiding)
        {
            if(this.element.getStyle("display") == "none" || this.element.getStyle("visiblity") == "hidden" || this.element.getStyle("opacity") == 0)
            {
                this.showing = true;
                this.hiding = this.hidden = false;
                var d;
                this.cssText = this.element.style.cssText;
                this.element.measure(function ()
                {
                    d = this.element.getComputedSize({styles: this.options.styles, mode: this.options.mode})
                }.bind(this));
                $each(d, function (g, f)
                {
                    d[f] = g
                });
                if($chk(this.options.heightOverride))
                {
                    d.height = this.options.heightOverride.toInt()
                }
                if($chk(this.options.widthOverride))
                {
                    d.width = this.options.widthOverride.toInt()
                }
                if(this.options.transitionOpacity)
                {
                    this.element.setStyle("opacity", 0);
                    d.opacity = 1
                }
                var b = {height: 0, display: this.options.display};
                $each(d, function (g, f)
                {
                    b[f] = 0
                });
                this.element.setStyles($merge(b, {overflow: "hidden"}));
                var a = this.options.hideInputs ? this.element.getElements(this.options.hideInputs) : null;
                if(a)
                {
                    a.setStyle("visibility", "hidden")
                }
                this.start(d);
                this.$chain.unshift(function ()
                {
                    this.element.style.cssText = this.cssText;
                    this.element.setStyle("display", this.options.display);
                    if(!this.hidden)
                    {
                        this.showing = false
                    }
                    if(a)
                    {
                        a.setStyle("visibility", "visible")
                    }
                    this.callChain();
                    this.fireEvent("show", this.element)
                }.bind(this))
            } else
            {
                this.callChain();
                this.fireEvent("complete", this.element);
                this.fireEvent("show", this.element)
            }
        } else
        {
            if(this.options.link == "chain")
            {
                this.chain(this.reveal.bind(this))
            } else
            {
                if(this.options.link == "cancel" && !this.showing)
                {
                    this.cancel();
                    this.reveal()
                }
            }
        }
    }
    catch (c)
    {
        this.element.setStyles({display: this.options.display, visiblity: "visible", opacity: 1});
        this.showing = false;
        this.callChain.delay(10, this);
        this.fireEvent("complete", this.element);
        this.fireEvent("show", this.element)
    }
    return this
}, toggle: function ()
{
    if(this.element.getStyle("display") == "none" || this.element.getStyle("visiblity") == "hidden" || this.element.getStyle("opacity") == 0)
    {
        this.reveal()
    } else
    {
        this.dissolve()
    }
    return this
}, cancel: function ()
{
    this.parent.apply(this, arguments);
    this.element.style.cssText = this.cssText;
    this.hidding = false;
    this.showing = false
}});
Element.Properties.reveal = {set: function (a)
{
    var b = this.retrieve("reveal");
    if(b)
    {
        b.cancel()
    }
    return this.eliminate("reveal").store("reveal:options", a)
}, get                          : function (a)
{
    if(a || !this.retrieve("reveal"))
    {
        if(a || !this.retrieve("reveal:options"))
        {
            this.set("reveal", a)
        }
        this.store("reveal", new Fx.Reveal(this, this.retrieve("reveal:options")))
    }
    return this.retrieve("reveal")
}};
Element.Properties.dissolve = Element.Properties.reveal;
Element.implement({reveal: function (a)
{
    this.get("reveal", a).reveal();
    return this
}, dissolve              : function (a)
{
    this.get("reveal", a).dissolve();
    return this
}, nix                   : function ()
{
    var a = Array.link(arguments, {destroy: Boolean.type, options: Object.type});
    this.get("reveal", a.options).dissolve().chain(function ()
    {
        this[a.destroy ? "destroy" : "dispose"]()
    }.bind(this));
    return this
}, wink                  : function ()
{
    var b = Array.link(arguments, {duration: Number.type, options: Object.type});
    var a = this.get("reveal", b.options);
    a.reveal().chain(function ()
    {
        (function ()
        {
            a.dissolve()
        }).delay(b.duration || 2000)
    })
}});
Fx.Scroll = new Class({Extends: Fx, options: {offset: {x: 0, y: 0}, wheelStops: true}, initialize: function (b, a)
{
    this.element = this.subject = document.id(b);
    this.parent(a);
    var d = this.cancel.bind(this, false);
    if($type(this.element) != "element")
    {
        this.element = document.id(this.element.getDocument().body)
    }
    var c = this.element;
    if(this.options.wheelStops)
    {
        this.addEvent("start", function ()
        {
            c.addEvent("mousewheel", d)
        }, true);
        this.addEvent("complete", function ()
        {
            c.removeEvent("mousewheel", d)
        }, true)
    }
}, set                        : function ()
{
    var a = Array.flatten(arguments);
    if(Browser.Engine.gecko)
    {
        a = [Math.round(a[0]), Math.round(a[1])]
    }
    this.element.scrollTo(a[0], a[1])
}, compute                    : function (c, b, a)
{
    return[0, 1].map(function (d)
    {
        return Fx.compute(c[d], b[d], a)
    })
}, start                      : function (c, h)
{
    if(!this.check(c, h))
    {
        return this
    }
    var f = this.element.getScrollSize(), b = this.element.getScroll(), d = {x: c, y: h};
    for(var g in d)
    {
        var a = f[g];
        if($chk(d[g]))
        {
            d[g] = ($type(d[g]) == "number") ? d[g] : a
        } else
        {
            d[g] = b[g]
        }
        d[g] += this.options.offset[g]
    }
    return this.parent([b.x, b.y], [d.x, d.y])
}, toTop                      : function ()
{
    return this.start(false, 0)
}, toLeft                     : function ()
{
    return this.start(0, false)
}, toRight                    : function ()
{
    return this.start("right", false)
}, toBottom                   : function ()
{
    return this.start(false, "bottom")
}, toElement                  : function (b)
{
    var a = document.id(b).getPosition(this.element);
    return this.start(a.x, a.y)
}, scrollIntoView             : function (c, f, d)
{
    f = f ? $splat(f) : ["x", "y"];
    var i = {};
    c = document.id(c);
    var g = c.getPosition(this.element);
    var j = c.getSize();
    var h = this.element.getScroll();
    var a = this.element.getSize();
    var b = {x: g.x + j.x, y: g.y + j.y};
    ["x", "y"].each(function (k)
    {
        if(f.contains(k))
        {
            if(b[k] > h[k] + a[k])
            {
                i[k] = b[k] - a[k]
            }
            if(g[k] < h[k])
            {
                i[k] = g[k]
            }
        }
        if(i[k] == null)
        {
            i[k] = h[k]
        }
        if(d && d[k])
        {
            i[k] = i[k] + d[k]
        }
    }, this);
    if(i.x != h.x || i.y != h.y)
    {
        this.start(i.x, i.y)
    }
    return this
}, scrollToCenter             : function (c, f, d)
{
    f = f ? $splat(f) : ["x", "y"];
    c = $(c);
    var i = {}, g = c.getPosition(this.element), j = c.getSize(), h = this.element.getScroll(), a = this.element.getSize(), b = {x: g.x + j.x, y: g.y + j.y};
    ["x", "y"].each(function (k)
    {
        if(f.contains(k))
        {
            i[k] = g[k] - (a[k] - j[k]) / 2
        }
        if(i[k] == null)
        {
            i[k] = h[k]
        }
        if(d && d[k])
        {
            i[k] = i[k] + d[k]
        }
    }, this);
    if(i.x != h.x || i.y != h.y)
    {
        this.start(i.x, i.y)
    }
    return this
}});
Fx.Slide = new Class({Extends: Fx, options: {mode: "vertical", wrapper: false, hideOverflow: true}, initialize: function (b, a)
{
    this.addEvent("complete", function ()
    {
        this.open = (this.wrapper["offset" + this.layout.capitalize()] != 0);
        if(this.open)
        {
            this.wrapper.setStyle("height", "")
        }
        if(this.open && Browser.Engine.webkit419)
        {
            this.element.dispose().inject(this.wrapper)
        }
    }, true);
    this.element = this.subject = document.id(b);
    this.parent(a);
    var d = this.element.retrieve("wrapper");
    var c = this.element.getStyles("margin", "position", "overflow");
    if(this.options.hideOverflow)
    {
        c = $extend(c, {overflow: "hidden"})
    }
    if(this.options.wrapper)
    {
        d = document.id(this.options.wrapper).setStyles(c)
    }
    this.wrapper = d || new Element("div", {styles: c}).wraps(this.element);
    this.element.store("wrapper", this.wrapper).setStyle("margin", 0);
    this.now = [];
    this.open = true
}, vertical                  : function ()
{
    this.margin = "margin-top";
    this.layout = "height";
    this.offset = this.element.offsetHeight
}, horizontal                : function ()
{
    this.margin = "margin-left";
    this.layout = "width";
    this.offset = this.element.offsetWidth
}, set                       : function (a)
{
    this.element.setStyle(this.margin, a[0]);
    this.wrapper.setStyle(this.layout, a[1]);
    return this
}, compute                   : function (c, b, a)
{
    return[0, 1].map(function (d)
    {
        return Fx.compute(c[d], b[d], a)
    })
}, start                     : function (b, f)
{
    if(!this.check(b, f))
    {
        return this
    }
    this[f || this.options.mode]();
    var d = this.element.getStyle(this.margin).toInt();
    var c = this.wrapper.getStyle(this.layout).toInt();
    var a = [
        [d, c],
        [0, this.offset]
    ];
    var h = [
        [d, c],
        [-this.offset, 0]
    ];
    var g;
    switch (b)
    {
        case"in":
            g = a;
            break;
        case"out":
            g = h;
            break;
        case"toggle":
            g = (c == 0) ? a : h
    }
    return this.parent(g[0], g[1])
}, slideIn                   : function (a)
{
    return this.start("in", a)
}, slideOut                  : function (a)
{
    return this.start("out", a)
}, hide                      : function (a)
{
    this[a || this.options.mode]();
    this.open = false;
    return this.set([-this.offset, 0])
}, show                      : function (a)
{
    this[a || this.options.mode]();
    this.open = true;
    return this.set([0, this.offset])
}, toggle                    : function (a)
{
    return this.start("toggle", a)
}});
Element.Properties.slide = {set: function (b)
{
    var a = this.retrieve("slide");
    if(a)
    {
        a.cancel()
    }
    return this.eliminate("slide").store("slide:options", $extend({link: "cancel"}, b))
}, get                         : function (a)
{
    if(a || !this.retrieve("slide"))
    {
        if(a || !this.retrieve("slide:options"))
        {
            this.set("slide", a)
        }
        this.store("slide", new Fx.Slide(this, this.retrieve("slide:options")))
    }
    return this.retrieve("slide")
}};
Element.implement({slide: function (d, f)
{
    d = d || "toggle";
    var b = this.get("slide"), a;
    switch (d)
    {
        case"hide":
            b.hide(f);
            break;
        case"show":
            b.show(f);
            break;
        case"toggle":
            var c = this.retrieve("slide:flag", b.open);
            b[c ? "slideOut" : "slideIn"](f);
            this.store("slide:flag", !c);
            a = true;
            break;
        default:
            b.start(d, f)
    }
    if(!a)
    {
        this.eliminate("slide:flag")
    }
    return this
}});
var SmoothScroll = Fx.SmoothScroll = new Class({Extends: Fx.Scroll, initialize: function (b, c)
{
    c = c || document;
    this.doc = c.getDocument();
    var d = c.getWindow();
    this.parent(this.doc, b);
    this.links = $$(this.options.links || this.doc.links);
    var a = d.location.href.match(/^[^#]*/)[0] + "#";
    this.links.each(function (g)
    {
        if(g.href.indexOf(a) != 0)
        {
            return
        }
        var f = g.href.substr(a.length);
        if(f)
        {
            this.useLink(g, f)
        }
    }, this);
    if(!Browser.Engine.webkit419)
    {
        this.addEvent("complete", function ()
        {
            d.location.hash = this.anchor
        }, true)
    }
}, useLink                                             : function (c, a)
{
    var b;
    c.addEvent("click", function (d)
    {
        if(b !== false && !b)
        {
            b = document.id(a) || this.doc.getElement("a[name=" + a + "]")
        }
        if(b)
        {
            d.preventDefault();
            this.anchor = a;
            this.toElement(b).chain(function ()
            {
                this.fireEvent("scrolledTo", [c, b])
            }.bind(this));
            c.blur()
        }
    }.bind(this))
}});
Fx.Sort = new Class({Extends: Fx.Elements, options: {mode: "vertical"}, initialize: function (b, a)
{
    this.parent(b, a);
    this.elements.each(function (c)
    {
        if(c.getStyle("position") == "static")
        {
            c.setStyle("position", "relative")
        }
    });
    this.setDefaultOrder()
}, setDefaultOrder          : function ()
{
    this.currentOrder = this.elements.map(function (b, a)
    {
        return a
    })
}, sort                     : function (f)
{
    if($type(f) != "array")
    {
        return false
    }
    var j = 0, a = 0, c = {}, i = {}, d = this.options.mode == "vertical";
    var g = this.elements.map(function (n, k)
    {
        var m = n.getComputedSize({styles: ["border", "padding", "margin"]});
        var o;
        if(d)
        {
            o = {top: j, margin: m["margin-top"], height: m.totalHeight};
            j += o.height - m["margin-top"]
        } else
        {
            o = {left: a, margin: m["margin-left"], width: m.totalWidth};
            a += o.width
        }
        var l = d ? "top" : "left";
        i[k] = {};
        var p = n.getStyle(l).toInt();
        i[k][l] = p || 0;
        return o
    }, this);
    this.set(i);
    f = f.map(function (k)
    {
        return k.toInt()
    });
    if(f.length != this.elements.length)
    {
        this.currentOrder.each(function (k)
        {
            if(!f.contains(k))
            {
                f.push(k)
            }
        });
        if(f.length > this.elements.length)
        {
            f.splice(this.elements.length - 1, f.length - this.elements.length)
        }
    }
    var b = j = a = 0;
    f.each(function (m, k)
    {
        var l = {};
        if(d)
        {
            l.top = j - g[m].top - b;
            j += g[m].height
        } else
        {
            l.left = a - g[m].left;
            a += g[m].width
        }
        b = b + g[m].margin;
        c[m] = l
    }, this);
    var h = {};
    $A(f).sort().each(function (k)
    {
        h[k] = c[k]
    });
    this.start(h);
    this.currentOrder = f;
    return this
}, rearrangeDOM             : function (a)
{
    a = a || this.currentOrder;
    var b = this.elements[0].getParent();
    var c = [];
    this.elements.setStyle("opacity", 0);
    a.each(function (d)
    {
        c.push(this.elements[d].inject(b).setStyles({top: 0, left: 0}))
    }, this);
    this.elements.setStyle("opacity", 1);
    this.elements = $$(c);
    this.setDefaultOrder();
    return this
}, getDefaultOrder          : function ()
{
    return this.elements.map(function (b, a)
    {
        return a
    })
}, forward                  : function ()
{
    return this.sort(this.getDefaultOrder())
}, backward                 : function ()
{
    return this.sort(this.getDefaultOrder().reverse())
}, reverse                  : function ()
{
    return this.sort(this.currentOrder.reverse())
}, sortByElements           : function (a)
{
    return this.sort(a.map(function (b)
    {
        return this.elements.indexOf(b)
    }, this))
}, swap                     : function (c, b)
{
    if($type(c) == "element")
    {
        c = this.elements.indexOf(c)
    }
    if($type(b) == "element")
    {
        b = this.elements.indexOf(b)
    }
    var a = $A(this.currentOrder);
    a[this.currentOrder.indexOf(c)] = b;
    a[this.currentOrder.indexOf(b)] = c;
    return this.sort(a)
}});
Request.Queue = new Class({Implements: [Options, Events], Binds: [
    "attach", "request", "complete", "cancel", "success",
    "failure", "exception"
], options                           : {stopOnFailure: true, autoAdvance: true, concurrent: 1, requests: {}}, initialize: function (a)
{
    if(a)
    {
        var b = a.requests;
        delete a.requests
    }
    this.setOptions(a);
    this.requests = new Hash;
    this.queue = [];
    this.reqBinders = {};
    if(b)
    {
        this.addRequests(b)
    }
}, addRequest                        : function (a, b)
{
    this.requests.set(a, b);
    this.attach(a, b);
    return this
}, addRequests                       : function (a)
{
    $each(a, function (c, b)
    {
        this.addRequest(b, c)
    }, this);
    return this
}, getName                           : function (a)
{
    return this.requests.keyOf(a)
}, attach                            : function (a, b)
{
    if(b._groupSend)
    {
        return this
    }
    ["request", "complete", "cancel", "success", "failure", "exception"].each(function (c)
    {
        if(!this.reqBinders[a])
        {
            this.reqBinders[a] = {}
        }
        this.reqBinders[a][c] = function ()
        {
            this["on" + c.capitalize()].apply(this, [a, b].extend(arguments))
        }.bind(this);
        b.addEvent(c, this.reqBinders[a][c])
    }, this);
    b._groupSend = b.send;
    b.send = function (c)
    {
        this.send(a, c);
        return b
    }.bind(this);
    return this
}, removeRequest                     : function (b)
{
    var a = $type(b) == "object" ? this.getName(b) : b;
    if(!a && $type(a) != "string")
    {
        return this
    }
    b = this.requests.get(a);
    if(!b)
    {
        return this
    }
    ["request", "complete", "cancel", "success", "failure", "exception"].each(function (c)
    {
        b.removeEvent(c, this.reqBinders[a][c])
    }, this);
    b.send = b._groupSend;
    delete b._groupSend;
    return this
}, getRunning                        : function ()
{
    return this.requests.filter(function (a)
    {
        return a.running
    })
}, isRunning                         : function ()
{
    return !!(this.getRunning().getKeys().length)
}, send                              : function (b, a)
{
    var c = function ()
    {
        this.requests.get(b)._groupSend(a);
        this.queue.erase(c)
    }.bind(this);
    c.name = b;
    if(this.getRunning().getKeys().length >= this.options.concurrent || (this.error && this.options.stopOnFailure))
    {
        this.queue.push(c)
    } else
    {
        c()
    }
    return this
}, hasNext                           : function (a)
{
    return(!a) ? !!this.queue.length : !!this.queue.filter(function (b)
    {
        return b.name == a
    }).length
}, resume                            : function ()
{
    this.error = false;
    (this.options.concurrent - this.getRunning().getKeys().length).times(this.runNext, this);
    return this
}, runNext                           : function (a)
{
    if(!this.queue.length)
    {
        return this
    }
    if(!a)
    {
        this.queue[0]()
    } else
    {
        var b;
        this.queue.each(function (c)
        {
            if(!b && c.name == a)
            {
                b = true;
                c()
            }
        })
    }
    return this
}, runAll                            : function ()
{
    this.queue.each(function (a)
    {
        a()
    });
    return this
}, clear                             : function (a)
{
    if(!a)
    {
        this.queue.empty()
    } else
    {
        this.queue = this.queue.map(function (b)
        {
            if(b.name != a)
            {
                return b
            } else
            {
                return false
            }
        }).filter(function (b)
        {
            return b
        })
    }
    return this
}, cancel                            : function (a)
{
    this.requests.get(a).cancel();
    return this
}, onRequest                         : function ()
{
    this.fireEvent("request", arguments)
}, onComplete                        : function ()
{
    this.fireEvent("complete", arguments);
    if(!this.queue.length)
    {
        this.fireEvent("end")
    }
}, onCancel                          : function ()
{
    if(this.options.autoAdvance && !this.error)
    {
        this.runNext()
    }
    this.fireEvent("cancel", arguments)
}, onSuccess                         : function ()
{
    if(this.options.autoAdvance && !this.error)
    {
        this.runNext()
    }
    this.fireEvent("success", arguments)
}, onFailure                         : function ()
{
    this.error = true;
    if(!this.options.stopOnFailure && this.options.autoAdvance)
    {
        this.runNext()
    }
    this.fireEvent("failure", arguments)
}, onException                       : function ()
{
    this.error = true;
    if(!this.options.stopOnFailure && this.options.autoAdvance)
    {
        this.runNext()
    }
    this.fireEvent("exception", arguments)
}});
Request.implement({options: {initialDelay: 5000, delay: 5000, limit: 60000}, startTimer: function (b)
{
    var a = function ()
    {
        if(!this.running)
        {
            this.send({data: b})
        }
    };
    this.timer = a.delay(this.options.initialDelay, this);
    this.lastDelay = this.options.initialDelay;
    this.completeCheck = function (c)
    {
        $clear(this.timer);
        this.lastDelay = (c) ? this.options.delay : (this.lastDelay + this.options.delay).min(this.options.limit);
        this.timer = a.delay(this.lastDelay, this)
    };
    return this.addEvent("complete", this.completeCheck)
}, stopTimer              : function ()
{
    $clear(this.timer);
    return this.removeEvent("complete", this.completeCheck)
}});
var Asset = {javascript: function (g, d)
{
    d = $extend({onload: $empty, document: document, check: $lambda(true)}, d);
    if(d.onLoad)
    {
        d.onload = d.onLoad
    }
    var b = new Element("script", {src: g, type: "text/javascript"});
    var f = d.onload.bind(b), a = d.check, h = d.document;
    delete d.onload;
    delete d.check;
    delete d.document;
    b.addEvents({load: f, readystatechange: function ()
    {
        if(["loaded", "complete"].contains(this.readyState))
        {
            f()
        }
    }}).set(d);
    if(Browser.Engine.webkit419)
    {
        var c = (function ()
        {
            if(!$try(a))
            {
                return
            }
            $clear(c);
            f()
        }).periodical(50)
    }
    return b.inject(h.head)
}, css                 : function (b, a)
{
    return new Element("link", $merge({rel: "stylesheet", media: "screen", type: "text/css", href: b}, a)).inject(document.head)
}, image               : function (c, b)
{
    b = $merge({onload: $empty, onabort: $empty, onerror: $empty}, b);
    var d = new Image();
    var a = document.id(d) || new Element("img");
    ["load", "abort", "error"].each(function (f)
    {
        var h = "on" + f;
        var g = f.capitalize();
        if(b["on" + g])
        {
            b[h] = b["on" + g]
        }
        var i = b[h];
        delete b[h];
        d[h] = function ()
        {
            if(!d)
            {
                return
            }
            if(!a.parentNode)
            {
                a.width = d.width;
                a.height = d.height
            }
            d = d.onload = d.onabort = d.onerror = null;
            i.delay(1, a, a);
            a.fireEvent(f, a, 1)
        }
    });
    d.src = a.src = c;
    if(d && d.complete)
    {
        d.onload.delay(1)
    }
    return a.set(b)
}, images              : function (d, c)
{
    c = $merge({onComplete: $empty, onProgress: $empty, onError: $empty, properties: {}}, c);
    d = $splat(d);
    var a = [];
    var b = 0;
    return new Elements(d.map(function (f)
    {
        return Asset.image(f, $extend(c.properties, {onload: function ()
        {
            c.onProgress.call(this, b, d.indexOf(f));
            b++;
            if(b == d.length)
            {
                c.onComplete()
            }
        }, onerror                                         : function ()
        {
            c.onError.call(this, b, d.indexOf(f));
            b++;
            if(b == d.length)
            {
                c.onComplete()
            }
        }}))
    }))
}};
var IframeShim = new Class({Implements: [
    Options, Events, Class.Occlude
], options                            : {className: "iframeShim", src: 'javascript:false;document.write("");', display: false, zIndex: null, margin: 0, offset: {x: 0, y: 0}, browsers: (Browser.Engine.trident4 || (Browser.Engine.gecko && !Browser.Engine.gecko19 && Browser.Platform.mac))}, property: "IframeShim", initialize: function (b, a)
{
    this.element = document.id(b);
    if(this.occlude())
    {
        return this.occluded
    }
    this.setOptions(a);
    this.makeShim();
    return this
}, makeShim                           : function ()
{
    if(this.options.browsers)
    {
        var c = this.element.getStyle("zIndex").toInt();
        if(!c)
        {
            c = 1;
            var b = this.element.getStyle("position");
            if(b == "static" || !b)
            {
                this.element.setStyle("position", "relative")
            }
            this.element.setStyle("zIndex", c)
        }
        c = ($chk(this.options.zIndex) && c > this.options.zIndex) ? this.options.zIndex : c - 1;
        if(c < 0)
        {
            c = 1
        }
        this.shim = new Element("iframe", {src: this.options.src, scrolling: "no", frameborder: 0, styles: {zIndex: c, position: "absolute", border: "none", filter: "progid:DXImageTransform.Microsoft.Alpha(style=0,opacity=0)"}, "class": this.options.className}).store("IframeShim", this);
        var a = (function ()
        {
            this.shim.inject(this.element, "after");
            this[this.options.display ? "show" : "hide"]();
            this.fireEvent("inject")
        }).bind(this);
        if(!IframeShim.ready)
        {
            window.addEvent("load", a)
        } else
        {
            a()
        }
    } else
    {
        this.position = this.hide = this.show = this.dispose = $lambda(this)
    }
}, position                           : function ()
{
    if(!IframeShim.ready || !this.shim)
    {
        return this
    }
    var a = this.element.measure(function ()
    {
        return this.getSize()
    });
    if(this.options.margin != undefined)
    {
        a.x = a.x - (this.options.margin * 2);
        a.y = a.y - (this.options.margin * 2);
        this.options.offset.x += this.options.margin;
        this.options.offset.y += this.options.margin
    }
    this.shim.set({width: a.x, height: a.y}).position({relativeTo: this.element, offset: this.options.offset});
    return this
}, hide                               : function ()
{
    if(this.shim)
    {
        this.shim.setStyle("display", "none")
    }
    return this
}, show                               : function ()
{
    if(this.shim)
    {
        this.shim.setStyle("display", "block")
    }
    return this.position()
}, dispose                            : function ()
{
    if(this.shim)
    {
        this.shim.dispose()
    }
    return this
}, destroy                            : function ()
{
    if(this.shim)
    {
        this.shim.destroy()
    }
    return this
}});
window.addEvent("load", function ()
{
    IframeShim.ready = true
});
(function ()
{
    var a = this.Keyboard = new Class({Extends                                                       : Events, Implements:
        [
            Options, Log
        ], options                                                                                   : {defaultEventType: "keydown", active: false, events: {}, nonParsedEvents:
        ["activate", "deactivate", "onactivate", "ondeactivate", "changed", "onchanged"]}, initialize: function (g)
    {
        this.setOptions(g);
        this.setup()
    }, setup                                                                                         : function ()
    {
        this.addEvents(this.options.events);
        if(a.manager && !this.manager)
        {
            a.manager.manage(this)
        }
        if(this.options.active)
        {
            this.activate()
        }
    }, handle                                                                                        : function (i, h)
    {
        if(i.preventKeyboardPropagation)
        {
            return
        }
        var g = !!this.manager;
        if(g && this.activeKB)
        {
            this.activeKB.handle(i, h);
            if(i.preventKeyboardPropagation)
            {
                return
            }
        }
        this.fireEvent(h, i);
        if(!g && this.activeKB)
        {
            this.activeKB.handle(i, h)
        }
    }, addEvent                                                                                      : function (i, h, g)
    {
        return this.parent(a.parse(i, this.options.defaultEventType, this.options.nonParsedEvents), h, g)
    }, removeEvent                                                                                   : function (h, g)
    {
        return this.parent(a.parse(h, this.options.defaultEventType, this.options.nonParsedEvents), g)
    }, toggleActive                                                                                  : function ()
    {
        return this[this.active ? "deactivate" : "activate"]()
    }, activate                                                                                      : function (g)
    {
        if(g)
        {
            if(g != this.activeKB)
            {
                this.previous = this.activeKB
            }
            this.activeKB = g.fireEvent("activate");
            a.manager.fireEvent("changed")
        } else
        {
            if(this.manager)
            {
                this.manager.activate(this)
            }
        }
        return this
    }, deactivate                                                                                    : function (g)
    {
        if(g)
        {
            if(g === this.activeKB)
            {
                this.activeKB = null;
                g.fireEvent("deactivate");
                a.manager.fireEvent("changed")
            }
        } else
        {
            if(this.manager)
            {
                this.manager.deactivate(this)
            }
        }
        return this
    }, relenquish                                                                                    : function ()
    {
        if(this.previous)
        {
            this.activate(this.previous)
        }
    }, manage                                                                                        : function (g)
    {
        if(g.manager)
        {
            g.manager.drop(g)
        }
        this.instances.push(g);
        g.manager = this;
        if(!this.activeKB)
        {
            this.activate(g)
        } else
        {
            this._disable(g)
        }
    }, _disable                                                                                      : function (g)
    {
        if(this.activeKB == g)
        {
            this.activeKB = null
        }
    }, drop                                                                                          : function (g)
    {
        this._disable(g);
        this.instances.erase(g)
    }, instances                                                                                     : [
    ], trace                                                                                         : function ()
    {
        a.trace(this)
    }, each                                                                                          : function (g)
    {
        a.each(this, g)
    }});
    var b = {};
    var c = ["shift", "control", "alt", "meta"];
    var f = /^(?:shift|control|ctrl|alt|meta)$/;
    a.parse = function (i, h, l)
    {
        if(l && l.contains(i.toLowerCase()))
        {
            return i
        }
        i = i.toLowerCase().replace(/^(keyup|keydown):/, function (n, m)
        {
            h = m;
            return""
        });
        if(!b[i])
        {
            var g, k = {};
            i.split("+").each(function (m)
            {
                if(f.test(m))
                {
                    k[m] = true
                } else
                {
                    g = m
                }
            });
            k.control = k.control || k.ctrl;
            var j = [];
            c.each(function (m)
            {
                if(k[m])
                {
                    j.push(m)
                }
            });
            if(g)
            {
                j.push(g)
            }
            b[i] = j.join("+")
        }
        return h + ":" + b[i]
    };
    a.each = function (g, h)
    {
        var i = g || a.manager;
        while (i)
        {
            h.run(i);
            i = i.activeKB
        }
    };
    a.stop = function (g)
    {
        g.preventKeyboardPropagation = true
    };
    a.manager = new a({active: true});
    a.trace = function (g)
    {
        g = g || a.manager;
        g.enableLog();
        g.log("the following items have focus: ");
        a.each(g, function (h)
        {
            g.log(document.id(h.widget) || h.wiget || h)
        })
    };
    var d = function (h)
    {
        var g = [];
        c.each(function (i)
        {
            if(h[i])
            {
                g.push(i)
            }
        });
        if(!f.test(h.key))
        {
            g.push(h.key)
        }
        a.manager.handle(h, h.type + ":" + g.join("+"))
    };
    document.addEvents({keyup: d, keydown: d});
    Event.Keys.extend({shift: 16, control: 17, alt: 18, capslock: 20, pageup: 33, pagedown: 34, end: 35, home: 36, numlock: 144, scrolllock: 145, ";": 186, "=": 187, ",": 188, "-": Browser.Engine.Gecko ? 109 : 189, ".": 190, "/": 191, "`": 192, "[": 219, "\\": 220, "]": 221, "'": 222})
})();
var Mask = new Class({Implements: [Options, Events], Binds: [
    "position"
], options                      : {style: {}, "class": "mask", maskMargins: false, useIframeShim: true, iframeShimOptions: {}}, initialize: function (b, a)
{
    this.target = document.id(b) || document.id(document.body);
    this.target.store("Mask", this);
    this.setOptions(a);
    this.render();
    this.inject()
}, render                       : function ()
{
    this.element = new Element("div", {"class": this.options["class"], id: this.options.id || "mask-" + $time(), styles: $merge(this.options.style, {display: "none"}), events: {click: function ()
    {
        this.fireEvent("click");
        if(this.options.hideOnClick)
        {
            this.hide()
        }
    }.bind(this)}});
    this.hidden = true
}, toElement                    : function ()
{
    return this.element
}, inject                       : function (b, a)
{
    a = a || this.options.inject ? this.options.inject.where : "" || this.target == document.body ? "inside" : "after";
    b = b || this.options.inject ? this.options.inject.target : "" || this.target;
    this.element.inject(b, a);
    if(this.options.useIframeShim)
    {
        this.shim = new IframeShim(this.element, this.options.iframeShimOptions);
        this.addEvents({show: this.shim.show.bind(this.shim), hide: this.shim.hide.bind(this.shim), destroy: this.shim.destroy.bind(this.shim)})
    }
}, position                     : function ()
{
    this.resize(this.options.width, this.options.height);
    this.element.position({relativeTo: this.target, position: "topLeft", ignoreMargins: !this.options.maskMargins, ignoreScroll: this.target == document.body});
    return this
}, resize                       : function (a, f)
{
    var b = {styles: ["padding", "border"]};
    if(this.options.maskMargins)
    {
        b.styles.push("margin")
    }
    var d = this.target.getComputedSize(b);
    if(this.target == document.body)
    {
        var c = window.getSize();
        if(d.totalHeight < c.y)
        {
            d.totalHeight = c.y
        }
        if(d.totalWidth < c.x)
        {
            d.totalWidth = c.x
        }
    }
    this.element.setStyles({width: $pick(a, d.totalWidth, d.x), height: $pick(f, d.totalHeight, d.y)});
    return this
}, show                         : function ()
{
    if(!this.hidden)
    {
        return this
    }
    window.addEvent("resize", this.position);
    this.position();
    this.showMask.apply(this, arguments);
    return this
}, showMask                     : function ()
{
    this.element.setStyle("display", "block");
    this.hidden = false;
    this.fireEvent("show")
}, hide                         : function ()
{
    if(this.hidden)
    {
        return this
    }
    window.removeEvent("resize", this.position);
    this.hideMask.apply(this, arguments);
    if(this.options.destroyOnhide)
    {
        return this.destroy()
    }
    return this
}, hideMask                     : function ()
{
    this.element.setStyle("display", "none");
    this.hidden = true;
    this.fireEvent("hide")
}, toggle                       : function ()
{
    this[this.hidden ? "show" : "hide"]()
}, destroy                      : function ()
{
    this.hide();
    this.element.destroy();
    this.fireEvent("destroy");
    this.target.eliminate("mask")
}});
Element.Properties.mask = {set: function (b)
{
    var a = this.retrieve("mask");
    return this.eliminate("mask").store("mask:options", b)
}, get                        : function (a)
{
    if(a || !this.retrieve("mask"))
    {
        if(this.retrieve("mask"))
        {
            this.retrieve("mask").destroy()
        }
        if(a || !this.retrieve("mask:options"))
        {
            this.set("mask", a)
        }
        this.store("mask", new Mask(this, this.retrieve("mask:options")))
    }
    return this.retrieve("mask")
}};
Element.implement({mask: function (a)
{
    this.get("mask", a).show();
    return this
}, unmask              : function ()
{
    this.get("mask").hide();
    return this
}});
var Scroller = new Class({Implements: [Events, Options], options: {area: 20, velocity: 1, onChange: function (a, b)
{
    this.element.scrollTo(a, b)
}, fps                                                                 : 50}, initialize: function (b, a)
{
    this.setOptions(a);
    this.element = document.id(b);
    this.docBody = document.id(this.element.getDocument().body);
    this.listener = ($type(this.element) != "element") ? this.docBody : this.element;
    this.timer = null;
    this.bound = {attach: this.attach.bind(this), detach: this.detach.bind(this), getCoords: this.getCoords.bind(this)}
}, start: function ()
{
    this.listener.addEvents({mouseover: this.bound.attach, mouseout: this.bound.detach})
}, stop: function ()
{
    this.listener.removeEvents({mouseover: this.bound.attach, mouseout: this.bound.detach});
    this.detach();
    this.timer = $clear(this.timer)
}, attach: function ()
{
    this.listener.addEvent("mousemove", this.bound.getCoords)
}, detach: function ()
{
    this.listener.removeEvent("mousemove", this.bound.getCoords);
    this.timer = $clear(this.timer)
}, getCoords: function (a)
{
    this.page = (this.listener.get("tag") == "body") ? a.client : a.page;
    if(!this.timer)
    {
        this.timer = this.scroll.periodical(Math.round(1000 / this.options.fps), this)
    }
}, scroll: function ()
{
    var b = this.element.getSize(), a = this.element.getScroll(), g = this.element != this.docBody ? this.element.getOffsets() : {x: 0, y: 0}, c = this.element.getScrollSize(), f = {x: 0, y: 0};
    for(var d in this.page)
    {
        if(this.page[d] < (this.options.area + g[d]) && a[d] != 0)
        {
            f[d] = (this.page[d] - this.options.area - g[d]) * this.options.velocity
        } else
        {
            if(this.page[d] + this.options.area > (b[d] + g[d]) && a[d] + b[d] != c[d])
            {
                f[d] = (this.page[d] - b[d] + this.options.area - g[d]) * this.options.velocity
            }
        }
    }
    if(f.y || f.x)
    {
        this.fireEvent("change", [a.x + f.x, a.y + f.y])
    }
}});
(function ()
{
    var a = function (c, b)
    {
        return(c) ? ($type(c) == "function" ? c(b) : b.get(c)) : ""
    };
    this.Tips = new Class({Implements: [Events, Options], options: {onShow: function ()
    {
        this.tip.setStyle("display", "block")
    }, onhide                                                             : function ()
    {
        this.tip.setStyle("display", "none")
    }, title                                                              : "title", text: function (b)
    {
        return b.get("rel") || b.get("href")
    }, showDelay                                                          : 100, hideDelay: 100, className: "tip-wrap", offset: {x: 16, y: 16}, windowPadding: {x: 0, y: 0}, fixed: false}, initialize: function ()
    {
        var b = Array.link(arguments, {options: Object.type, elements: $defined});
        this.setOptions(b.options);
        if(b.elements)
        {
            this.attach(b.elements)
        }
        this.container = new Element("div", {"class": "tip"})
    }, toElement: function ()
    {
        if(this.tip)
        {
            return this.tip
        }
        return this.tip = new Element("div", {"class": this.options.className, styles: {position: "absolute", top: 0, left: 0}}).adopt(new Element("div", {"class": "tip-top"}), this.container, new Element("div", {"class": "tip-bottom"})).inject(document.body)
    }, attach: function (b)
    {
        $$(b).each(function (d)
        {
            var g = a(this.options.title, d), f = a(this.options.text, d);
            d.erase("title").store("tip:native", g).retrieve("tip:title", g);
            d.retrieve("tip:text", f);
            this.fireEvent("attach", [d]);
            var c = ["enter", "leave"];
            if(!this.options.fixed)
            {
                c.push("move")
            }
            c.each(function (i)
            {
                var h = d.retrieve("tip:" + i);
                if(!h)
                {
                    h = this["element" + i.capitalize()].bindWithEvent(this, d)
                }
                d.store("tip:" + i, h).addEvent("mouse" + i, h)
            }, this)
        }, this);
        return this
    }, detach: function (b)
    {
        $$(b).each(function (d)
        {
            ["enter", "leave", "move"].each(function (f)
            {
                d.removeEvent("mouse" + f, d.retrieve("tip:" + f)).eliminate("tip:" + f)
            });
            this.fireEvent("detach", [d]);
            if(this.options.title == "title")
            {
                var c = d.retrieve("tip:native");
                if(c)
                {
                    d.set("title", c)
                }
            }
        }, this);
        return this
    }, elementEnter: function (c, b)
    {
        this.container.empty();
        ["title", "text"].each(function (f)
        {
            var d = b.retrieve("tip:" + f);
            if(d)
            {
                this.fill(new Element("div", {"class": "tip-" + f}).inject(this.container), d)
            }
        }, this);
        $clear(this.timer);
        this.timer = (function ()
        {
            this.show(this, b);
            this.position((this.options.fixed) ? {page: b.getPosition()} : c)
        }).delay(this.options.showDelay, this)
    }, elementLeave: function (c, b)
    {
        $clear(this.timer);
        this.timer = this.hide.delay(this.options.hideDelay, this, b);
        this.fireForParent(c, b)
    }, fireForParent: function (c, b)
    {
        b = b.getParent();
        if(!b || b == document.body)
        {
            return
        }
        if(b.retrieve("tip:enter"))
        {
            b.fireEvent("mouseenter", c)
        } else
        {
            this.fireForParent(c, b)
        }
    }, elementMove: function (c, b)
    {
        this.position(c)
    }, position: function (f)
    {
        if(!this.tip)
        {
            document.id(this)
        }
        var c = window.getSize(), b = window.getScroll(), g = {x: this.tip.offsetWidth, y: this.tip.offsetHeight}, d = {x: "left", y: "top"}, h = {};
        for(var i in d)
        {
            h[d[i]] = f.page[i] + this.options.offset[i];
            if((h[d[i]] + g[i] - b[i]) > c[i] - this.options.windowPadding[i])
            {
                h[d[i]] = f.page[i] - this.options.offset[i] - g[i]
            }
        }
        this.tip.setStyles(h)
    }, fill: function (b, c)
    {
        if(typeof c == "string")
        {
            b.set("html", c)
        } else
        {
            b.adopt(c)
        }
    }, show: function (b)
    {
        if(!this.tip)
        {
            document.id(this)
        }
        this.fireEvent("show", [this.tip, b])
    }, hide: function (b)
    {
        if(!this.tip)
        {
            document.id(this)
        }
        this.fireEvent("hide", [this.tip, b])
    }})
})();
var Spinner = new Class({Extends: Mask, options: {"class": "spinner", containerPosition: {}, content: {"class": "spinner-content"}, messageContainer: {"class": "spinner-msg"}, img: {"class": "spinner-img"}, fxOptions: {link: "chain"}}, initialize: function ()
{
    this.parent.apply(this, arguments);
    this.target.store("spinner", this);
    var a = function ()
    {
        this.active = false
    }.bind(this);
    this.addEvents({hide: a, show: a})
}, render                       : function ()
{
    this.parent();
    this.element.set("id", this.options.id || "spinner-" + $time());
    this.content = document.id(this.options.content) || new Element("div", this.options.content);
    this.content.inject(this.element);
    if(this.options.message)
    {
        this.msg = document.id(this.options.message) || new Element("p", this.options.messageContainer).appendText(this.options.message);
        this.msg.inject(this.content)
    }
    if(this.options.img)
    {
        this.img = document.id(this.options.img) || new Element("div", this.options.img);
        this.img.inject(this.content)
    }
    this.element.set("tween", this.options.fxOptions)
}, show                         : function (a)
{
    if(this.active)
    {
        return this.chain(this.show.bind(this))
    }
    if(!this.hidden)
    {
        this.callChain.delay(20, this);
        return this
    }
    this.active = true;
    return this.parent(a)
}, showMask                     : function (a)
{
    var b = function ()
    {
        this.content.position($merge({relativeTo: this.element}, this.options.containerPosition))
    }.bind(this);
    if(a)
    {
        this.parent();
        b()
    } else
    {
        this.element.setStyles({display: "block", opacity: 0}).tween("opacity", this.options.style.opacity || 0.9);
        b();
        this.hidden = false;
        this.fireEvent("show");
        this.callChain()
    }
}, hide                         : function (a)
{
    if(this.active)
    {
        return this.chain(this.hide.bind(this))
    }
    if(this.hidden)
    {
        this.callChain.delay(20, this);
        return this
    }
    this.active = true;
    return this.parent(a)
}, hideMask                     : function (a)
{
    if(a)
    {
        return this.parent()
    }
    this.element.tween("opacity", 0).get("tween").chain(function ()
    {
        this.element.setStyle("display", "none");
        this.hidden = true;
        this.fireEvent("hide");
        this.callChain()
    }.bind(this))
}, destroy                      : function ()
{
    this.content.destroy();
    this.parent();
    this.target.eliminate("spinner")
}});
Spinner.implement(new Chain);
if(window.Request)
{
    Request = Class.refactor(Request, {options: {useSpinner: false, spinnerOptions: {}, spinnerTarget: false}, initialize: function (a)
    {
        this._send = this.send;
        this.send = function (c)
        {
            if(this.spinner)
            {
                this.spinner.chain(this._send.bind(this, c)).show()
            } else
            {
                this._send(c)
            }
            return this
        };
        this.previous(a);
        var b = document.id(this.options.spinnerTarget) || document.id(this.options.update);
        if(this.options.useSpinner && b)
        {
            this.spinner = b.get("spinner", this.options.spinnerOptions);
            ["onComplete", "onException", "onCancel"].each(function (c)
            {
                this.addEvent(c, this.spinner.hide.bind(this.spinner))
            }, this)
        }
    }, getSpinner                             : function ()
    {
        return this.spinner
    }})
}
Element.Properties.spinner = {set: function (a)
{
    var b = this.retrieve("spinner");
    return this.eliminate("spinner").store("spinner:options", a)
}, get                           : function (a)
{
    if(a || !this.retrieve("spinner"))
    {
        if(this.retrieve("spinner"))
        {
            this.retrieve("spinner").destroy()
        }
        if(a || !this.retrieve("spinner:options"))
        {
            this.set("spinner", a)
        }
        new Spinner(this, this.retrieve("spinner:options"))
    }
    return this.retrieve("spinner")
}};
Element.implement({spin: function (a)
{
    this.get("spinner", a).show();
    return this
}, unspin              : function ()
{
    var a = Array.link(arguments, {options: Object.type, callback: Function.type});
    this.get("spinner", a.options).hide(a.callback);
    return this
}});
/*
 * Raphael 1.5.2 - JavaScript Vector Library
 *
 * Copyright (c) 2010 Dmitry Baranovskiy (http://raphaeljs.com)
 * Licensed under the MIT (http://raphaeljs.com/license.html) license.
 */
(function ()
{
    function aI()
    {
        if(aI.is(arguments[0], a7))
        {
            var b = arguments[0], d = F[bB](aI, b.splice(0, 3 + aI.is(b[0], aF))), S = d.set();
            for(var R = 0, bH = b[s]; R < bH; R++)
            {
                var E = b[R] || {};
                bp[ag](E.type) && S[k](d[E.type]().attr(E))
            }
            return S
        }
        return F[bB](aI, arguments)
    }

    aI.version = "1.5.2";
    var a = /[, ]+/, bp = {circle: 1, rect: 1, path: 1, ellipse: 1, text: 1, image: 1}, bn = /\{(\d+)\}/g, bE = "prototype", ag = "hasOwnProperty", aa = document, aQ = window, r = {was: Object[bE][ag].call(aQ, "Raphael"), is: aQ.Raphael}, bz = function ()
    {
        this.customAttributes = {}
    }, aZ, bk = "appendChild", bB = "apply", bw = "concat", W = "createTouch" in aa, aP = "", aH = " ", bC = String, I = "split", Q = "click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend orientationchange touchcancel gesturestart gesturechange gestureend"[I](aH), bq = {mousedown: "touchstart", mousemove: "touchmove", mouseup: "touchend"}, aW = "join", s = "length", bG = bC[bE].toLowerCase, ao = Math, m = ao.max, bi = ao.min, aq = ao.abs, bl = ao.pow, aM = ao.PI, aF = "number", af = "string", a7 = "array", a0 = "toString", a4 = "fill", aT = Object[bE][a0], bt = {}, k = "push", h = /^url\(['"]?([^\)]+?)['"]?\)$/i, G = /^\s*((#[a-f\d]{6})|(#[a-f\d]{3})|rgba?\(\s*([\d\.]+%?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?)%?\s*\)|hsba?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?)%?\s*\)|hsla?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?)%?\s*\))\s*$/i, ap = {"NaN": 1, "Infinity": 1, "-Infinity": 1}, c = /^(?:cubic-)?bezier\(([^,]+),([^,]+),([^,]+),([^\)]+)\)/, ad = ao.round, D = "setAttribute", aj = parseFloat, T = parseInt, a5 = " progid:DXImageTransform.Microsoft", bo = bC[bE].toUpperCase, q = {blur: 0, "clip-rect": "0 0 1e9 1e9", cursor: "default", cx: 0, cy: 0, fill: "#fff", "fill-opacity": 1, font: '10px "Arial"', "font-family": '"Arial"', "font-size": "10", "font-style": "normal", "font-weight": 400, gradient: 0, height: 0, href: "http://raphaeljs.com/", opacity: 1, path: "M0,0", r: 0, rotation: 0, rx: 0, ry: 0, scale: "1 1", src: "", stroke: "#000", "stroke-dasharray": "", "stroke-linecap": "butt", "stroke-linejoin": "butt", "stroke-miterlimit": 0, "stroke-opacity": 1, "stroke-width": 1, target: "_blank", "text-anchor": "middle", title: "Raphael", translation: "0 0", width: 0, x: 0, y: 0}, am = {along: "along", blur: aF, "clip-rect": "csv", cx: aF, cy: aF, fill: "colour", "fill-opacity": aF, "font-size": aF, height: aF, opacity: aF, path: "path", r: aF, rotation: "csv", rx: aF, ry: aF, scale: "csv", stroke: "colour", "stroke-opacity": aF, "stroke-width": aF, translation: "csv", width: aF, x: aF, y: aF}, bs = "replace", bf = /^(from|to|\d+%?)$/, bd = /\s*,\s*/, n = {hs: 1, rg: 1}, ba = /,?([achlmqrstvxz]),?/gi, aR = /([achlmqstvz])[\s,]*((-?\d*\.?\d*(?:e[-+]?\d+)?\s*,?\s*)+)/ig, aG = /(-?\d*\.?\d*(?:e[-+]?\d+)?)\s*,?\s*/ig, aO = /^r(?:\(([^,]+?)\s*,\s*([^\)]+?)\))?/, bm = function (i, d)
    {
        return i.key - d.key
    };
    aI.type = (aQ.SVGAngle || aa.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure", "1.1") ? "SVG" : "VML");
    if(aI.type == "VML")
    {
        var ax = aa.createElement("div"), aB;
        ax.innerHTML = '<v:shape adj="1"/>';
        aB = ax.firstChild;
        aB.style.behavior = "url(#default#VML)";
        if(!(aB && typeof aB.adj == "object"))
        {
            return aI.type = null
        }
        ax = null
    }
    aI.svg = !(aI.vml = aI.type == "VML");
    bz[bE] = aI[bE];
    aZ = bz[bE];
    aI._id = 0;
    aI._oid = 0;
    aI.fn = {};
    aI.is = function (d, b)
    {
        b = bG.call(b);
        if(b == "finite")
        {
            return !ap[ag](+d)
        }
        return(b == "null" && d === null) || (b == typeof d) || (b == "object" && d === Object(d)) || (b == "array" && Array.isArray && Array.isArray(d)) || aT.call(d).slice(8, -1).toLowerCase() == b
    };
    aI.angle = function (R, bH, i, S, d, E)
    {
        if(d == null)
        {
            var b = R - i, bI = bH - S;
            if(!b && !bI)
            {
                return 0
            }
            return((b < 0) * 180 + ao.atan(-bI / -b) * 180 / aM + 360) % 360
        } else
        {
            return aI.angle(R, bH, d, E) - aI.angle(i, S, d, E)
        }
    };
    aI.rad = function (b)
    {
        return b % 360 * aM / 180
    };
    aI.deg = function (b)
    {
        return b * 180 / aM % 360
    };
    aI.snapTo = function (d, R, b)
    {
        b = aI.is(b, "finite") ? b : 10;
        if(aI.is(d, a7))
        {
            var E = d.length;
            while (E--)
            {
                if(aq(d[E] - R) <= b)
                {
                    return d[E]
                }
            }
        } else
        {
            d = +d;
            var S = R % d;
            if(S < b)
            {
                return R - S
            }
            if(S > d - b)
            {
                return R - S + d
            }
        }
        return R
    };
    function j()
    {
        var d = [], b = 0;
        for(; b < 32; b++)
        {
            d[b] = (~~(ao.random() * 16))[a0](16)
        }
        d[12] = 4;
        d[16] = ((d[16] & 3) | 8)[a0](16);
        return"r-" + d[aW]("")
    }

    aI.setWindow = function (b)
    {
        aQ = b;
        aa = aQ.document
    };
    var a9 = function (E)
    {
        if(aI.vml)
        {
            var b = /^\s+|\s+$/g;
            var S;
            try
            {
                var bH = new ActiveXObject("htmlfile");
                bH.write("<body>");
                bH.close();
                S = bH.body
            }
            catch (bI)
            {
                S = createPopup().document.body
            }
            var d = S.createTextRange();
            a9 = aA(function (i)
            {
                try
                {
                    S.style.color = bC(i)[bs](b, aP);
                    var bJ = d.queryCommandValue("ForeColor");
                    bJ = ((bJ & 255) << 16) | (bJ & 65280) | ((bJ & 16711680) >>> 16);
                    return"#" + ("000000" + bJ[a0](16)).slice(-6)
                }
                catch (bK)
                {
                    return"none"
                }
            })
        } else
        {
            var R = aa.createElement("i");
            R.title = "Rapha\xebl Colour Picker";
            R.style.display = "none";
            aa.body[bk](R);
            a9 = aA(function (i)
            {
                R.style.color = i;
                return aa.defaultView.getComputedStyle(R, aP).getPropertyValue("color")
            })
        }
        return a9(E)
    }, aC = function ()
    {
        return"hsb(" + [this.h, this.s, this.b] + ")"
    }, M = function ()
    {
        return"hsl(" + [this.h, this.s, this.l] + ")"
    }, B = function ()
    {
        return this.hex
    };
    aI.hsb2rgb = function (E, i, d, R)
    {
        if(aI.is(E, "object") && "h" in E && "s" in E && "b" in E)
        {
            d = E.b;
            i = E.s;
            E = E.h;
            R = E.o
        }
        return aI.hsl2rgb(E, i, d / 2, R)
    };
    aI.hsl2rgb = function (bI, bP, R, E)
    {
        if(aI.is(bI, "object") && "h" in bI && "s" in bI && "l" in bI)
        {
            R = bI.l;
            bP = bI.s;
            bI = bI.h
        }
        if(bI > 1 || bP > 1 || R > 1)
        {
            bI /= 360;
            bP /= 100;
            R /= 100
        }
        var bN = {}, bK = ["r", "g", "b"], bJ, bM, bH, d, bL, bO;
        if(!bP)
        {
            bN = {r: R, g: R, b: R}
        } else
        {
            if(R < 0.5)
            {
                bJ = R * (1 + bP)
            } else
            {
                bJ = R + bP - R * bP
            }
            bM = 2 * R - bJ;
            for(var S = 0; S < 3; S++)
            {
                bH = bI + 1 / 3 * -(S - 1);
                bH < 0 && bH++;
                bH > 1 && bH--;
                if(bH * 6 < 1)
                {
                    bN[bK[S]] = bM + (bJ - bM) * 6 * bH
                } else
                {
                    if(bH * 2 < 1)
                    {
                        bN[bK[S]] = bJ
                    } else
                    {
                        if(bH * 3 < 2)
                        {
                            bN[bK[S]] = bM + (bJ - bM) * (2 / 3 - bH) * 6
                        } else
                        {
                            bN[bK[S]] = bM
                        }
                    }
                }
            }
        }
        bN.r *= 255;
        bN.g *= 255;
        bN.b *= 255;
        bN.hex = "#" + (16777216 | bN.b | (bN.g << 8) | (bN.r << 16)).toString(16).slice(1);
        aI.is(E, "finite") && (bN.opacity = E);
        bN.toString = B;
        return bN
    };
    aI.rgb2hsb = function (b, d, bI)
    {
        if(d == null && aI.is(b, "object") && "r" in b && "g" in b && "b" in b)
        {
            bI = b.b;
            d = b.g;
            b = b.r
        }
        if(d == null && aI.is(b, af))
        {
            var bK = aI.getRGB(b);
            b = bK.r;
            d = bK.g;
            bI = bK.b
        }
        if(b > 1 || d > 1 || bI > 1)
        {
            b /= 255;
            d /= 255;
            bI /= 255
        }
        var bH = m(b, d, bI), i = bi(b, d, bI), R, E, S = bH;
        if(i == bH)
        {
            return{h: 0, s: 0, b: bH, toString: aC}
        } else
        {
            var bJ = (bH - i);
            E = bJ / bH;
            if(b == bH)
            {
                R = (d - bI) / bJ
            } else
            {
                if(d == bH)
                {
                    R = 2 + ((bI - b) / bJ)
                } else
                {
                    R = 4 + ((b - d) / bJ)
                }
            }
            R /= 6;
            R < 0 && R++;
            R > 1 && R--
        }
        return{h: R, s: E, b: S, toString: aC}
    };
    aI.rgb2hsl = function (d, i, bH)
    {
        if(i == null && aI.is(d, "object") && "r" in d && "g" in d && "b" in d)
        {
            bH = d.b;
            i = d.g;
            d = d.r
        }
        if(i == null && aI.is(d, af))
        {
            var bL = aI.getRGB(d);
            d = bL.r;
            i = bL.g;
            bH = bL.b
        }
        if(d > 1 || i > 1 || bH > 1)
        {
            d /= 255;
            i /= 255;
            bH /= 255
        }
        var S = m(d, i, bH), E = bi(d, i, bH), R, bK, b = (S + E) / 2, bJ;
        if(E == S)
        {
            bJ = {h: 0, s: 0, l: b}
        } else
        {
            var bI = S - E;
            bK = b < 0.5 ? bI / (S + E) : bI / (2 - S - E);
            if(d == S)
            {
                R = (i - bH) / bI
            } else
            {
                if(i == S)
                {
                    R = 2 + (bH - d) / bI
                } else
                {
                    R = 4 + (d - i) / bI
                }
            }
            R /= 6;
            R < 0 && R++;
            R > 1 && R--;
            bJ = {h: R, s: bK, l: b}
        }
        bJ.toString = M;
        return bJ
    };
    aI._path2string = function ()
    {
        return this.join(",")[bs](ba, "$1")
    };
    function aA(E, d, b)
    {
        function i()
        {
            var R = Array[bE].slice.call(arguments, 0), bH = R[aW]("\u25ba"), S = i.cache = i.cache || {}, bI = i.count = i.count ||
                [];
            if(S[ag](bH))
            {
                return b ? b(S[bH]) : S[bH]
            }
            bI[s] >= 1000 && delete S[bI.shift()];
            bI[k](bH);
            S[bH] = E[bB](d, R);
            return b ? b(S[bH]) : S[bH]
        }

        return i
    }

    aI.getRGB = aA(function (b)
    {
        if(!b || !!((b = bC(b)).indexOf("-") + 1))
        {
            return{r: -1, g: -1, b: -1, hex: "none", error: 1}
        }
        if(b == "none")
        {
            return{r: -1, g: -1, b: -1, hex: "none"}
        }
        !(n[ag](b.toLowerCase().substring(0, 2)) || b.charAt() == "#") && (b = a9(b));
        var R, d, i, bH, E, bJ, bI, S = b.match(G);
        if(S)
        {
            if(S[2])
            {
                bH = T(S[2].substring(5), 16);
                i = T(S[2].substring(3, 5), 16);
                d = T(S[2].substring(1, 3), 16)
            }
            if(S[3])
            {
                bH = T((bJ = S[3].charAt(3)) + bJ, 16);
                i = T((bJ = S[3].charAt(2)) + bJ, 16);
                d = T((bJ = S[3].charAt(1)) + bJ, 16)
            }
            if(S[4])
            {
                bI = S[4][I](bd);
                d = aj(bI[0]);
                bI[0].slice(-1) == "%" && (d *= 2.55);
                i = aj(bI[1]);
                bI[1].slice(-1) == "%" && (i *= 2.55);
                bH = aj(bI[2]);
                bI[2].slice(-1) == "%" && (bH *= 2.55);
                S[1].toLowerCase().slice(0, 4) == "rgba" && (E = aj(bI[3]));
                bI[3] && bI[3].slice(-1) == "%" && (E /= 100)
            }
            if(S[5])
            {
                bI = S[5][I](bd);
                d = aj(bI[0]);
                bI[0].slice(-1) == "%" && (d *= 2.55);
                i = aj(bI[1]);
                bI[1].slice(-1) == "%" && (i *= 2.55);
                bH = aj(bI[2]);
                bI[2].slice(-1) == "%" && (bH *= 2.55);
                (bI[0].slice(-3) == "deg" || bI[0].slice(-1) == "\xb0") && (d /= 360);
                S[1].toLowerCase().slice(0, 4) == "hsba" && (E = aj(bI[3]));
                bI[3] && bI[3].slice(-1) == "%" && (E /= 100);
                return aI.hsb2rgb(d, i, bH, E)
            }
            if(S[6])
            {
                bI = S[6][I](bd);
                d = aj(bI[0]);
                bI[0].slice(-1) == "%" && (d *= 2.55);
                i = aj(bI[1]);
                bI[1].slice(-1) == "%" && (i *= 2.55);
                bH = aj(bI[2]);
                bI[2].slice(-1) == "%" && (bH *= 2.55);
                (bI[0].slice(-3) == "deg" || bI[0].slice(-1) == "\xb0") && (d /= 360);
                S[1].toLowerCase().slice(0, 4) == "hsla" && (E = aj(bI[3]));
                bI[3] && bI[3].slice(-1) == "%" && (E /= 100);
                return aI.hsl2rgb(d, i, bH, E)
            }
            S = {r: d, g: i, b: bH};
            S.hex = "#" + (16777216 | bH | (i << 8) | (d << 16)).toString(16).slice(1);
            aI.is(E, "finite") && (S.opacity = E);
            return S
        }
        return{r: -1, g: -1, b: -1, hex: "none", error: 1}
    }, aI);
    aI.getColor = function (d)
    {
        var i = this.getColor.start = this.getColor.start || {h: 0, s: 1, b: d || 0.75}, b = this.hsb2rgb(i.h, i.s, i.b);
        i.h += 0.075;
        if(i.h > 1)
        {
            i.h = 0;
            i.s -= 0.2;
            i.s <= 0 && (this.getColor.start = {h: 0, s: 1, b: i.b})
        }
        return b.hex
    };
    aI.getColor.reset = function ()
    {
        delete this.start
    };
    aI.parsePathString = aA(function (b)
    {
        if(!b)
        {
            return null
        }
        var i = {a: 7, c: 6, h: 1, l: 2, m: 2, q: 4, s: 4, t: 2, v: 1, z: 0}, d = [];
        if(aI.is(b, a7) && aI.is(b[0], a7))
        {
            d = aS(b)
        }
        if(!d[s])
        {
            bC(b)[bs](aR, function (R, E, bI)
            {
                var bH = [], S = bG.call(E);
                bI[bs](aG, function (bK, bJ)
                {
                    bJ && bH[k](+bJ)
                });
                if(S == "m" && bH[s] > 2)
                {
                    d[k]([E][bw](bH.splice(0, 2)));
                    S = "l";
                    E = E == "m" ? "l" : "L"
                }
                while (bH[s] >= i[S])
                {
                    d[k]([E][bw](bH.splice(0, i[S])));
                    if(!i[S])
                    {
                        break
                    }
                }
            })
        }
        d[a0] = aI._path2string;
        return d
    });
    aI.findDotsAtSegment = function (d, b, bV, bT, bH, R, bJ, bI, bP)
    {
        var bN = 1 - bP, bM = bl(bN, 3) * d + bl(bN, 2) * 3 * bP * bV + bN * 3 * bP * bP * bH + bl(bP, 3) * bJ, bK = bl(bN, 3) * b + bl(bN, 2) * 3 * bP * bT + bN * 3 * bP * bP * R + bl(bP, 3) * bI, bR = d + 2 * bP * (bV - d) + bP * bP * (bH - 2 * bV + d), bQ = b + 2 * bP * (bT - b) + bP * bP * (R - 2 * bT + b), bU = bV + 2 * bP * (bH - bV) + bP * bP * (bJ - 2 * bH + bV), bS = bT + 2 * bP * (R - bT) + bP * bP * (bI - 2 * R + bT), bO = (1 - bP) * d + bP * bV, bL = (1 - bP) * b + bP * bT, E = (1 - bP) * bH + bP * bJ, i = (1 - bP) * R + bP * bI, S = (90 - ao.atan((bR - bU) / (bQ - bS)) * 180 / aM);
        (bR > bU || bQ < bS) && (S += 180);
        return{x: bM, y: bK, m: {x: bR, y: bQ}, n: {x: bU, y: bS}, start: {x: bO, y: bL}, end: {x: E, y: i}, alpha: S}
    };
    var ai = aA(function (bM)
    {
        if(!bM)
        {
            return{x: 0, y: 0, width: 0, height: 0}
        }
        bM = V(bM);
        var bJ = 0, bI = 0, R = [], d = [], E;
        for(var S = 0, bL = bM[s]; S < bL; S++)
        {
            E = bM[S];
            if(E[0] == "M")
            {
                bJ = E[1];
                bI = E[2];
                R[k](bJ);
                d[k](bI)
            } else
            {
                var bH = a6(bJ, bI, E[1], E[2], E[3], E[4], E[5], E[6]);
                R = R[bw](bH.min.x, bH.max.x);
                d = d[bw](bH.min.y, bH.max.y);
                bJ = E[5];
                bI = E[6]
            }
        }
        var b = bi[bB](0, R), bK = bi[bB](0, d);
        return{x: b, y: bK, width: m[bB](0, R) - b, height: m[bB](0, d) - bK}
    }), aS = function (bH)
    {
        var E = [];
        if(!aI.is(bH, a7) || !aI.is(bH && bH[0], a7))
        {
            bH = aI.parsePathString(bH)
        }
        for(var d = 0, R = bH[s]; d < R; d++)
        {
            E[d] = [];
            for(var b = 0, S = bH[d][s]; b < S; b++)
            {
                E[d][b] = bH[d][b]
            }
        }
        E[a0] = aI._path2string;
        return E
    }, au = aA(function (R)
    {
        if(!aI.is(R, a7) || !aI.is(R && R[0], a7))
        {
            R = aI.parsePathString(R)
        }
        var bL = [], bN = 0, bM = 0, bQ = 0, bP = 0, E = 0;
        if(R[0][0] == "M")
        {
            bN = R[0][1];
            bM = R[0][2];
            bQ = bN;
            bP = bM;
            E++;
            bL[k](["M", bN, bM])
        }
        for(var bI = E, bR = R[s]; bI < bR; bI++)
        {
            var b = bL[bI] = [], bO = R[bI];
            if(bO[0] != bG.call(bO[0]))
            {
                b[0] = bG.call(bO[0]);
                switch (b[0])
                {
                    case"a":
                        b[1] = bO[1];
                        b[2] = bO[2];
                        b[3] = bO[3];
                        b[4] = bO[4];
                        b[5] = bO[5];
                        b[6] = +(bO[6] - bN).toFixed(3);
                        b[7] = +(bO[7] - bM).toFixed(3);
                        break;
                    case"v":
                        b[1] = +(bO[1] - bM).toFixed(3);
                        break;
                    case"m":
                        bQ = bO[1];
                        bP = bO[2];
                    default:
                        for(var bH = 1, bJ = bO[s]; bH < bJ; bH++)
                        {
                            b[bH] = +(bO[bH] - ((bH % 2) ? bN : bM)).toFixed(3)
                        }
                }
            } else
            {
                b = bL[bI] = [];
                if(bO[0] == "m")
                {
                    bQ = bO[1] + bN;
                    bP = bO[2] + bM
                }
                for(var S = 0, d = bO[s]; S < d; S++)
                {
                    bL[bI][S] = bO[S]
                }
            }
            var bK = bL[bI][s];
            switch (bL[bI][0])
            {
                case"z":
                    bN = bQ;
                    bM = bP;
                    break;
                case"h":
                    bN += +bL[bI][bK - 1];
                    break;
                case"v":
                    bM += +bL[bI][bK - 1];
                    break;
                default:
                    bN += +bL[bI][bK - 2];
                    bM += +bL[bI][bK - 1]
            }
        }
        bL[a0] = aI._path2string;
        return bL
    }, 0, aS), y = aA(function (R)
    {
        if(!aI.is(R, a7) || !aI.is(R && R[0], a7))
        {
            R = aI.parsePathString(R)
        }
        var bK = [], bM = 0, bL = 0, bP = 0, bO = 0, E = 0;
        if(R[0][0] == "M")
        {
            bM = +R[0][1];
            bL = +R[0][2];
            bP = bM;
            bO = bL;
            E++;
            bK[0] = ["M", bM, bL]
        }
        for(var bI = E, bQ = R[s]; bI < bQ; bI++)
        {
            var b = bK[bI] = [], bN = R[bI];
            if(bN[0] != bo.call(bN[0]))
            {
                b[0] = bo.call(bN[0]);
                switch (b[0])
                {
                    case"A":
                        b[1] = bN[1];
                        b[2] = bN[2];
                        b[3] = bN[3];
                        b[4] = bN[4];
                        b[5] = bN[5];
                        b[6] = +(bN[6] + bM);
                        b[7] = +(bN[7] + bL);
                        break;
                    case"V":
                        b[1] = +bN[1] + bL;
                        break;
                    case"H":
                        b[1] = +bN[1] + bM;
                        break;
                    case"M":
                        bP = +bN[1] + bM;
                        bO = +bN[2] + bL;
                    default:
                        for(var bH = 1, bJ = bN[s]; bH < bJ; bH++)
                        {
                            b[bH] = +bN[bH] + ((bH % 2) ? bM : bL)
                        }
                }
            } else
            {
                for(var S = 0, d = bN[s]; S < d; S++)
                {
                    bK[bI][S] = bN[S]
                }
            }
            switch (b[0])
            {
                case"Z":
                    bM = bP;
                    bL = bO;
                    break;
                case"H":
                    bM = b[1];
                    break;
                case"V":
                    bL = b[1];
                    break;
                case"M":
                    bP = bK[bI][bK[bI][s] - 2];
                    bO = bK[bI][bK[bI][s] - 1];
                default:
                    bM = bK[bI][bK[bI][s] - 2];
                    bL = bK[bI][bK[bI][s] - 1]
            }
        }
        bK[a0] = aI._path2string;
        return bK
    }, null, aS), bD = function (d, E, b, i)
    {
        return[d, E, b, i, b, i]
    }, bj = function (d, E, bH, R, b, i)
    {
        var S = 1 / 3, bI = 2 / 3;
        return[S * d + bI * bH, S * E + bI * R, S * b + bI * bH, S * i + bI * R, b, i]
    }, Z = function (bP, ck, bY, bW, bQ, bK, R, bO, cj, bR)
    {
        var bV = aM * 120 / 180, b = aM / 180 * (+bQ || 0), b2 = [], bZ, cg = aA(function (cl, co, i)
        {
            var cn = cl * ao.cos(i) - co * ao.sin(i), cm = cl * ao.sin(i) + co * ao.cos(i);
            return{x: cn, y: cm}
        });
        if(!bR)
        {
            bZ = cg(bP, ck, -b);
            bP = bZ.x;
            ck = bZ.y;
            bZ = cg(bO, cj, -b);
            bO = bZ.x;
            cj = bZ.y;
            var d = ao.cos(aM / 180 * bQ), bM = ao.sin(aM / 180 * bQ), b4 = (bP - bO) / 2, b3 = (ck - cj) / 2;
            var ce = (b4 * b4) / (bY * bY) + (b3 * b3) / (bW * bW);
            if(ce > 1)
            {
                ce = ao.sqrt(ce);
                bY = ce * bY;
                bW = ce * bW
            }
            var E = bY * bY, b7 = bW * bW, b9 = (bK == R ? -1 : 1) * ao.sqrt(aq((E * b7 - E * b3 * b3 - b7 * b4 * b4) / (E * b3 * b3 + b7 * b4 * b4))), bT = b9 * bY * b3 / bW + (bP + bO) / 2, bS = b9 * -bW * b4 / bY + (ck + cj) / 2, bJ = ao.asin(((ck - bS) / bW).toFixed(9)), bI = ao.asin(((cj - bS) / bW).toFixed(9));
            bJ = bP < bT ? aM - bJ : bJ;
            bI = bO < bT ? aM - bI : bI;
            bJ < 0 && (bJ = aM * 2 + bJ);
            bI < 0 && (bI = aM * 2 + bI);
            if(R && bJ > bI)
            {
                bJ = bJ - aM * 2
            }
            if(!R && bI > bJ)
            {
                bI = bI - aM * 2
            }
        } else
        {
            bJ = bR[0];
            bI = bR[1];
            bT = bR[2];
            bS = bR[3]
        }
        var bN = bI - bJ;
        if(aq(bN) > bV)
        {
            var bU = bI, bX = bO, bL = cj;
            bI = bJ + bV * (R && bI > bJ ? 1 : -1);
            bO = bT + bY * ao.cos(bI);
            cj = bS + bW * ao.sin(bI);
            b2 = Z(bO, cj, bY, bW, bQ, 0, R, bX, bL, [bI, bU, bT, bS])
        }
        bN = bI - bJ;
        var bH = ao.cos(bJ), ci = ao.sin(bJ), S = ao.cos(bI), ch = ao.sin(bI), b5 = ao.tan(bN / 4), b8 = 4 / 3 * bY * b5, b6 = 4 / 3 * bW * b5, cf =
            [bP, ck], cd = [bP + b8 * ci, ck - b6 * bH], cc = [bO + b8 * ch, cj - b6 * S], ca = [bO, cj];
        cd[0] = 2 * cf[0] - cd[0];
        cd[1] = 2 * cf[1] - cd[1];
        if(bR)
        {
            return[cd, cc, ca][bw](b2)
        } else
        {
            b2 = [cd, cc, ca][bw](b2)[aW]()[I](",");
            var b0 = [];
            for(var cb = 0, b1 = b2[s]; cb < b1; cb++)
            {
                b0[cb] = cb % 2 ? cg(b2[cb - 1], b2[cb], b).y : cg(b2[cb], b2[cb + 1], b).x
            }
            return b0
        }
    }, ac = function (d, b, E, i, bJ, bI, bH, S, bK)
    {
        var R = 1 - bK;
        return{x: bl(R, 3) * d + bl(R, 2) * 3 * bK * E + R * 3 * bK * bK * bJ + bl(bK, 3) * bH, y: bl(R, 3) * b + bl(R, 2) * 3 * bK * i + R * 3 * bK * bK * bI + bl(bK, 3) * S}
    }, a6 = aA(function (E, d, S, R, bR, bQ, bN, bK)
    {
        var bP = (bR - 2 * S + E) - (bN - 2 * bR + S), bM = 2 * (S - E) - 2 * (bR - S), bJ = E - S, bI = (-bM + ao.sqrt(bM * bM - 4 * bP * bJ)) / 2 / bP, bH = (-bM - ao.sqrt(bM * bM - 4 * bP * bJ)) / 2 / bP, bL =
            [d, bK], bO = [E, bN], i;
        aq(bI) > "1e12" && (bI = 0.5);
        aq(bH) > "1e12" && (bH = 0.5);
        if(bI > 0 && bI < 1)
        {
            i = ac(E, d, S, R, bR, bQ, bN, bK, bI);
            bO[k](i.x);
            bL[k](i.y)
        }
        if(bH > 0 && bH < 1)
        {
            i = ac(E, d, S, R, bR, bQ, bN, bK, bH);
            bO[k](i.x);
            bL[k](i.y)
        }
        bP = (bQ - 2 * R + d) - (bK - 2 * bQ + R);
        bM = 2 * (R - d) - 2 * (bQ - R);
        bJ = d - R;
        bI = (-bM + ao.sqrt(bM * bM - 4 * bP * bJ)) / 2 / bP;
        bH = (-bM - ao.sqrt(bM * bM - 4 * bP * bJ)) / 2 / bP;
        aq(bI) > "1e12" && (bI = 0.5);
        aq(bH) > "1e12" && (bH = 0.5);
        if(bI > 0 && bI < 1)
        {
            i = ac(E, d, S, R, bR, bQ, bN, bK, bI);
            bO[k](i.x);
            bL[k](i.y)
        }
        if(bH > 0 && bH < 1)
        {
            i = ac(E, d, S, R, bR, bQ, bN, bK, bH);
            bO[k](i.x);
            bL[k](i.y)
        }
        return{min: {x: bi[bB](0, bO), y: bi[bB](0, bL)}, max: {x: m[bB](0, bO), y: m[bB](0, bL)}}
    }), V = aA(function (bQ, bL)
    {
        var R = y(bQ), bM = bL && y(bL), bN = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null}, b = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null}, bH = function (bR, bS)
        {
            var i, bT;
            if(!bR)
            {
                return["C", bS.x, bS.y, bS.x, bS.y, bS.x, bS.y]
            }
            !(bR[0] in {T: 1, Q: 1}) && (bS.qx = bS.qy = null);
            switch (bR[0])
            {
                case"M":
                    bS.X = bR[1];
                    bS.Y = bR[2];
                    break;
                case"A":
                    bR = ["C"][bw](Z[bB](0, [bS.x, bS.y][bw](bR.slice(1))));
                    break;
                case"S":
                    i = bS.x + (bS.x - (bS.bx || bS.x));
                    bT = bS.y + (bS.y - (bS.by || bS.y));
                    bR = ["C", i, bT][bw](bR.slice(1));
                    break;
                case"T":
                    bS.qx = bS.x + (bS.x - (bS.qx || bS.x));
                    bS.qy = bS.y + (bS.y - (bS.qy || bS.y));
                    bR = ["C"][bw](bj(bS.x, bS.y, bS.qx, bS.qy, bR[1], bR[2]));
                    break;
                case"Q":
                    bS.qx = bR[1];
                    bS.qy = bR[2];
                    bR = ["C"][bw](bj(bS.x, bS.y, bR[1], bR[2], bR[3], bR[4]));
                    break;
                case"L":
                    bR = ["C"][bw](bD(bS.x, bS.y, bR[1], bR[2]));
                    break;
                case"H":
                    bR = ["C"][bw](bD(bS.x, bS.y, bR[1], bS.y));
                    break;
                case"V":
                    bR = ["C"][bw](bD(bS.x, bS.y, bS.x, bR[1]));
                    break;
                case"Z":
                    bR = ["C"][bw](bD(bS.x, bS.y, bS.X, bS.Y));
                    break
            }
            return bR
        }, d = function (bR, bS)
        {
            if(bR[bS][s] > 7)
            {
                bR[bS].shift();
                var bT = bR[bS];
                while (bT[s])
                {
                    bR.splice(bS++, 0, ["C"][bw](bT.splice(0, 6)))
                }
                bR.splice(bS, 1);
                bO = m(R[s], bM && bM[s] || 0)
            }
        }, E = function (bV, bU, bS, bR, bT)
        {
            if(bV && bU && bV[bT][0] == "M" && bU[bT][0] != "M")
            {
                bU.splice(bT, 0, ["M", bR.x, bR.y]);
                bS.bx = 0;
                bS.by = 0;
                bS.x = bV[bT][1];
                bS.y = bV[bT][2];
                bO = m(R[s], bM && bM[s] || 0)
            }
        };
        for(var bJ = 0, bO = m(R[s], bM && bM[s] || 0); bJ < bO; bJ++)
        {
            R[bJ] = bH(R[bJ], bN);
            d(R, bJ);
            bM && (bM[bJ] = bH(bM[bJ], b));
            bM && d(bM, bJ);
            E(R, bM, bN, b, bJ);
            E(bM, R, b, bN, bJ);
            var bI = R[bJ], bP = bM && bM[bJ], S = bI[s], bK = bM && bP[s];
            bN.x = bI[S - 2];
            bN.y = bI[S - 1];
            bN.bx = aj(bI[S - 4]) || bN.x;
            bN.by = aj(bI[S - 3]) || bN.y;
            b.bx = bM && (aj(bP[bK - 4]) || b.x);
            b.by = bM && (aj(bP[bK - 3]) || b.y);
            b.x = bM && bP[bK - 2];
            b.y = bM && bP[bK - 1]
        }
        return bM ? [R, bM] : R
    }, null, aS), w = aA(function (bL)
    {
        var bK = [];
        for(var bH = 0, bM = bL[s]; bH < bM; bH++)
        {
            var b = {}, bJ = bL[bH].match(/^([^:]*):?([\d\.]*)/);
            b.color = aI.getRGB(bJ[1]);
            if(b.color.error)
            {
                return null
            }
            b.color = b.color.hex;
            bJ[2] && (b.offset = bJ[2] + "%");
            bK[k](b)
        }
        for(bH = 1, bM = bK[s] - 1; bH < bM; bH++)
        {
            if(!bK[bH].offset)
            {
                var E = aj(bK[bH - 1].offset || 0), R = 0;
                for(var S = bH + 1; S < bM; S++)
                {
                    if(bK[S].offset)
                    {
                        R = bK[S].offset;
                        break
                    }
                }
                if(!R)
                {
                    R = 100;
                    S = bM
                }
                R = aj(R);
                var bI = (R - E) / (S - bH + 1);
                for(; bH < S; bH++)
                {
                    E += bI;
                    bK[bH].offset = E + "%"
                }
            }
        }
        return bK
    }), aJ = function (b, R, i, E)
    {
        var d;
        if(aI.is(b, af) || aI.is(b, "object"))
        {
            d = aI.is(b, af) ? aa.getElementById(b) : b;
            if(d.tagName)
            {
                if(R == null)
                {
                    return{container: d, width: d.style.pixelWidth || d.offsetWidth, height: d.style.pixelHeight || d.offsetHeight}
                } else
                {
                    return{container: d, width: R, height: i}
                }
            }
        } else
        {
            return{container: 1, x: b, y: R, width: i, height: E}
        }
    }, be = function (b, i)
    {
        var d = this;
        for(var E in i)
        {
            if(i[ag](E) && !(E in b))
            {
                switch (typeof i[E])
                {
                    case"function":
                        (function (R)
                        {
                            b[E] = b === d ? R : function ()
                            {
                                return R[bB](d, arguments)
                            }
                        })(i[E]);
                        break;
                    case"object":
                        b[E] = b[E] || {};
                        be.call(this, b[E], i[E]);
                        break;
                    default:
                        b[E] = i[E];
                        break
                }
            }
        }
    }, aE = function (b, d)
    {
        b == d.top && (d.top = b.prev);
        b == d.bottom && (d.bottom = b.next);
        b.next && (b.next.prev = b.prev);
        b.prev && (b.prev.next = b.next)
    }, al = function (b, d)
    {
        if(d.top === b)
        {
            return
        }
        aE(b, d);
        b.next = null;
        b.prev = d.top;
        d.top.next = b;
        d.top = b
    }, p = function (b, d)
    {
        if(d.bottom === b)
        {
            return
        }
        aE(b, d);
        b.next = d.bottom;
        b.prev = null;
        d.bottom.prev = b;
        d.bottom = b
    }, J = function (d, b, i)
    {
        aE(d, i);
        b == i.top && (i.top = d);
        b.next && (b.next.prev = d);
        d.next = b.next;
        d.prev = b;
        b.next = d
    }, aL = function (d, b, i)
    {
        aE(d, i);
        b == i.bottom && (i.bottom = d);
        b.prev && (b.prev.next = d);
        d.prev = b.prev;
        b.prev = d;
        d.next = b
    }, z = function (b)
    {
        return function ()
        {
            throw new Error("Rapha\xebl: you are calling to method \u201c" + b + "\u201d of removed object")
        }
    };
    aI.pathToRelative = au;
    if(aI.svg)
    {
        aZ.svgns = "http://www.w3.org/2000/svg";
        aZ.xlink = "http://www.w3.org/1999/xlink";
        ad = function (b)
        {
            return +b + (~~b === b) * 0.5
        };
        var bh = function (i, b)
        {
            if(b)
            {
                for(var d in b)
                {
                    if(b[ag](d))
                    {
                        i[D](d, bC(b[d]))
                    }
                }
            } else
            {
                i = aa.createElementNS(aZ.svgns, i);
                i.style.webkitTapHighlightColor = "rgba(0,0,0,0)";
                return i
            }
        };
        aI[a0] = function ()
        {
            return"Your browser supports SVG.\nYou are running Rapha\xebl " + this.version
        };
        var x = function (b, E)
        {
            var d = bh("path");
            E.canvas && E.canvas[bk](d);
            var i = new aU(d, E);
            i.type = "path";
            an(i, {fill: "none", stroke: "#000", path: b});
            return i
        };
        var g = function (R, bP, b)
        {
            var bM = "linear", bJ = 0.5, bH = 0.5, bR = R.style;
            bP = bC(bP)[bs](aO, function (bT, i, bU)
            {
                bM = "radial";
                if(i && bU)
                {
                    bJ = aj(i);
                    bH = aj(bU);
                    var bS = ((bH > 0.5) * 2 - 1);
                    bl(bJ - 0.5, 2) + bl(bH - 0.5, 2) > 0.25 && (bH = ao.sqrt(0.25 - bl(bJ - 0.5, 2)) * bS + 0.5) && bH != 0.5 && (bH = bH.toFixed(5) - 0.00001 * bS)
                }
                return aP
            });
            bP = bP[I](/\s*\-\s*/);
            if(bM == "linear")
            {
                var bI = bP.shift();
                bI = -aj(bI);
                if(isNaN(bI))
                {
                    return null
                }
                var S = [0, 0, ao.cos(bI * aM / 180), ao.sin(bI * aM / 180)], bO = 1 / (m(aq(S[2]), aq(S[3])) || 1);
                S[2] *= bO;
                S[3] *= bO;
                if(S[2] < 0)
                {
                    S[0] = -S[2];
                    S[2] = 0
                }
                if(S[3] < 0)
                {
                    S[1] = -S[3];
                    S[3] = 0
                }
            }
            var bL = w(bP);
            if(!bL)
            {
                return null
            }
            var d = R.getAttribute(a4);
            d = d.match(/^url\(#(.*)\)$/);
            d && b.defs.removeChild(aa.getElementById(d[1]));
            var E = bh(bM + "Gradient");
            E.id = j();
            bh(E, bM == "radial" ? {fx: bJ, fy: bH} : {x1: S[0], y1: S[1], x2: S[2], y2: S[3]});
            b.defs[bk](E);
            for(var bK = 0, bQ = bL[s]; bK < bQ; bK++)
            {
                var bN = bh("stop");
                bh(bN, {offset: bL[bK].offset ? bL[bK].offset : !bK ? "0%" : "100%", "stop-color": bL[bK].color || "#fff"});
                E[bk](bN)
            }
            bh(R, {fill: "url(#" + E.id + ")", opacity: 1, "fill-opacity": 1});
            bR.fill = aP;
            bR.opacity = 1;
            bR.fillOpacity = 1;
            return 1
        };
        var ab = function (d)
        {
            var b = d.getBBox();
            bh(d.pattern, {patternTransform: aI.format("translate({0},{1})", b.x, b.y)})
        };
        var an = function (bO, bX)
        {
            var bR = {""    : [0], none: [0], "-": [3, 1], ".": [1, 1], "-.": [3, 1, 1, 1], "-..": [
                3, 1, 1, 1, 1, 1
            ], ". "         :
                [1, 3], "- ": [4, 3], "--": [8, 3], "- .": [4, 3, 1, 3], "--.": [8, 3, 1, 3], "--..": [
                8, 3, 1, 3, 1, 3
            ]}, bT = bO.node, bP = bO.attrs, bL = bO.rotate(), bH = function (b4, b3)
            {
                b3 = bR[bG.call(b3)];
                if(b3)
                {
                    var b1 = b4.attrs["stroke-width"] || "1", bZ = {round: b1, square: b1, butt: 0}[b4.attrs["stroke-linecap"] || bX["stroke-linecap"]] || 0, b2 =
                        [];
                    var b0 = b3[s];
                    while (b0--)
                    {
                        b2[b0] = b3[b0] * b1 + ((b0 % 2) ? 1 : -1) * bZ
                    }
                    bh(bT, {"stroke-dasharray": b2[aW](",")})
                }
            };
            bX[ag]("rotation") && (bL = bX.rotation);
            var bK = bC(bL)[I](a);
            if(!(bK.length - 1))
            {
                bK = null
            } else
            {
                bK[1] = +bK[1];
                bK[2] = +bK[2]
            }
            aj(bL) && bO.rotate(0, true);
            for(var bS in bX)
            {
                if(bX[ag](bS))
                {
                    if(!q[ag](bS))
                    {
                        continue
                    }
                    var bQ = bX[bS];
                    bP[bS] = bQ;
                    switch (bS)
                    {
                        case"blur":
                            bO.blur(bQ);
                            break;
                        case"rotation":
                            bO.rotate(bQ, true);
                            break;
                        case"href":
                        case"title":
                        case"target":
                            var bV = bT.parentNode;
                            if(bG.call(bV.tagName) != "a")
                            {
                                var R = bh("a");
                                bV.insertBefore(R, bT);
                                R[bk](bT);
                                bV = R
                            }
                            if(bS == "target" && bQ == "blank")
                            {
                                bV.setAttributeNS(bO.paper.xlink, "show", "new")
                            } else
                            {
                                bV.setAttributeNS(bO.paper.xlink, bS, bQ)
                            }
                            break;
                        case"cursor":
                            bT.style.cursor = bQ;
                            break;
                        case"clip-rect":
                            var d = bC(bQ)[I](a);
                            if(d[s] == 4)
                            {
                                bO.clip && bO.clip.parentNode.parentNode.removeChild(bO.clip.parentNode);
                                var i = bh("clipPath"), bU = bh("rect");
                                i.id = j();
                                bh(bU, {x: d[0], y: d[1], width: d[2], height: d[3]});
                                i[bk](bU);
                                bO.paper.defs[bk](i);
                                bh(bT, {"clip-path": "url(#" + i.id + ")"});
                                bO.clip = bU
                            }
                            if(!bQ)
                            {
                                var bW = aa.getElementById(bT.getAttribute("clip-path")[bs](/(^url\(#|\)$)/g, aP));
                                bW && bW.parentNode.removeChild(bW);
                                bh(bT, {"clip-path": aP});
                                delete bO.clip
                            }
                            break;
                        case"path":
                            if(bO.type == "path")
                            {
                                bh(bT, {d: bQ ? bP.path = y(bQ) : "M0,0"})
                            }
                            break;
                        case"width":
                            bT[D](bS, bQ);
                            if(bP.fx)
                            {
                                bS = "x";
                                bQ = bP.x
                            } else
                            {
                                break
                            }
                        case"x":
                            if(bP.fx)
                            {
                                bQ = -bP.x - (bP.width || 0)
                            }
                        case"rx":
                            if(bS == "rx" && bO.type == "rect")
                            {
                                break
                            }
                        case"cx":
                            bK && (bS == "x" || bS == "cx") && (bK[1] += bQ - bP[bS]);
                            bT[D](bS, bQ);
                            bO.pattern && ab(bO);
                            break;
                        case"height":
                            bT[D](bS, bQ);
                            if(bP.fy)
                            {
                                bS = "y";
                                bQ = bP.y
                            } else
                            {
                                break
                            }
                        case"y":
                            if(bP.fy)
                            {
                                bQ = -bP.y - (bP.height || 0)
                            }
                        case"ry":
                            if(bS == "ry" && bO.type == "rect")
                            {
                                break
                            }
                        case"cy":
                            bK && (bS == "y" || bS == "cy") && (bK[2] += bQ - bP[bS]);
                            bT[D](bS, bQ);
                            bO.pattern && ab(bO);
                            break;
                        case"r":
                            if(bO.type == "rect")
                            {
                                bh(bT, {rx: bQ, ry: bQ})
                            } else
                            {
                                bT[D](bS, bQ)
                            }
                            break;
                        case"src":
                            if(bO.type == "image")
                            {
                                bT.setAttributeNS(bO.paper.xlink, "href", bQ)
                            }
                            break;
                        case"stroke-width":
                            bT.style.strokeWidth = bQ;
                            bT[D](bS, bQ);
                            if(bP["stroke-dasharray"])
                            {
                                bH(bO, bP["stroke-dasharray"])
                            }
                            break;
                        case"stroke-dasharray":
                            bH(bO, bQ);
                            break;
                        case"translation":
                            var bI = bC(bQ)[I](a);
                            bI[0] = +bI[0] || 0;
                            bI[1] = +bI[1] || 0;
                            if(bK)
                            {
                                bK[1] += bI[0];
                                bK[2] += bI[1]
                            }
                            A.call(bO, bI[0], bI[1]);
                            break;
                        case"scale":
                            bI = bC(bQ)[I](a);
                            bO.scale(+bI[0] || 1, +bI[1] || +bI[0] || 1, isNaN(aj(bI[2])) ? null : +bI[2], isNaN(aj(bI[3])) ? null : +bI[3]);
                            break;
                        case a4:
                            var S = bC(bQ).match(h);
                            if(S)
                            {
                                i = bh("pattern");
                                var bN = bh("image");
                                i.id = j();
                                bh(i, {x: 0, y: 0, patternUnits: "userSpaceOnUse", height: 1, width: 1});
                                bh(bN, {x: 0, y: 0});
                                bN.setAttributeNS(bO.paper.xlink, "href", S[1]);
                                i[bk](bN);
                                var bY = aa.createElement("img");
                                bY.style.cssText = "position:absolute;left:-9999em;top-9999em";
                                bY.onload = function ()
                                {
                                    bh(i, {width: this.offsetWidth, height: this.offsetHeight});
                                    bh(bN, {width: this.offsetWidth, height: this.offsetHeight});
                                    aa.body.removeChild(this);
                                    bO.paper.safari()
                                };
                                aa.body[bk](bY);
                                bY.src = S[1];
                                bO.paper.defs[bk](i);
                                bT.style.fill = "url(#" + i.id + ")";
                                bh(bT, {fill: "url(#" + i.id + ")"});
                                bO.pattern = i;
                                bO.pattern && ab(bO);
                                break
                            }
                            var E = aI.getRGB(bQ);
                            if(!E.error)
                            {
                                delete bX.gradient;
                                delete bP.gradient;
                                !aI.is(bP.opacity, "undefined") && aI.is(bX.opacity, "undefined") && bh(bT, {opacity: bP.opacity});
                                !aI.is(bP["fill-opacity"], "undefined") && aI.is(bX["fill-opacity"], "undefined") && bh(bT, {"fill-opacity": bP["fill-opacity"]})
                            } else
                            {
                                if((({circle: 1, ellipse: 1})[ag](bO.type) || bC(bQ).charAt() != "r") && g(bT, bQ, bO.paper))
                                {
                                    bP.gradient = bQ;
                                    bP.fill = "none";
                                    break
                                }
                            }
                            E[ag]("opacity") && bh(bT, {"fill-opacity": E.opacity > 1 ? E.opacity / 100 : E.opacity});
                        case"stroke":
                            E = aI.getRGB(bQ);
                            bT[D](bS, E.hex);
                            bS == "stroke" && E[ag]("opacity") && bh(bT, {"stroke-opacity": E.opacity > 1 ? E.opacity / 100 : E.opacity});
                            break;
                        case"gradient":
                            (({circle: 1, ellipse: 1})[ag](bO.type) || bC(bQ).charAt() != "r") && g(bT, bQ, bO.paper);
                            break;
                        case"opacity":
                            if(bP.gradient && !bP[ag]("stroke-opacity"))
                            {
                                bh(bT, {"stroke-opacity": bQ > 1 ? bQ / 100 : bQ})
                            }
                        case"fill-opacity":
                            if(bP.gradient)
                            {
                                var b = aa.getElementById(bT.getAttribute(a4)[bs](/^url\(#|\)$/g, aP));
                                if(b)
                                {
                                    var bJ = b.getElementsByTagName("stop");
                                    bJ[bJ[s] - 1][D]("stop-opacity", bQ)
                                }
                                break
                            }
                        default:
                            bS == "font-size" && (bQ = T(bQ, 10) + "px");
                            var bM = bS[bs](/(\-.)/g, function (bZ)
                            {
                                return bo.call(bZ.substring(1))
                            });
                            bT.style[bM] = bQ;
                            bT[D](bS, bQ);
                            break
                    }
                }
            }
            P(bO, bX);
            if(bK)
            {
                bO.rotate(bK.join(aH))
            } else
            {
                aj(bL) && bO.rotate(bL, true)
            }
        };
        var o = 1.2, P = function (b, R)
        {
            if(b.type != "text" || !(R[ag]("text") || R[ag]("font") || R[ag]("font-size") || R[ag]("x") || R[ag]("y")))
            {
                return
            }
            var bK = b.attrs, d = b.node, bM = d.firstChild ? T(aa.defaultView.getComputedStyle(d.firstChild, aP).getPropertyValue("font-size"), 10) : 10;
            if(R[ag]("text"))
            {
                bK.text = R.text;
                while (d.firstChild)
                {
                    d.removeChild(d.firstChild)
                }
                var E = bC(R.text)[I]("\n");
                for(var S = 0, bL = E[s]; S < bL; S++)
                {
                    if(E[S])
                    {
                        var bI = bh("tspan");
                        S && bh(bI, {dy: bM * o, x: bK.x});
                        bI[bk](aa.createTextNode(E[S]));
                        d[bk](bI)
                    }
                }
            } else
            {
                E = d.getElementsByTagName("tspan");
                for(S = 0, bL = E[s]; S < bL; S++)
                {
                    S && bh(E[S], {dy: bM * o, x: bK.x})
                }
            }
            bh(d, {y: bK.y});
            var bH = b.getBBox(), bJ = bK.y - (bH.y + bH.height / 2);
            bJ && aI.is(bJ, "finite") && bh(d, {y: bK.y + bJ})
        }, aU = function (d, b)
        {
            var E = 0, i = 0;
            this[0] = d;
            this.id = aI._oid++;
            this.node = d;
            d.raphael = this;
            this.paper = b;
            this.attrs = this.attrs || {};
            this.transformations = [];
            this._ = {tx: 0, ty: 0, rt: {deg: 0, cx: 0, cy: 0}, sx: 1, sy: 1};
            !b.bottom && (b.bottom = this);
            this.prev = b.top;
            b.top && (b.top.next = this);
            b.top = this;
            this.next = null
        };
        var bc = aU[bE];
        aU[bE].rotate = function (d, b, E)
        {
            if(this.removed)
            {
                return this
            }
            if(d == null)
            {
                if(this._.rt.cx)
                {
                    return[this._.rt.deg, this._.rt.cx, this._.rt.cy][aW](aH)
                }
                return this._.rt.deg
            }
            var i = this.getBBox();
            d = bC(d)[I](a);
            if(d[s] - 1)
            {
                b = aj(d[1]);
                E = aj(d[2])
            }
            d = aj(d[0]);
            if(b != null && b !== false)
            {
                this._.rt.deg = d
            } else
            {
                this._.rt.deg += d
            }
            (E == null) && (b = null);
            this._.rt.cx = b;
            this._.rt.cy = E;
            b = b == null ? i.x + i.width / 2 : b;
            E = E == null ? i.y + i.height / 2 : E;
            if(this._.rt.deg)
            {
                this.transformations[0] = aI.format("rotate({0} {1} {2})", this._.rt.deg, b, E);
                this.clip && bh(this.clip, {transform: aI.format("rotate({0} {1} {2})", -this._.rt.deg, b, E)})
            } else
            {
                this.transformations[0] = aP;
                this.clip && bh(this.clip, {transform: aP})
            }
            bh(this.node, {transform: this.transformations[aW](aH)});
            return this
        };
        aU[bE].hide = function ()
        {
            !this.removed && (this.node.style.display = "none");
            return this
        };
        aU[bE].show = function ()
        {
            !this.removed && (this.node.style.display = "");
            return this
        };
        aU[bE].remove = function ()
        {
            if(this.removed)
            {
                return
            }
            aE(this, this.paper);
            this.node.parentNode.removeChild(this.node);
            for(var b in this)
            {
                delete this[b]
            }
            this.removed = true
        };
        aU[bE].getBBox = function ()
        {
            if(this.removed)
            {
                return this
            }
            if(this.type == "path")
            {
                return ai(this.attrs.path)
            }
            if(this.node.style.display == "none")
            {
                this.show();
                var d = true
            }
            var bH = {};
            try
            {
                bH = this.node.getBBox()
            }
            catch (R)
            {
            }
            finally
            {
                bH = bH || {}
            }
            if(this.type == "text")
            {
                bH = {x: bH.x, y: Infinity, width: 0, height: 0};
                for(var b = 0, E = this.node.getNumberOfChars(); b < E; b++)
                {
                    var S = this.node.getExtentOfChar(b);
                    (S.y < bH.y) && (bH.y = S.y);
                    (S.y + S.height - bH.y > bH.height) && (bH.height = S.y + S.height - bH.y);
                    (S.x + S.width - bH.x > bH.width) && (bH.width = S.x + S.width - bH.x)
                }
            }
            d && this.hide();
            return bH
        };
        aU[bE].attr = function (b, bK)
        {
            if(this.removed)
            {
                return this
            }
            if(b == null)
            {
                var bJ = {};
                for(var S in this.attrs)
                {
                    if(this.attrs[ag](S))
                    {
                        bJ[S] = this.attrs[S]
                    }
                }
                this._.rt.deg && (bJ.rotation = this.rotate());
                (this._.sx != 1 || this._.sy != 1) && (bJ.scale = this.scale());
                bJ.gradient && bJ.fill == "none" && (bJ.fill = bJ.gradient) && delete bJ.gradient;
                return bJ
            }
            if(bK == null && aI.is(b, af))
            {
                if(b == "translation")
                {
                    return A.call(this)
                }
                if(b == "rotation")
                {
                    return this.rotate()
                }
                if(b == "scale")
                {
                    return this.scale()
                }
                if(b == a4 && this.attrs.fill == "none" && this.attrs.gradient)
                {
                    return this.attrs.gradient
                }
                return this.attrs[b]
            }
            if(bK == null && aI.is(b, a7))
            {
                var bM = {};
                for(var R = 0, bH = b.length; R < bH; R++)
                {
                    bM[b[R]] = this.attr(b[R])
                }
                return bM
            }
            if(bK != null)
            {
                var d = {};
                d[b] = bK
            } else
            {
                if(b != null && aI.is(b, "object"))
                {
                    d = b
                }
            }
            for(var bL in this.paper.customAttributes)
            {
                if(this.paper.customAttributes[ag](bL) && d[ag](bL) && aI.is(this.paper.customAttributes[bL], "function"))
                {
                    var bI = this.paper.customAttributes[bL].apply(this, [][bw](d[bL]));
                    this.attrs[bL] = d[bL];
                    for(var E in bI)
                    {
                        if(bI[ag](E))
                        {
                            d[E] = bI[E]
                        }
                    }
                }
            }
            an(this, d);
            return this
        };
        aU[bE].toFront = function ()
        {
            if(this.removed)
            {
                return this
            }
            this.node.parentNode[bk](this.node);
            var b = this.paper;
            b.top != this && al(this, b);
            return this
        };
        aU[bE].toBack = function ()
        {
            if(this.removed)
            {
                return this
            }
            if(this.node.parentNode.firstChild != this.node)
            {
                this.node.parentNode.insertBefore(this.node, this.node.parentNode.firstChild);
                p(this, this.paper);
                var b = this.paper
            }
            return this
        };
        aU[bE].insertAfter = function (b)
        {
            if(this.removed)
            {
                return this
            }
            var d = b.node || b[b.length - 1].node;
            if(d.nextSibling)
            {
                d.parentNode.insertBefore(this.node, d.nextSibling)
            } else
            {
                d.parentNode[bk](this.node)
            }
            J(this, b, this.paper);
            return this
        };
        aU[bE].insertBefore = function (b)
        {
            if(this.removed)
            {
                return this
            }
            var d = b.node || b[0].node;
            d.parentNode.insertBefore(this.node, d);
            aL(this, b, this.paper);
            return this
        };
        aU[bE].blur = function (d)
        {
            var b = this;
            if(+d !== 0)
            {
                var i = bh("filter"), E = bh("feGaussianBlur");
                b.attrs.blur = d;
                i.id = j();
                bh(E, {stdDeviation: +d || 1.5});
                i.appendChild(E);
                b.paper.defs.appendChild(i);
                b._blur = i;
                bh(b.node, {filter: "url(#" + i.id + ")"})
            } else
            {
                if(b._blur)
                {
                    b._blur.parentNode.removeChild(b._blur);
                    delete b._blur;
                    delete b.attrs.blur
                }
                b.node.removeAttribute("filter")
            }
        };
        var ae = function (d, b, S, R)
        {
            var E = bh("circle");
            d.canvas && d.canvas[bk](E);
            var i = new aU(E, d);
            i.attrs = {cx: b, cy: S, r: R, fill: "none", stroke: "#000"};
            i.type = "circle";
            bh(E, i.attrs);
            return i
        }, bb = function (i, b, bI, d, S, bH)
        {
            var R = bh("rect");
            i.canvas && i.canvas[bk](R);
            var E = new aU(R, i);
            E.attrs = {x: b, y: bI, width: d, height: S, r: bH || 0, rx: bH || 0, ry: bH || 0, fill: "none", stroke: "#000"};
            E.type = "rect";
            bh(R, E.attrs);
            return E
        }, az = function (d, b, bH, S, R)
        {
            var E = bh("ellipse");
            d.canvas && d.canvas[bk](E);
            var i = new aU(E, d);
            i.attrs = {cx: b, cy: bH, rx: S, ry: R, fill: "none", stroke: "#000"};
            i.type = "ellipse";
            bh(E, i.attrs);
            return i
        }, v = function (i, bH, b, bI, d, S)
        {
            var R = bh("image");
            bh(R, {x: b, y: bI, width: d, height: S, preserveAspectRatio: "none"});
            R.setAttributeNS(i.xlink, "href", bH);
            i.canvas && i.canvas[bk](R);
            var E = new aU(R, i);
            E.attrs = {x: b, y: bI, width: d, height: S, src: bH};
            E.type = "image";
            return E
        }, ak = function (d, b, S, R)
        {
            var E = bh("text");
            bh(E, {x: b, y: S, "text-anchor": "middle"});
            d.canvas && d.canvas[bk](E);
            var i = new aU(E, d);
            i.attrs = {x: b, y: S, "text-anchor": "middle", text: R, font: q.font, stroke: "none", fill: "#000"};
            i.type = "text";
            an(i, i.attrs);
            return i
        }, bA = function (d, b)
        {
            this.width = d || this.width;
            this.height = b || this.height;
            this.canvas[D]("width", this.width);
            this.canvas[D]("height", this.height);
            return this
        }, F = function ()
        {
            var E = aJ[bB](0, arguments), i = E && E.container, d = E.x, bH = E.y, R = E.width, b = E.height;
            if(!i)
            {
                throw new Error("SVG container not found.")
            }
            var S = bh("svg");
            d = d || 0;
            bH = bH || 0;
            R = R || 512;
            b = b || 342;
            bh(S, {xmlns: "http://www.w3.org/2000/svg", version: 1.1, width: R, height: b});
            if(i == 1)
            {
                S.style.cssText = "position:absolute;left:" + d + "px;top:" + bH + "px";
                aa.body[bk](S)
            } else
            {
                if(i.firstChild)
                {
                    i.insertBefore(S, i.firstChild)
                } else
                {
                    i[bk](S)
                }
            }
            i = new bz;
            i.width = R;
            i.height = b;
            i.canvas = S;
            be.call(i, i, aI.fn);
            i.clear();
            return i
        };
        aZ.clear = function ()
        {
            var b = this.canvas;
            while (b.firstChild)
            {
                b.removeChild(b.firstChild)
            }
            this.bottom = this.top = null;
            (this.desc = bh("desc"))[bk](aa.createTextNode("Created with Rapha\xebl"));
            b[bk](this.desc);
            b[bk](this.defs = bh("defs"))
        };
        aZ.remove = function ()
        {
            this.canvas.parentNode && this.canvas.parentNode.removeChild(this.canvas);
            for(var b in this)
            {
                this[b] = z(b)
            }
        }
    }
    if(aI.vml)
    {
        var N = {M: "m", L: "l", C: "c", Z: "x", m: "t", l: "r", c: "v", z: "x"}, aN = /([clmz]),?([^clmz]*)/gi, bx = / progid:\S+Blur\([^\)]+\)/g, bF = /-?[^,\s-]+/g, aX = 1000 + aH + 1000, u = 10, t = {path: 1, rect: 1}, bg = function (bM)
        {
            var bJ = /[ahqstv]/ig, E = y;
            bC(bM).match(bJ) && (E = V);
            bJ = /[clmz]/g;
            if(E == y && !bC(bM).match(bJ))
            {
                var bI = bC(bM)[bs](aN, function (bP, bR, bN)
                {
                    var bQ = [], i = bG.call(bR) == "m", bO = N[bR];
                    bN[bs](bF, function (bS)
                    {
                        if(i && bQ[s] == 2)
                        {
                            bO += bQ + N[bR == "m" ? "l" : "L"];
                            bQ = []
                        }
                        bQ[k](ad(bS * u))
                    });
                    return bO + bQ
                });
                return bI
            }
            var bK = E(bM), d, b;
            bI = [];
            for(var S = 0, bL = bK[s]; S < bL; S++)
            {
                d = bK[S];
                b = bG.call(bK[S][0]);
                b == "z" && (b = "x");
                for(var R = 1, bH = d[s]; R < bH; R++)
                {
                    b += ad(d[R] * u) + (R != bH - 1 ? "," : aP)
                }
                bI[k](b)
            }
            return bI[aW](aH)
        };
        aI[a0] = function ()
        {
            return"Your browser doesn\u2019t support SVG. Falling down to VML.\nYou are running Rapha\xebl " + this.version
        };
        x = function (i, d)
        {
            var S = ay("group");
            S.style.cssText = "position:absolute;left:0;top:0;width:" + d.width + "px;height:" + d.height + "px";
            S.coordsize = d.coordsize;
            S.coordorigin = d.coordorigin;
            var R = ay("shape"), E = R.style;
            E.width = d.width + "px";
            E.height = d.height + "px";
            R.coordsize = aX;
            R.coordorigin = d.coordorigin;
            S[bk](R);
            var bH = new aU(R, S, d), b = {fill: "none", stroke: "#000"};
            i && (b.path = i);
            bH.type = "path";
            bH.path = [];
            bH.Path = aP;
            an(bH, b);
            d.canvas[bk](S);
            return bH
        };
        an = function (bK, bR)
        {
            bK.attrs = bK.attrs || {};
            var bO = bK.node, bS = bK.attrs, bH = bO.style, E, bQ = (bR.x != bS.x || bR.y != bS.y || bR.width != bS.width || bR.height != bS.height || bR.r != bS.r) && bK.type == "rect", bW = bK;
            for(var bI in bR)
            {
                if(bR[ag](bI))
                {
                    bS[bI] = bR[bI]
                }
            }
            if(bQ)
            {
                bS.path = at(bS.x, bS.y, bS.width, bS.height, bS.r);
                bK.X = bS.x;
                bK.Y = bS.y;
                bK.W = bS.width;
                bK.H = bS.height
            }
            bR.href && (bO.href = bR.href);
            bR.title && (bO.title = bR.title);
            bR.target && (bO.target = bR.target);
            bR.cursor && (bH.cursor = bR.cursor);
            "blur" in bR && bK.blur(bR.blur);
            if(bR.path && bK.type == "path" || bQ)
            {
                bO.path = bg(bS.path)
            }
            if(bR.rotation != null)
            {
                bK.rotate(bR.rotation, true)
            }
            if(bR.translation)
            {
                E = bC(bR.translation)[I](a);
                A.call(bK, E[0], E[1]);
                if(bK._.rt.cx != null)
                {
                    bK._.rt.cx += +E[0];
                    bK._.rt.cy += +E[1];
                    bK.setBox(bK.attrs, E[0], E[1])
                }
            }
            if(bR.scale)
            {
                E = bC(bR.scale)[I](a);
                bK.scale(+E[0] || 1, +E[1] || +E[0] || 1, +E[2] || null, +E[3] || null)
            }
            if("clip-rect" in bR)
            {
                var b = bC(bR["clip-rect"])[I](a);
                if(b[s] == 4)
                {
                    b[2] = +b[2] + (+b[0]);
                    b[3] = +b[3] + (+b[1]);
                    var bJ = bO.clipRect || aa.createElement("div"), bV = bJ.style, S = bO.parentNode;
                    bV.clip = aI.format("rect({1}px {2}px {3}px {0}px)", b);
                    if(!bO.clipRect)
                    {
                        bV.position = "absolute";
                        bV.top = 0;
                        bV.left = 0;
                        bV.width = bK.paper.width + "px";
                        bV.height = bK.paper.height + "px";
                        S.parentNode.insertBefore(bJ, S);
                        bJ[bk](S);
                        bO.clipRect = bJ
                    }
                }
                if(!bR["clip-rect"])
                {
                    bO.clipRect && (bO.clipRect.style.clip = aP)
                }
            }
            if(bK.type == "image" && bR.src)
            {
                bO.src = bR.src
            }
            if(bK.type == "image" && bR.opacity)
            {
                bO.filterOpacity = a5 + ".Alpha(opacity=" + (bR.opacity * 100) + ")";
                bH.filter = (bO.filterMatrix || aP) + (bO.filterOpacity || aP)
            }
            bR.font && (bH.font = bR.font);
            bR["font-family"] && (bH.fontFamily = '"' + bR["font-family"][I](",")[0][bs](/^['"]+|['"]+$/g, aP) + '"');
            bR["font-size"] && (bH.fontSize = bR["font-size"]);
            bR["font-weight"] && (bH.fontWeight = bR["font-weight"]);
            bR["font-style"] && (bH.fontStyle = bR["font-style"]);
            if(bR.opacity != null || bR["stroke-width"] != null || bR.fill != null || bR.stroke != null || bR["stroke-width"] != null || bR["stroke-opacity"] != null || bR["fill-opacity"] != null || bR["stroke-dasharray"] != null || bR["stroke-miterlimit"] != null || bR["stroke-linejoin"] != null || bR["stroke-linecap"] != null)
            {
                bO = bK.shape || bO;
                var bP = (bO.getElementsByTagName(a4) && bO.getElementsByTagName(a4)[0]), bT = false;
                !bP && (bT = bP = ay(a4));
                if("fill-opacity" in bR || "opacity" in bR)
                {
                    var d = ((+bS["fill-opacity"] + 1 || 2) - 1) * ((+bS.opacity + 1 || 2) - 1) * ((+aI.getRGB(bR.fill).o + 1 || 2) - 1);
                    d = bi(m(d, 0), 1);
                    bP.opacity = d
                }
                bR.fill && (bP.on = true);
                if(bP.on == null || bR.fill == "none")
                {
                    bP.on = false
                }
                if(bP.on && bR.fill)
                {
                    var i = bR.fill.match(h);
                    if(i)
                    {
                        bP.src = i[1];
                        bP.type = "tile"
                    } else
                    {
                        bP.color = aI.getRGB(bR.fill).hex;
                        bP.src = aP;
                        bP.type = "solid";
                        if(aI.getRGB(bR.fill).error && (bW.type in {circle: 1, ellipse: 1} || bC(bR.fill).charAt() != "r") && g(bW, bR.fill))
                        {
                            bS.fill = "none";
                            bS.gradient = bR.fill
                        }
                    }
                }
                bT && bO[bk](bP);
                var R = (bO.getElementsByTagName("stroke") && bO.getElementsByTagName("stroke")[0]), bU = false;
                !R && (bU = R = ay("stroke"));
                if((bR.stroke && bR.stroke != "none") || bR["stroke-width"] || bR["stroke-opacity"] != null || bR["stroke-dasharray"] || bR["stroke-miterlimit"] || bR["stroke-linejoin"] || bR["stroke-linecap"])
                {
                    R.on = true
                }
                (bR.stroke == "none" || R.on == null || bR.stroke == 0 || bR["stroke-width"] == 0) && (R.on = false);
                var bN = aI.getRGB(bR.stroke);
                R.on && bR.stroke && (R.color = bN.hex);
                d = ((+bS["stroke-opacity"] + 1 || 2) - 1) * ((+bS.opacity + 1 || 2) - 1) * ((+bN.o + 1 || 2) - 1);
                var bL = (aj(bR["stroke-width"]) || 1) * 0.75;
                d = bi(m(d, 0), 1);
                bR["stroke-width"] == null && (bL = bS["stroke-width"]);
                bR["stroke-width"] && (R.weight = bL);
                bL && bL < 1 && (d *= bL) && (R.weight = 1);
                R.opacity = d;
                bR["stroke-linejoin"] && (R.joinstyle = bR["stroke-linejoin"] || "miter");
                R.miterlimit = bR["stroke-miterlimit"] || 8;
                bR["stroke-linecap"] && (R.endcap = bR["stroke-linecap"] == "butt" ? "flat" : bR["stroke-linecap"] == "square" ? "square" : "round");
                if(bR["stroke-dasharray"])
                {
                    var bM = {"-": "shortdash", ".": "shortdot", "-.": "shortdashdot", "-..": "shortdashdotdot", ". ": "dot", "- ": "dash", "--": "longdash", "- .": "dashdot", "--.": "longdashdot", "--..": "longdashdotdot"};
                    R.dashstyle = bM[ag](bR["stroke-dasharray"]) ? bM[bR["stroke-dasharray"]] : aP
                }
                bU && bO[bk](R)
            }
            if(bW.type == "text")
            {
                bH = bW.paper.span.style;
                bS.font && (bH.font = bS.font);
                bS["font-family"] && (bH.fontFamily = bS["font-family"]);
                bS["font-size"] && (bH.fontSize = bS["font-size"]);
                bS["font-weight"] && (bH.fontWeight = bS["font-weight"]);
                bS["font-style"] && (bH.fontStyle = bS["font-style"]);
                bW.node.string && (bW.paper.span.innerHTML = bC(bW.node.string)[bs](/</g, "&#60;")[bs](/&/g, "&#38;")[bs](/\n/g, "<br>"));
                bW.W = bS.w = bW.paper.span.offsetWidth;
                bW.H = bS.h = bW.paper.span.offsetHeight;
                bW.X = bS.x;
                bW.Y = bS.y + ad(bW.H / 2);
                switch (bS["text-anchor"])
                {
                    case"start":
                        bW.node.style["v-text-align"] = "left";
                        bW.bbx = ad(bW.W / 2);
                        break;
                    case"end":
                        bW.node.style["v-text-align"] = "right";
                        bW.bbx = -ad(bW.W / 2);
                        break;
                    default:
                        bW.node.style["v-text-align"] = "center";
                        break
                }
            }
        };
        g = function (b, bI)
        {
            b.attrs = b.attrs || {};
            var bJ = b.attrs, bL, S = "linear", bH = ".5 .5";
            b.attrs.gradient = bI;
            bI = bC(bI)[bs](aO, function (bN, bO, i)
            {
                S = "radial";
                if(bO && i)
                {
                    bO = aj(bO);
                    i = aj(i);
                    bl(bO - 0.5, 2) + bl(i - 0.5, 2) > 0.25 && (i = ao.sqrt(0.25 - bl(bO - 0.5, 2)) * ((i > 0.5) * 2 - 1) + 0.5);
                    bH = bO + aH + i
                }
                return aP
            });
            bI = bI[I](/\s*\-\s*/);
            if(S == "linear")
            {
                var d = bI.shift();
                d = -aj(d);
                if(isNaN(d))
                {
                    return null
                }
            }
            var R = w(bI);
            if(!R)
            {
                return null
            }
            b = b.shape || b.node;
            bL = b.getElementsByTagName(a4)[0] || ay(a4);
            !bL.parentNode && b.appendChild(bL);
            if(R[s])
            {
                bL.on = true;
                bL.method = "none";
                bL.color = R[0].color;
                bL.color2 = R[R[s] - 1].color;
                var bM = [];
                for(var E = 0, bK = R[s]; E < bK; E++)
                {
                    R[E].offset && bM[k](R[E].offset + aH + R[E].color)
                }
                bL.colors && (bL.colors.value = bM[s] ? bM[aW]() : "0% " + bL.color);
                if(S == "radial")
                {
                    bL.type = "gradientradial";
                    bL.focus = "100%";
                    bL.focussize = bH;
                    bL.focusposition = bH
                } else
                {
                    bL.type = "gradient";
                    bL.angle = (270 - d) % 360
                }
            }
            return 1
        };
        aU = function (R, bH, b)
        {
            var S = 0, i = 0, d = 0, E = 1;
            this[0] = R;
            this.id = aI._oid++;
            this.node = R;
            R.raphael = this;
            this.X = 0;
            this.Y = 0;
            this.attrs = {};
            this.Group = bH;
            this.paper = b;
            this._ = {tx: 0, ty: 0, rt: {deg: 0}, sx: 1, sy: 1};
            !b.bottom && (b.bottom = this);
            this.prev = b.top;
            b.top && (b.top.next = this);
            b.top = this;
            this.next = null
        };
        bc = aU[bE];
        bc.rotate = function (d, b, i)
        {
            if(this.removed)
            {
                return this
            }
            if(d == null)
            {
                if(this._.rt.cx)
                {
                    return[this._.rt.deg, this._.rt.cx, this._.rt.cy][aW](aH)
                }
                return this._.rt.deg
            }
            d = bC(d)[I](a);
            if(d[s] - 1)
            {
                b = aj(d[1]);
                i = aj(d[2])
            }
            d = aj(d[0]);
            if(b != null)
            {
                this._.rt.deg = d
            } else
            {
                this._.rt.deg += d
            }
            i == null && (b = null);
            this._.rt.cx = b;
            this._.rt.cy = i;
            this.setBox(this.attrs, b, i);
            this.Group.style.rotation = this._.rt.deg;
            return this
        };
        bc.setBox = function (R, S, E)
        {
            if(this.removed)
            {
                return this
            }
            var b = this.Group.style, bH = (this.shape && this.shape.style) || this.node.style;
            R = R || {};
            for(var bI in R)
            {
                if(R[ag](bI))
                {
                    this.attrs[bI] = R[bI]
                }
            }
            S = S || this._.rt.cx;
            E = E || this._.rt.cy;
            var bL = this.attrs, bO, bN, bP, bK;
            switch (this.type)
            {
                case"circle":
                    bO = bL.cx - bL.r;
                    bN = bL.cy - bL.r;
                    bP = bK = bL.r * 2;
                    break;
                case"ellipse":
                    bO = bL.cx - bL.rx;
                    bN = bL.cy - bL.ry;
                    bP = bL.rx * 2;
                    bK = bL.ry * 2;
                    break;
                case"image":
                    bO = +bL.x;
                    bN = +bL.y;
                    bP = bL.width || 0;
                    bK = bL.height || 0;
                    break;
                case"text":
                    this.textpath.v =
                        ["m", ad(bL.x), ", ", ad(bL.y - 2), "l", ad(bL.x) + 1, ", ", ad(bL.y - 2)][aW](aP);
                    bO = bL.x - ad(this.W / 2);
                    bN = bL.y - this.H / 2;
                    bP = this.W;
                    bK = this.H;
                    break;
                case"rect":
                case"path":
                    if(!this.attrs.path)
                    {
                        bO = 0;
                        bN = 0;
                        bP = this.paper.width;
                        bK = this.paper.height
                    } else
                    {
                        var bJ = ai(this.attrs.path);
                        bO = bJ.x;
                        bN = bJ.y;
                        bP = bJ.width;
                        bK = bJ.height
                    }
                    break;
                default:
                    bO = 0;
                    bN = 0;
                    bP = this.paper.width;
                    bK = this.paper.height;
                    break
            }
            S = (S == null) ? bO + bP / 2 : S;
            E = (E == null) ? bN + bK / 2 : E;
            var d = S - this.paper.width / 2, bM = E - this.paper.height / 2, bQ;
            b.left != (bQ = d + "px") && (b.left = bQ);
            b.top != (bQ = bM + "px") && (b.top = bQ);
            this.X = t[ag](this.type) ? -d : bO;
            this.Y = t[ag](this.type) ? -bM : bN;
            this.W = bP;
            this.H = bK;
            if(t[ag](this.type))
            {
                bH.left != (bQ = -d * u + "px") && (bH.left = bQ);
                bH.top != (bQ = -bM * u + "px") && (bH.top = bQ)
            } else
            {
                if(this.type == "text")
                {
                    bH.left != (bQ = -d + "px") && (bH.left = bQ);
                    bH.top != (bQ = -bM + "px") && (bH.top = bQ)
                } else
                {
                    b.width != (bQ = this.paper.width + "px") && (b.width = bQ);
                    b.height != (bQ = this.paper.height + "px") && (b.height = bQ);
                    bH.left != (bQ = bO - d + "px") && (bH.left = bQ);
                    bH.top != (bQ = bN - bM + "px") && (bH.top = bQ);
                    bH.width != (bQ = bP + "px") && (bH.width = bQ);
                    bH.height != (bQ = bK + "px") && (bH.height = bQ)
                }
            }
        };
        bc.hide = function ()
        {
            !this.removed && (this.Group.style.display = "none");
            return this
        };
        bc.show = function ()
        {
            !this.removed && (this.Group.style.display = "block");
            return this
        };
        bc.getBBox = function ()
        {
            if(this.removed)
            {
                return this
            }
            if(t[ag](this.type))
            {
                return ai(this.attrs.path)
            }
            return{x: this.X + (this.bbx || 0), y: this.Y, width: this.W, height: this.H}
        };
        bc.remove = function ()
        {
            if(this.removed)
            {
                return
            }
            aE(this, this.paper);
            this.node.parentNode.removeChild(this.node);
            this.Group.parentNode.removeChild(this.Group);
            this.shape && this.shape.parentNode.removeChild(this.shape);
            for(var b in this)
            {
                delete this[b]
            }
            this.removed = true
        };
        bc.attr = function (b, bI)
        {
            if(this.removed)
            {
                return this
            }
            if(b == null)
            {
                var bH = {};
                for(var R in this.attrs)
                {
                    if(this.attrs[ag](R))
                    {
                        bH[R] = this.attrs[R]
                    }
                }
                this._.rt.deg && (bH.rotation = this.rotate());
                (this._.sx != 1 || this._.sy != 1) && (bH.scale = this.scale());
                bH.gradient && bH.fill == "none" && (bH.fill = bH.gradient) && delete bH.gradient;
                return bH
            }
            if(bI == null && aI.is(b, "string"))
            {
                if(b == "translation")
                {
                    return A.call(this)
                }
                if(b == "rotation")
                {
                    return this.rotate()
                }
                if(b == "scale")
                {
                    return this.scale()
                }
                if(b == a4 && this.attrs.fill == "none" && this.attrs.gradient)
                {
                    return this.attrs.gradient
                }
                return this.attrs[b]
            }
            if(this.attrs && bI == null && aI.is(b, a7))
            {
                var bL, bK = {};
                for(R = 0, bL = b[s]; R < bL; R++)
                {
                    bK[b[R]] = this.attr(b[R])
                }
                return bK
            }
            var d;
            if(bI != null)
            {
                d = {};
                d[b] = bI
            }
            bI == null && aI.is(b, "object") && (d = b);
            if(d)
            {
                for(var bJ in this.paper.customAttributes)
                {
                    if(this.paper.customAttributes[ag](bJ) && d[ag](bJ) && aI.is(this.paper.customAttributes[bJ], "function"))
                    {
                        var S = this.paper.customAttributes[bJ].apply(this, [][bw](d[bJ]));
                        this.attrs[bJ] = d[bJ];
                        for(var E in S)
                        {
                            if(S[ag](E))
                            {
                                d[E] = S[E]
                            }
                        }
                    }
                }
                if(d.text && this.type == "text")
                {
                    this.node.string = d.text
                }
                an(this, d);
                if(d.gradient && (({circle: 1, ellipse: 1})[ag](this.type) || bC(d.gradient).charAt() != "r"))
                {
                    g(this, d.gradient)
                }
                (!t[ag](this.type) || this._.rt.deg) && this.setBox(this.attrs)
            }
            return this
        };
        bc.toFront = function ()
        {
            !this.removed && this.Group.parentNode[bk](this.Group);
            this.paper.top != this && al(this, this.paper);
            return this
        };
        bc.toBack = function ()
        {
            if(this.removed)
            {
                return this
            }
            if(this.Group.parentNode.firstChild != this.Group)
            {
                this.Group.parentNode.insertBefore(this.Group, this.Group.parentNode.firstChild);
                p(this, this.paper)
            }
            return this
        };
        bc.insertAfter = function (b)
        {
            if(this.removed)
            {
                return this
            }
            if(b.constructor == ah)
            {
                b = b[b.length - 1]
            }
            if(b.Group.nextSibling)
            {
                b.Group.parentNode.insertBefore(this.Group, b.Group.nextSibling)
            } else
            {
                b.Group.parentNode[bk](this.Group)
            }
            J(this, b, this.paper);
            return this
        };
        bc.insertBefore = function (b)
        {
            if(this.removed)
            {
                return this
            }
            if(b.constructor == ah)
            {
                b = b[0]
            }
            b.Group.parentNode.insertBefore(this.Group, b.Group);
            aL(this, b, this.paper);
            return this
        };
        bc.blur = function (b)
        {
            var d = this.node.runtimeStyle, i = d.filter;
            i = i.replace(bx, aP);
            if(+b !== 0)
            {
                this.attrs.blur = b;
                d.filter = i + aH + a5 + ".Blur(pixelradius=" + (+b || 1.5) + ")";
                d.margin = aI.format("-{0}px 0 0 -{0}px", ad(+b || 1.5))
            } else
            {
                d.filter = i;
                d.margin = 0;
                delete this.attrs.blur
            }
        };
        ae = function (d, b, bI, S)
        {
            var R = ay("group"), bH = ay("oval"), i = bH.style;
            R.style.cssText = "position:absolute;left:0;top:0;width:" + d.width + "px;height:" + d.height + "px";
            R.coordsize = aX;
            R.coordorigin = d.coordorigin;
            R[bk](bH);
            var E = new aU(bH, R, d);
            E.type = "circle";
            an(E, {stroke: "#000", fill: "none"});
            E.attrs.cx = b;
            E.attrs.cy = bI;
            E.attrs.r = S;
            E.setBox({x: b - S, y: bI - S, width: S * 2, height: S * 2});
            d.canvas[bk](R);
            return E
        };
        function at(b, R, d, i, E)
        {
            if(E)
            {
                return aI.format("M{0},{1}l{2},0a{3},{3},0,0,1,{3},{3}l0,{5}a{3},{3},0,0,1,{4},{3}l{6},0a{3},{3},0,0,1,{4},{4}l0,{7}a{3},{3},0,0,1,{3},{4}z", b + E, R, d - E * 2, E, -E, i - E * 2, E * 2 - d, E * 2 - i)
            } else
            {
                return aI.format("M{0},{1}l{2},0,0,{3},{4},0z", b, R, d, i, -d)
            }
        }

        bb = function (d, bH, R, bI, i, b)
        {
            var bJ = at(bH, R, bI, i, b), E = d.path(bJ), S = E.attrs;
            E.X = S.x = bH;
            E.Y = S.y = R;
            E.W = S.width = bI;
            E.H = S.height = i;
            S.r = b;
            S.path = bJ;
            E.type = "rect";
            return E
        };
        az = function (b, bJ, bI, i, d)
        {
            var R = ay("group"), E = ay("oval"), bH = E.style;
            R.style.cssText = "position:absolute;left:0;top:0;width:" + b.width + "px;height:" + b.height + "px";
            R.coordsize = aX;
            R.coordorigin = b.coordorigin;
            R[bk](E);
            var S = new aU(E, R, b);
            S.type = "ellipse";
            an(S, {stroke: "#000"});
            S.attrs.cx = bJ;
            S.attrs.cy = bI;
            S.attrs.rx = i;
            S.attrs.ry = d;
            S.setBox({x: bJ - i, y: bI - d, width: i * 2, height: d * 2});
            b.canvas[bk](R);
            return S
        };
        v = function (d, b, bI, bH, bJ, E)
        {
            var R = ay("group"), i = ay("image");
            R.style.cssText = "position:absolute;left:0;top:0;width:" + d.width + "px;height:" + d.height + "px";
            R.coordsize = aX;
            R.coordorigin = d.coordorigin;
            i.src = b;
            R[bk](i);
            var S = new aU(i, R, d);
            S.type = "image";
            S.attrs.src = b;
            S.attrs.x = bI;
            S.attrs.y = bH;
            S.attrs.w = bJ;
            S.attrs.h = E;
            S.setBox({x: bI, y: bH, width: bJ, height: E});
            d.canvas[bk](R);
            return S
        };
        ak = function (d, bJ, bI, bK)
        {
            var R = ay("group"), E = ay("shape"), bH = E.style, bL = ay("path"), b = bL.style, i = ay("textpath");
            R.style.cssText = "position:absolute;left:0;top:0;width:" + d.width + "px;height:" + d.height + "px";
            R.coordsize = aX;
            R.coordorigin = d.coordorigin;
            bL.v = aI.format("m{0},{1}l{2},{1}", ad(bJ * 10), ad(bI * 10), ad(bJ * 10) + 1);
            bL.textpathok = true;
            bH.width = d.width;
            bH.height = d.height;
            i.string = bC(bK);
            i.on = true;
            E[bk](i);
            E[bk](bL);
            R[bk](E);
            var S = new aU(i, R, d);
            S.shape = E;
            S.textpath = bL;
            S.type = "text";
            S.attrs.text = bK;
            S.attrs.x = bJ;
            S.attrs.y = bI;
            S.attrs.w = 1;
            S.attrs.h = 1;
            an(S, {font: q.font, stroke: "none", fill: "#000"});
            S.setBox();
            d.canvas[bk](R);
            return S
        };
        bA = function (i, b)
        {
            var d = this.canvas.style;
            i == +i && (i += "px");
            b == +b && (b += "px");
            d.width = i;
            d.height = b;
            d.clip = "rect(0 " + i + " " + b + " 0)";
            return this
        };
        var ay;
        aa.createStyleSheet().addRule(".rvml", "behavior:url(#default#VML)");
        try
        {
            !aa.namespaces.rvml && aa.namespaces.add("rvml", "urn:schemas-microsoft-com:vml");
            ay = function (b)
            {
                return aa.createElement("<rvml:" + b + ' class="rvml">')
            }
        }
        catch (aw)
        {
            ay = function (b)
            {
                return aa.createElement("<" + b + ' xmlns="urn:schemas-microsoft.com:vml" class="rvml">')
            }
        }
        F = function ()
        {
            var i = aJ[bB](0, arguments), b = i.container, bJ = i.height, bK, d = i.width, bI = i.x, bH = i.y;
            if(!b)
            {
                throw new Error("VML container not found.")
            }
            var R = new bz, S = R.canvas = aa.createElement("div"), E = S.style;
            bI = bI || 0;
            bH = bH || 0;
            d = d || 512;
            bJ = bJ || 342;
            d == +d && (d += "px");
            bJ == +bJ && (bJ += "px");
            R.width = 1000;
            R.height = 1000;
            R.coordsize = u * 1000 + aH + u * 1000;
            R.coordorigin = "0 0";
            R.span = aa.createElement("span");
            R.span.style.cssText = "position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;";
            S[bk](R.span);
            E.cssText = aI.format("top:0;left:0;width:{0};height:{1};display:inline-block;position:relative;clip:rect(0 {0} {1} 0);overflow:hidden", d, bJ);
            if(b == 1)
            {
                aa.body[bk](S);
                E.left = bI + "px";
                E.top = bH + "px";
                E.position = "absolute"
            } else
            {
                if(b.firstChild)
                {
                    b.insertBefore(S, b.firstChild)
                } else
                {
                    b[bk](S)
                }
            }
            be.call(R, R, aI.fn);
            return R
        };
        aZ.clear = function ()
        {
            this.canvas.innerHTML = aP;
            this.span = aa.createElement("span");
            this.span.style.cssText = "position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;";
            this.canvas[bk](this.span);
            this.bottom = this.top = null
        };
        aZ.remove = function ()
        {
            this.canvas.parentNode.removeChild(this.canvas);
            for(var b in this)
            {
                this[b] = z(b)
            }
            return true
        }
    }
    var U = navigator.userAgent.match(/Version\/(.*?)\s/);
    if((navigator.vendor == "Apple Computer, Inc.") && (U && U[1] < 4 || navigator.platform.slice(0, 2) == "iP"))
    {
        aZ.safari = function ()
        {
            var b = this.rect(-99, -99, this.width + 99, this.height + 99).attr({stroke: "none"});
            aQ.setTimeout(function ()
            {
                b.remove()
            })
        }
    } else
    {
        aZ.safari = function ()
        {
        }
    }
    var O = function ()
    {
        this.returnValue = false
    }, bv = function ()
    {
        return this.originalEvent.preventDefault()
    }, a3 = function ()
    {
        this.cancelBubble = true
    }, aD = function ()
    {
        return this.originalEvent.stopPropagation()
    }, av = (function ()
    {
        if(aa.addEventListener)
        {
            return function (S, E, i, d)
            {
                var b = W && bq[E] ? bq[E] : E;
                var R = function (bK)
                {
                    if(W && bq[ag](E))
                    {
                        for(var bI = 0, bJ = bK.targetTouches && bK.targetTouches.length; bI < bJ; bI++)
                        {
                            if(bK.targetTouches[bI].target == S)
                            {
                                var bH = bK;
                                bK = bK.targetTouches[bI];
                                bK.originalEvent = bH;
                                bK.preventDefault = bv;
                                bK.stopPropagation = aD;
                                break
                            }
                        }
                    }
                    return i.call(d, bK)
                };
                S.addEventListener(b, R, false);
                return function ()
                {
                    S.removeEventListener(b, R, false);
                    return true
                }
            }
        } else
        {
            if(aa.attachEvent)
            {
                return function (S, E, i, d)
                {
                    var R = function (bH)
                    {
                        bH = bH || aQ.event;
                        bH.preventDefault = bH.preventDefault || O;
                        bH.stopPropagation = bH.stopPropagation || a3;
                        return i.call(d, bH)
                    };
                    S.attachEvent("on" + E, R);
                    var b = function ()
                    {
                        S.detachEvent("on" + E, R);
                        return true
                    };
                    return b
                }
            }
        }
    })(), a8 = [], br = function (S)
    {
        var bI = S.clientX, bH = S.clientY, bJ = aa.documentElement.scrollTop || aa.body.scrollTop, bK = aa.documentElement.scrollLeft || aa.body.scrollLeft, b, d = a8.length;
        while (d--)
        {
            b = a8[d];
            if(W)
            {
                var R = S.touches.length, E;
                while (R--)
                {
                    E = S.touches[R];
                    if(E.identifier == b.el._drag.id)
                    {
                        bI = E.clientX;
                        bH = E.clientY;
                        (S.originalEvent ? S.originalEvent : S).preventDefault();
                        break
                    }
                }
            } else
            {
                S.preventDefault()
            }
            bI += bK;
            bH += bJ;
            b.move && b.move.call(b.move_scope || b.el, bI - b.el._drag.x, bH - b.el._drag.y, bI, bH, S)
        }
    }, f = function (E)
    {
        aI.unmousemove(br).unmouseup(f);
        var d = a8.length, b;
        while (d--)
        {
            b = a8[d];
            b.el._drag = {};
            b.end && b.end.call(b.end_scope || b.start_scope || b.move_scope || b.el, E)
        }
        a8 = []
    };
    for(var ar = Q[s]; ar--;)
    {
        (function (b)
        {
            aI[b] = aU[bE][b] = function (i, d)
            {
                if(aI.is(i, "function"))
                {
                    this.events = this.events || [];
                    this.events.push({name: b, f: i, unbind: av(this.shape || this.node || aa, b, i, d || this)})
                }
                return this
            };
            aI["un" + b] = aU[bE]["un" + b] = function (E)
            {
                var i = this.events, d = i[s];
                while (d--)
                {
                    if(i[d].name == b && i[d].f == E)
                    {
                        i[d].unbind();
                        i.splice(d, 1);
                        !i.length && delete this.events;
                        return this
                    }
                }
                return this
            }
        })(Q[ar])
    }
    bc.hover = function (E, b, i, d)
    {
        return this.mouseover(E, i).mouseout(b, d || i)
    };
    bc.unhover = function (d, b)
    {
        return this.unmouseover(d).unmouseout(b)
    };
    bc.drag = function (d, S, R, b, i, E)
    {
        this._drag = {};
        this.mousedown(function (bI)
        {
            (bI.originalEvent || bI).preventDefault();
            var bH = aa.documentElement.scrollTop || aa.body.scrollTop, bJ = aa.documentElement.scrollLeft || aa.body.scrollLeft;
            this._drag.x = bI.clientX + bJ;
            this._drag.y = bI.clientY + bH;
            this._drag.id = bI.identifier;
            S && S.call(i || b || this, bI.clientX + bJ, bI.clientY + bH, bI);
            !a8.length && aI.mousemove(br).mouseup(f);
            a8.push({el: this, move: d, end: R, move_scope: b, start_scope: i, end_scope: E})
        });
        return this
    };
    bc.undrag = function (b, R, E)
    {
        var d = a8.length;
        while (d--)
        {
            a8[d].el == this && (a8[d].move == b && a8[d].end == E) && a8.splice(d++, 1)
        }
        !a8.length && aI.unmousemove(br).unmouseup(f)
    };
    aZ.circle = function (b, i, d)
    {
        return ae(this, b || 0, i || 0, d || 0)
    };
    aZ.rect = function (b, R, d, i, E)
    {
        return bb(this, b || 0, R || 0, d || 0, i || 0, E || 0)
    };
    aZ.ellipse = function (b, E, i, d)
    {
        return az(this, b || 0, E || 0, i || 0, d || 0)
    };
    aZ.path = function (b)
    {
        b && !aI.is(b, af) && !aI.is(b[0], a7) && (b += aP);
        return x(aI.format[bB](aI, arguments), this)
    };
    aZ.image = function (E, b, R, d, i)
    {
        return v(this, E || "about:blank", b || 0, R || 0, d || 0, i || 0)
    };
    aZ.text = function (b, i, d)
    {
        return ak(this, b || 0, i || 0, bC(d))
    };
    aZ.set = function (b)
    {
        arguments[s] > 1 && (b = Array[bE].splice.call(arguments, 0, arguments[s]));
        return new ah(b)
    };
    aZ.setSize = bA;
    aZ.top = aZ.bottom = null;
    aZ.raphael = aI;
    function C()
    {
        return this.x + aH + this.y
    }

    bc.resetScale = function ()
    {
        if(this.removed)
        {
            return this
        }
        this._.sx = 1;
        this._.sy = 1;
        this.attrs.scale = "1 1"
    };
    bc.scale = function (b0, bZ, bR, bP)
    {
        if(this.removed)
        {
            return this
        }
        if(b0 == null && bZ == null)
        {
            return{x: this._.sx, y: this._.sy, toString: C}
        }
        bZ = bZ || b0;
        !+bZ && (bZ = b0);
        var d, b, b8, b7, cb = this.attrs;
        if(b0 != 0)
        {
            var cc = this.getBBox(), R = cc.x + cc.width / 2, E = cc.y + cc.height / 2, b5 = aq(b0 / this._.sx), b4 = aq(bZ / this._.sy);
            bR = (+bR || bR == 0) ? bR : R;
            bP = (+bP || bP == 0) ? bP : E;
            var bK = this._.sx > 0, bJ = this._.sy > 0, bQ = ~~(b0 / aq(b0)), bO = ~~(bZ / aq(bZ)), bH = b5 * bQ, S = b4 * bO, b1 = this.node.style, bY = bR + aq(R - bR) * bH * (R > bR == bK ? 1 : -1), bX = bP + aq(E - bP) * S * (E > bP == bJ ? 1 : -1), bU = (b0 * bQ > bZ * bO ? b4 : b5);
            switch (this.type)
            {
                case"rect":
                case"image":
                    var bM = cb.width * b5, bV = cb.height * b4;
                    this.attr({height: bV, r: cb.r * bU, width: bM, x: bY - bM / 2, y: bX - bV / 2});
                    break;
                case"circle":
                case"ellipse":
                    this.attr({rx: cb.rx * b5, ry: cb.ry * b4, r: cb.r * bU, cx: bY, cy: bX});
                    break;
                case"text":
                    this.attr({x: bY, y: bX});
                    break;
                case"path":
                    var b3 = au(cb.path), bL = true, bT = bK ? bH : b5, bS = bJ ? S : b4;
                    for(var ca = 0, bW = b3[s]; ca < bW; ca++)
                    {
                        var b6 = b3[ca], bN = bo.call(b6[0]);
                        if(bN == "M" && bL)
                        {
                            continue
                        } else
                        {
                            bL = false
                        }
                        if(bN == "A")
                        {
                            b6[b3[ca][s] - 2] *= bT;
                            b6[b3[ca][s] - 1] *= bS;
                            b6[1] *= b5;
                            b6[2] *= b4;
                            b6[5] = +(bQ + bO ? !!+b6[5] : !+b6[5])
                        } else
                        {
                            if(bN == "H")
                            {
                                for(var b9 = 1, bI = b6[s]; b9 < bI; b9++)
                                {
                                    b6[b9] *= bT
                                }
                            } else
                            {
                                if(bN == "V")
                                {
                                    for(b9 = 1, bI = b6[s]; b9 < bI; b9++)
                                    {
                                        b6[b9] *= bS
                                    }
                                } else
                                {
                                    for(b9 = 1, bI = b6[s]; b9 < bI; b9++)
                                    {
                                        b6[b9] *= (b9 % 2) ? bT : bS
                                    }
                                }
                            }
                        }
                    }
                    var b2 = ai(b3);
                    d = bY - b2.x - b2.width / 2;
                    b = bX - b2.y - b2.height / 2;
                    b3[0][1] += d;
                    b3[0][2] += b;
                    this.attr({path: b3});
                    break
            }
            if(this.type in {text: 1, image: 1} && (bQ != 1 || bO != 1))
            {
                if(this.transformations)
                {
                    this.transformations[2] = "scale("[bw](bQ, ",", bO, ")");
                    this.node[D]("transform", this.transformations[aW](aH));
                    d = (bQ == -1) ? -cb.x - (bM || 0) : cb.x;
                    b = (bO == -1) ? -cb.y - (bV || 0) : cb.y;
                    this.attr({x: d, y: b});
                    cb.fx = bQ - 1;
                    cb.fy = bO - 1
                } else
                {
                    this.node.filterMatrix = a5 + ".Matrix(M11="[bw](bQ, ", M12=0, M21=0, M22=", bO, ", Dx=0, Dy=0, sizingmethod='auto expand', filtertype='bilinear')");
                    b1.filter = (this.node.filterMatrix || aP) + (this.node.filterOpacity || aP)
                }
            } else
            {
                if(this.transformations)
                {
                    this.transformations[2] = aP;
                    this.node[D]("transform", this.transformations[aW](aH));
                    cb.fx = 0;
                    cb.fy = 0
                } else
                {
                    this.node.filterMatrix = aP;
                    b1.filter = (this.node.filterMatrix || aP) + (this.node.filterOpacity || aP)
                }
            }
            cb.scale = [b0, bZ, bR, bP][aW](aH);
            this._.sx = b0;
            this._.sy = bZ
        }
        return this
    };
    bc.clone = function ()
    {
        if(this.removed)
        {
            return null
        }
        var b = this.attr();
        delete b.scale;
        delete b.translation;
        return this.paper[this.type]().attr(b)
    };
    var a2 = {}, l = function (S, d, bK, bJ, bS, bR, bQ, bO, bH)
    {
        var bN = 0, bM = 100, R = [S, d, bK, bJ, bS, bR, bQ, bO].join(), b = a2[R], bI, E;
        !b && (a2[R] = b = {data: []});
        b.timer && clearTimeout(b.timer);
        b.timer = setTimeout(function ()
        {
            delete a2[R]
        }, 2000);
        if(bH != null)
        {
            var bP = l(S, d, bK, bJ, bS, bR, bQ, bO);
            bM = ~~bP * 10
        }
        for(var bL = 0; bL < bM + 1; bL++)
        {
            if(b.data[bH] > bL)
            {
                E = b.data[bL * bM]
            } else
            {
                E = aI.findDotsAtSegment(S, d, bK, bJ, bS, bR, bQ, bO, bL / bM);
                b.data[bL] = E
            }
            bL && (bN += bl(bl(bI.x - E.x, 2) + bl(bI.y - E.y, 2), 0.5));
            if(bH != null && bN >= bH)
            {
                return E
            }
            bI = E
        }
        if(bH == null)
        {
            return bN
        }
    }, a1 = function (b, d)
    {
        return function (bQ, S, bH)
        {
            bQ = V(bQ);
            var bM, bL, E, bI, R = "", bP = {}, bN, bK = 0;
            for(var bJ = 0, bO = bQ.length; bJ < bO; bJ++)
            {
                E = bQ[bJ];
                if(E[0] == "M")
                {
                    bM = +E[1];
                    bL = +E[2]
                } else
                {
                    bI = l(bM, bL, E[1], E[2], E[3], E[4], E[5], E[6]);
                    if(bK + bI > S)
                    {
                        if(d && !bP.start)
                        {
                            bN = l(bM, bL, E[1], E[2], E[3], E[4], E[5], E[6], S - bK);
                            R += ["C", bN.start.x, bN.start.y, bN.m.x, bN.m.y, bN.x, bN.y];
                            if(bH)
                            {
                                return R
                            }
                            bP.start = R;
                            R = ["M", bN.x, bN.y + "C", bN.n.x, bN.n.y, bN.end.x, bN.end.y, E[5], E[6]][aW]();
                            bK += bI;
                            bM = +E[5];
                            bL = +E[6];
                            continue
                        }
                        if(!b && !d)
                        {
                            bN = l(bM, bL, E[1], E[2], E[3], E[4], E[5], E[6], S - bK);
                            return{x: bN.x, y: bN.y, alpha: bN.alpha}
                        }
                    }
                    bK += bI;
                    bM = +E[5];
                    bL = +E[6]
                }
                R += E
            }
            bP.end = R;
            bN = b ? bK : d ? bP : aI.findDotsAtSegment(bM, bL, E[1], E[2], E[3], E[4], E[5], E[6], 1);
            bN.alpha && (bN = {x: bN.x, y: bN.y, alpha: bN.alpha});
            return bN
        }
    };
    var aK = a1(1), L = a1(), Y = a1(0, 1);
    bc.getTotalLength = function ()
    {
        if(this.type != "path")
        {
            return
        }
        if(this.node.getTotalLength)
        {
            return this.node.getTotalLength()
        }
        return aK(this.attrs.path)
    };
    bc.getPointAtLength = function (b)
    {
        if(this.type != "path")
        {
            return
        }
        return L(this.attrs.path, b)
    };
    bc.getSubpath = function (i, d)
    {
        if(this.type != "path")
        {
            return
        }
        if(aq(this.getTotalLength() - d) < "1e-6")
        {
            return Y(this.attrs.path, i).end
        }
        var b = Y(this.attrs.path, d, 1);
        return i ? Y(b, i).end : b
    };
    aI.easing_formulas = {linear: function (b)
    {
        return b
    }, "<"                      : function (b)
    {
        return bl(b, 3)
    }, ">"                      : function (b)
    {
        return bl(b - 1, 3) + 1
    }, "<>"                     : function (b)
    {
        b = b * 2;
        if(b < 1)
        {
            return bl(b, 3) / 2
        }
        b -= 2;
        return(bl(b, 3) + 2) / 2
    }, backIn                   : function (d)
    {
        var b = 1.70158;
        return d * d * ((b + 1) * d - b)
    }, backOut                  : function (d)
    {
        d = d - 1;
        var b = 1.70158;
        return d * d * ((b + 1) * d + b) + 1
    }, elastic                  : function (i)
    {
        if(i == 0 || i == 1)
        {
            return i
        }
        var d = 0.3, b = d / 4;
        return bl(2, -10 * i) * ao.sin((i - b) * (2 * aM) / d) + 1
    }, bounce                   : function (E)
    {
        var d = 7.5625, i = 2.75, b;
        if(E < (1 / i))
        {
            b = d * E * E
        } else
        {
            if(E < (2 / i))
            {
                E -= (1.5 / i);
                b = d * E * E + 0.75
            } else
            {
                if(E < (2.5 / i))
                {
                    E -= (2.25 / i);
                    b = d * E * E + 0.9375
                } else
                {
                    E -= (2.625 / i);
                    b = d * E * E + 0.984375
                }
            }
        }
        return b
    }};
    var X = [], bu = function ()
    {
        var bI = +new Date;
        for(var bT = 0; bT < X[s]; bT++)
        {
            var bY = X[bT];
            if(bY.stop || bY.el.removed)
            {
                continue
            }
            var R = bI - bY.start, bQ = bY.ms, bP = bY.easing, bU = bY.from, bN = bY.diff, d = bY.to, bM = bY.t, bH = bY.el, bO = {}, b;
            if(R < bQ)
            {
                var E = bP(R / bQ);
                for(var bR in bU)
                {
                    if(bU[ag](bR))
                    {
                        switch (am[bR])
                        {
                            case"along":
                                b = E * bQ * bN[bR];
                                d.back && (b = d.len - b);
                                var bS = L(d[bR], b);
                                bH.translate(bN.sx - bN.x || 0, bN.sy - bN.y || 0);
                                bN.x = bS.x;
                                bN.y = bS.y;
                                bH.translate(bS.x - bN.sx, bS.y - bN.sy);
                                d.rot && bH.rotate(bN.r + bS.alpha, bS.x, bS.y);
                                break;
                            case aF:
                                b = +bU[bR] + E * bQ * bN[bR];
                                break;
                            case"colour":
                                b = "rgb(" + [
                                    K(ad(bU[bR].r + E * bQ * bN[bR].r)), K(ad(bU[bR].g + E * bQ * bN[bR].g)),
                                    K(ad(bU[bR].b + E * bQ * bN[bR].b))
                                ][aW](",") + ")";
                                break;
                            case"path":
                                b = [];
                                for(var bW = 0, bL = bU[bR][s]; bW < bL; bW++)
                                {
                                    b[bW] = [bU[bR][bW][0]];
                                    for(var bV = 1, bX = bU[bR][bW][s]; bV < bX; bV++)
                                    {
                                        b[bW][bV] = +bU[bR][bW][bV] + E * bQ * bN[bR][bW][bV]
                                    }
                                    b[bW] = b[bW][aW](aH)
                                }
                                b = b[aW](aH);
                                break;
                            case"csv":
                                switch (bR)
                                {
                                    case"translation":
                                        var bK = E * bQ * bN[bR][0] - bM.x, bJ = E * bQ * bN[bR][1] - bM.y;
                                        bM.x += bK;
                                        bM.y += bJ;
                                        b = bK + aH + bJ;
                                        break;
                                    case"rotation":
                                        b = +bU[bR][0] + E * bQ * bN[bR][0];
                                        bU[bR][1] && (b += "," + bU[bR][1] + "," + bU[bR][2]);
                                        break;
                                    case"scale":
                                        b = [
                                            +bU[bR][0] + E * bQ * bN[bR][0], +bU[bR][1] + E * bQ * bN[bR][1],
                                            (2 in d[bR] ? d[bR][2] : aP), (3 in d[bR] ? d[bR][3] : aP)
                                        ][aW](aH);
                                        break;
                                    case"clip-rect":
                                        b = [];
                                        bW = 4;
                                        while (bW--)
                                        {
                                            b[bW] = +bU[bR][bW] + E * bQ * bN[bR][bW]
                                        }
                                        break
                                }
                                break;
                            default:
                                var S = [].concat(bU[bR]);
                                b = [];
                                bW = bH.paper.customAttributes[bR].length;
                                while (bW--)
                                {
                                    b[bW] = +S[bW] + E * bQ * bN[bR][bW]
                                }
                                break
                        }
                        bO[bR] = b
                    }
                }
                bH.attr(bO);
                bH._run && bH._run.call(bH)
            } else
            {
                if(d.along)
                {
                    bS = L(d.along, d.len * !d.back);
                    bH.translate(bN.sx - (bN.x || 0) + bS.x - bN.sx, bN.sy - (bN.y || 0) + bS.y - bN.sy);
                    d.rot && bH.rotate(bN.r + bS.alpha, bS.x, bS.y)
                }
                (bM.x || bM.y) && bH.translate(-bM.x, -bM.y);
                d.scale && (d.scale += aP);
                bH.attr(d);
                X.splice(bT--, 1)
            }
        }
        aI.svg && bH && bH.paper && bH.paper.safari();
        X[s] && setTimeout(bu)
    }, by = function (b, i, S, R, E)
    {
        var d = S - R;
        i.timeouts.push(setTimeout(function ()
        {
            aI.is(E, "function") && E.call(i);
            i.animate(b, d, b.easing)
        }, R))
    }, K = function (b)
    {
        return m(bi(b, 255), 0)
    }, A = function (b, i)
    {
        if(b == null)
        {
            return{x: this._.tx, y: this._.ty, toString: C}
        }
        this._.tx += +b;
        this._.ty += +i;
        switch (this.type)
        {
            case"circle":
            case"ellipse":
                this.attr({cx: +b + this.attrs.cx, cy: +i + this.attrs.cy});
                break;
            case"rect":
            case"image":
            case"text":
                this.attr({x: +b + this.attrs.x, y: +i + this.attrs.y});
                break;
            case"path":
                var d = au(this.attrs.path);
                d[0][1] += +b;
                d[0][2] += +i;
                this.attr({path: d});
                break
        }
        return this
    };
    bc.animateWith = function (E, S, b, bI, bH)
    {
        for(var d = 0, R = X.length; d < R; d++)
        {
            if(X[d].el.id == E.id)
            {
                S.start = X[d].start
            }
        }
        return this.animate(S, b, bI, bH)
    };
    bc.animateAlong = aV();
    bc.animateAlongBack = aV(1);
    function aV(b)
    {
        return function (E, i, d, S)
        {
            var R = {back: b};
            aI.is(d, "function") ? (S = d) : (R.rot = d);
            E && E.constructor == aU && (E = E.attrs.path);
            E && (R.along = E);
            return this.animate(R, i, S)
        }
    }

    function aY(bO, E, d, bN, bM, bI)
    {
        var bJ = 3 * E, bL = 3 * (bN - E) - bJ, b = 1 - bJ - bL, bH = 3 * d, bK = 3 * (bM - d) - bH, bP = 1 - bH - bK;

        function S(bQ)
        {
            return((b * bQ + bL) * bQ + bJ) * bQ
        }

        function i(bQ, bS)
        {
            var bR = R(bQ, bS);
            return((bP * bR + bK) * bR + bH) * bR
        }

        function R(bQ, bX)
        {
            var bW, bV, bT, bR, bU, bS;
            for(bT = bQ, bS = 0; bS < 8; bS++)
            {
                bR = S(bT) - bQ;
                if(aq(bR) < bX)
                {
                    return bT
                }
                bU = (3 * b * bT + 2 * bL) * bT + bJ;
                if(aq(bU) < 0.000001)
                {
                    break
                }
                bT = bT - bR / bU
            }
            bW = 0;
            bV = 1;
            bT = bQ;
            if(bT < bW)
            {
                return bW
            }
            if(bT > bV)
            {
                return bV
            }
            while (bW < bV)
            {
                bR = S(bT);
                if(aq(bR - bQ) < bX)
                {
                    return bT
                }
                if(bQ > bR)
                {
                    bW = bT
                } else
                {
                    bV = bT
                }
                bT = (bV - bW) / 2 + bW
            }
            return bT
        }

        return i(bO, 1 / (200 * bI))
    }

    bc.onAnimation = function (b)
    {
        this._run = b || 0;
        return this
    };
    bc.animate = function (b1, bR, bQ, S)
    {
        var d = this;
        d.timeouts = d.timeouts || [];
        if(aI.is(bQ, "function") || !bQ)
        {
            S = bQ || null
        }
        if(d.removed)
        {
            S && S.call(d);
            return d
        }
        var bV = {}, E = {}, bH = false, bM = {};
        for(var bS in b1)
        {
            if(b1[ag](bS))
            {
                if(am[ag](bS) || d.paper.customAttributes[ag](bS))
                {
                    bH = true;
                    bV[bS] = d.attr(bS);
                    (bV[bS] == null) && (bV[bS] = q[bS]);
                    E[bS] = b1[bS];
                    switch (am[bS])
                    {
                        case"along":
                            var bZ = aK(b1[bS]);
                            var bT = L(b1[bS], bZ * !!b1.back);
                            var bI = d.getBBox();
                            bM[bS] = bZ / bR;
                            bM.tx = bI.x;
                            bM.ty = bI.y;
                            bM.sx = bT.x;
                            bM.sy = bT.y;
                            E.rot = b1.rot;
                            E.back = b1.back;
                            E.len = bZ;
                            b1.rot && (bM.r = aj(d.rotate()) || 0);
                            break;
                        case aF:
                            bM[bS] = (E[bS] - bV[bS]) / bR;
                            break;
                        case"colour":
                            bV[bS] = aI.getRGB(bV[bS]);
                            var bU = aI.getRGB(E[bS]);
                            bM[bS] = {r: (bU.r - bV[bS].r) / bR, g: (bU.g - bV[bS].g) / bR, b: (bU.b - bV[bS].b) / bR};
                            break;
                        case"path":
                            var bJ = V(bV[bS], E[bS]);
                            bV[bS] = bJ[0];
                            var bO = bJ[1];
                            bM[bS] = [];
                            for(var bY = 0, bL = bV[bS][s]; bY < bL; bY++)
                            {
                                bM[bS][bY] = [0];
                                for(var bX = 1, b0 = bV[bS][bY][s]; bX < b0; bX++)
                                {
                                    bM[bS][bY][bX] = (bO[bY][bX] - bV[bS][bY][bX]) / bR
                                }
                            }
                            break;
                        case"csv":
                            var b = bC(b1[bS])[I](a), bK = bC(bV[bS])[I](a);
                            switch (bS)
                            {
                                case"translation":
                                    bV[bS] = [0, 0];
                                    bM[bS] = [b[0] / bR, b[1] / bR];
                                    break;
                                case"rotation":
                                    bV[bS] = (bK[1] == b[1] && bK[2] == b[2]) ? bK : [0, b[1], b[2]];
                                    bM[bS] = [(b[0] - bV[bS][0]) / bR, 0, 0];
                                    break;
                                case"scale":
                                    b1[bS] = b;
                                    bV[bS] = bC(bV[bS])[I](a);
                                    bM[bS] = [(b[0] - bV[bS][0]) / bR, (b[1] - bV[bS][1]) / bR, 0, 0];
                                    break;
                                case"clip-rect":
                                    bV[bS] = bC(bV[bS])[I](a);
                                    bM[bS] = [];
                                    bY = 4;
                                    while (bY--)
                                    {
                                        bM[bS][bY] = (b[bY] - bV[bS][bY]) / bR
                                    }
                                    break
                            }
                            E[bS] = b;
                            break;
                        default:
                            b = [].concat(b1[bS]);
                            bK = [].concat(bV[bS]);
                            bM[bS] = [];
                            bY = d.paper.customAttributes[bS][s];
                            while (bY--)
                            {
                                bM[bS][bY] = ((b[bY] || 0) - (bK[bY] || 0)) / bR
                            }
                            break
                    }
                }
            }
        }
        if(!bH)
        {
            var bP = [], R;
            for(var b2 in b1)
            {
                if(b1[ag](b2) && bf.test(b2))
                {
                    bS = {value: b1[b2]};
                    b2 == "from" && (b2 = 0);
                    b2 == "to" && (b2 = 100);
                    bS.key = T(b2, 10);
                    bP.push(bS)
                }
            }
            bP.sort(bm);
            if(bP[0].key)
            {
                bP.unshift({key: 0, value: d.attrs})
            }
            for(bY = 0, bL = bP[s]; bY < bL; bY++)
            {
                by(bP[bY].value, d, bR / 100 * bP[bY].key, bR / 100 * (bP[bY - 1] && bP[bY - 1].key || 0), bP[bY - 1] && bP[bY - 1].value.callback)
            }
            R = bP[bP[s] - 1].value.callback;
            if(R)
            {
                d.timeouts.push(setTimeout(function ()
                {
                    R.call(d)
                }, bR))
            }
        } else
        {
            var bW = aI.easing_formulas[bQ];
            if(!bW)
            {
                bW = bC(bQ).match(c);
                if(bW && bW[s] == 5)
                {
                    var bN = bW;
                    bW = function (i)
                    {
                        return aY(i, +bN[1], +bN[2], +bN[3], +bN[4], bR)
                    }
                } else
                {
                    bW = function (i)
                    {
                        return i
                    }
                }
            }
            X.push({start: b1.start || +new Date, ms: bR, easing: bW, from: bV, diff: bM, to: E, el: d, t: {x: 0, y: 0}});
            aI.is(S, "function") && (d._ac = setTimeout(function ()
            {
                S.call(d)
            }, bR));
            X[s] == 1 && setTimeout(bu)
        }
        return this
    };
    bc.stop = function ()
    {
        for(var b = 0; b < X.length; b++)
        {
            X[b].el.id == this.id && X.splice(b--, 1)
        }
        for(b = 0, ii = this.timeouts && this.timeouts.length; b < ii; b++)
        {
            clearTimeout(this.timeouts[b])
        }
        this.timeouts = [];
        clearTimeout(this._ac);
        delete this._ac;
        return this
    };
    bc.translate = function (b, d)
    {
        return this.attr({translation: b + " " + d})
    };
    bc[a0] = function ()
    {
        return"Rapha\xebl\u2019s object"
    };
    aI.ae = X;
    var ah = function (b)
    {
        this.items = [];
        this[s] = 0;
        this.type = "set";
        if(b)
        {
            for(var d = 0, E = b[s]; d < E; d++)
            {
                if(b[d] && (b[d].constructor == aU || b[d].constructor == ah))
                {
                    this[this.items[s]] = this.items[this.items[s]] = b[d];
                    this[s]++
                }
            }
        }
    };
    ah[bE][k] = function ()
    {
        var R, b;
        for(var d = 0, E = arguments[s]; d < E; d++)
        {
            R = arguments[d];
            if(R && (R.constructor == aU || R.constructor == ah))
            {
                b = this.items[s];
                this[b] = this.items[b] = R;
                this[s]++
            }
        }
        return this
    };
    ah[bE].pop = function ()
    {
        delete this[this[s]--];
        return this.items.pop()
    };
    for(var H in bc)
    {
        if(bc[ag](H))
        {
            ah[bE][H] = (function (b)
            {
                return function ()
                {
                    for(var d = 0, E = this.items[s]; d < E; d++)
                    {
                        this.items[d][b][bB](this.items[d], arguments)
                    }
                    return this
                }
            })(H)
        }
    }
    ah[bE].attr = function (d, bH)
    {
        if(d && aI.is(d, a7) && aI.is(d[0], "object"))
        {
            for(var b = 0, S = d[s]; b < S; b++)
            {
                this.items[b].attr(d[b])
            }
        } else
        {
            for(var E = 0, R = this.items[s]; E < R; E++)
            {
                this.items[E].attr(d, bH)
            }
        }
        return this
    };
    ah[bE].animate = function (d, b, bH, bJ)
    {
        (aI.is(bH, "function") || !bH) && (bJ = bH || null);
        var S = this.items[s], E = S, bK, bI = this, R;
        bJ && (R = function ()
        {
            !--S && bJ.call(bI)
        });
        bH = aI.is(bH, af) ? bH : R;
        bK = this.items[--E].animate(d, b, bH, R);
        while (E--)
        {
            this.items[E] && !this.items[E].removed && this.items[E].animateWith(bK, d, b, bH, R)
        }
        return this
    };
    ah[bE].insertAfter = function (d)
    {
        var b = this.items[s];
        while (b--)
        {
            this.items[b].insertAfter(d)
        }
        return this
    };
    ah[bE].getBBox = function ()
    {
        var b = [], bH = [], d = [], R = [];
        for(var E = this.items[s]; E--;)
        {
            var S = this.items[E].getBBox();
            b[k](S.x);
            bH[k](S.y);
            d[k](S.x + S.width);
            R[k](S.y + S.height)
        }
        b = bi[bB](0, b);
        bH = bi[bB](0, bH);
        return{x: b, y: bH, width: m[bB](0, d) - b, height: m[bB](0, R) - bH}
    };
    ah[bE].clone = function (E)
    {
        E = new ah;
        for(var b = 0, d = this.items[s]; b < d; b++)
        {
            E[k](this.items[b].clone())
        }
        return E
    };
    aI.registerFont = function (d)
    {
        if(!d.face)
        {
            return d
        }
        this.fonts = this.fonts || {};
        var E = {w: d.w, face: {}, glyphs: {}}, i = d.face["font-family"];
        for(var bH in d.face)
        {
            if(d.face[ag](bH))
            {
                E.face[bH] = d.face[bH]
            }
        }
        if(this.fonts[i])
        {
            this.fonts[i][k](E)
        } else
        {
            this.fonts[i] = [E]
        }
        if(!d.svg)
        {
            E.face["units-per-em"] = T(d.face["units-per-em"], 10);
            for(var R in d.glyphs)
            {
                if(d.glyphs[ag](R))
                {
                    var S = d.glyphs[R];
                    E.glyphs[R] = {w: S.w, k: {}, d: S.d && "M" + S.d[bs](/[mlcxtrv]/g, function (bI)
                    {
                        return{l: "L", c: "C", x: "z", t: "m", r: "l", v: "c"}[bI] || "M"
                    }) + "z"};
                    if(S.k)
                    {
                        for(var b in S.k)
                        {
                            if(S[ag](b))
                            {
                                E.glyphs[R].k[b] = S.k[b]
                            }
                        }
                    }
                }
            }
        }
        return d
    };
    aZ.getFont = function (bJ, bK, d, R)
    {
        R = R || "normal";
        d = d || "normal";
        bK = +bK || {normal: 400, bold: 700, lighter: 300, bolder: 800}[bK] || 400;
        if(!aI.fonts)
        {
            return
        }
        var S = aI.fonts[bJ];
        if(!S)
        {
            var E = new RegExp("(^|\\s)" + bJ[bs](/[^\w\d\s+!~.:_-]/g, aP) + "(\\s|$)", "i");
            for(var b in aI.fonts)
            {
                if(aI.fonts[ag](b))
                {
                    if(E.test(b))
                    {
                        S = aI.fonts[b];
                        break
                    }
                }
            }
        }
        var bH;
        if(S)
        {
            for(var bI = 0, bL = S[s]; bI < bL; bI++)
            {
                bH = S[bI];
                if(bH.face["font-weight"] == bK && (bH.face["font-style"] == d || !bH.face["font-style"]) && bH.face["font-stretch"] == R)
                {
                    break
                }
            }
        }
        return bH
    };
    aZ.print = function (S, R, b, bJ, bK, bT, d)
    {
        bT = bT || "middle";
        d = m(bi(d || 0, 1), -1);
        var bP = this.set(), bS = bC(b)[I](aP), bQ = 0, bN = aP, bU;
        aI.is(bJ, b) && (bJ = this.getFont(bJ));
        if(bJ)
        {
            bU = (bK || 16) / bJ.face["units-per-em"];
            var E = bJ.face.bbox.split(a), bI = +E[0], bL = +E[1] + (bT == "baseline" ? E[3] - E[1] + (+bJ.face.descent) : (E[3] - E[1]) / 2);
            for(var bO = 0, bH = bS[s]; bO < bH; bO++)
            {
                var bM = bO && bJ.glyphs[bS[bO - 1]] || {}, bR = bJ.glyphs[bS[bO]];
                bQ += bO ? (bM.w || bJ.w) + (bM.k && bM.k[bS[bO]] || 0) + (bJ.w * d) : 0;
                bR && bR.d && bP[k](this.path(bR.d).attr({fill: "#000", stroke: "none", translation: [bQ, 0]}))
            }
            bP.scale(bU, bU, bI, bL).translate(S - bI, R - bL)
        }
        return bP
    };
    aI.format = function (d, i)
    {
        var b = aI.is(i, a7) ? [0][bw](i) : arguments;
        d && aI.is(d, af) && b[s] - 1 && (d = d[bs](bn, function (R, E)
        {
            return b[++E] == null ? aP : b[E]
        }));
        return d || aP
    };
    aI.ninja = function ()
    {
        r.was ? (aQ.Raphael = r.is) : delete Raphael;
        return aI
    };
    aI.el = bc;
    aI.st = ah[bE];
    r.was ? (aQ.Raphael = aI) : (Raphael = aI)
})();
/*
 * Raphael 3D pie extension
 *
 * © 2010 Redress AS (http://russedress.no/)
 */
var Raphael3DPieChart = new Class({Implements: [Options], options: {colors: [
], target                                                                 : null, chartWidth: 220, chartHeight: 90, pieHeight: 15, tilt: 30, explode: 7}, initialize: function (a)
{
    try
    {
        this.setOptions(a);
        this.options.centerX = this.options.chartWidth / 2;
        this.options.centerY = 110;
        this.options.radius = (this.options.chartWidth - 16) / 2;
        this.raphael = Raphael(this.options.target, this.options.chartWidth, this.options.chartHeight)
    }
    catch (b)
    {
        console.log(b)
    }
}, raphael: null, data: [], addData: function (a)
{
    this.data.push(a);
    return this
}, setData: function (a)
{
    this.data = a;
    return this
}, getData: function ()
{
    for(var b = 0, c = 0; b < this.data.length; b++)
    {
        c += this.data[b]
    }
    var a = {data: this.data, sum: c};
    return a
}, draw: function ()
{
    var o = [], m = this.getData();
    for(var j = 0, n = 90; j < m.data.length; j++)
    {
        var a = (m.data[j] / m.sum) * 360, b = this.getSector(n, n + a);
        if((n > 0 && n < 90) || (n > 270))
        {
            o.unshift({sector: b, color: this.options.colors[j]})
        } else
        {
            o.push({sector: b, color: this.options.colors[j]})
        }
        n += a
    }
    for(var j = 0; j < o.length; j++)
    {
        for(var g = 0; g < o[j].sector.length; g++)
        {
            var l = [], f = 30, c = o[j].color;
            for(var p = 0; p < c.length; p++)
            {
                l.push(c[p] - f <= 0 ? 0 : c[p] - f)
            }
            var h = g != o[j].sector.length - 1 ? l : c;
            this.raphael.path(o[j].sector[g].join(",")).attr({stroke: "rgba(0, 0, 0, .08)", "stroke-width": "1px", fill: "rgba(" + h[0] + ", " + h[1] + ", " + h[2] + ", .75)"})
        }
    }
    return this
}, calculateSector: function (d, c)
{
    var b = Math.PI / 180, a = this.options.centerX, h = this.options.centerY, g = this.options.radius, f = this.options.explode;
    return{dx: f * Math.cos(-(d + (c - d) / 2) * b), x1: a + g * Math.cos(-d * b), x2: a + g * Math.cos(-c * b), dy: f * Math.sin(-(d + (c - d) / 2) * b), y1: h + g * Math.sin(-d * b), y2: h + g * Math.sin(-c * b)}
}, getSector: function (m, b)
{
    m += 0.001;
    var q = Math.PI / 180, g = this.options.centerX, f = this.options.centerY, a = this.options.radius, u = this.options.tilt, t = this.options.pieHeight, p = this.options.explode, u = u / 90, l =
        [
        ], o = this.calculateSector(m, b), k = Math.sin(m * q) < 0 ? "bottom" : "top", s = Math.sin(b * q) < 0 ? "bottom" : "top", d =
        [], n = {top: [
        "M", (g + o.dx), (f + o.dy) * u, "L", (o.x1 + o.dx), (o.y1 + o.dy) * u, "A", a, a * u, 0,
        +(Math.abs(b - m) > 180), 0, (o.x2 + o.dx), (o.y2 + o.dy) * u, "z"
    ], bottom       : [
        "M", (g + o.dx), ((f + o.dy) * u) + t, "L", (o.x1 + o.dx), ((o.y1 + o.dy) * u) + t, "A", a,
        a * u, 0, +(Math.abs(b - m) > 180), 0, (o.x2 + o.dx), ((o.y2 + o.dy) * u) + t, "z"
    ], sr           : [
        "M", (o.x2 + o.dx), (o.y2 + o.dy) * u, "L", (g + o.dx), (f + o.dy) * u, "L", (g + o.dx),
        ((f + o.dy) * u) + t, "L", (o.x2 + o.dx), ((o.y2 + o.dy) * u) + t, "z"
    ], sl           : [
        "M", (o.x1 + o.dx), (o.y1 + o.dy) * u, "L", (g + o.dx), (f + o.dy) * u, "L", (g + o.dx),
        ((f + o.dy) * u) + t, "L", (o.x1 + o.dx), ((o.y1 + o.dy) * u) + t, "z"
    ], outer        : []};
    if(k == "top")
    {
        if(s == "bottom")
        {
            d.push([m, 180]);
            d.push([180, b])
        } else
        {
            if(s == "top" && b - m <= 180)
            {
                d.push([m, b])
            } else
            {
                d.push([m, 180]);
                d.push([0, b]);
                d.push([180, 0])
            }
        }
    }
    if(k == "bottom")
    {
        if(s == "top")
        {
            d.push([0, b]);
            d.push([m, 0])
        } else
        {
            if(s == "bottom" && b - m <= 180)
            {
                d.push([m, b])
            } else
            {
                d.push([0, 180]);
                d.push([180, b]);
                d.push([m, 0])
            }
        }
    }
    for(var j = 0; j < d.length; j++)
    {
        var h = this.calculateSector(d[j][0], d[j][1]);
        n.outer.push([
            "M", (h.x1 + o.dx), (h.y1 + o.dy) * u, "A", a, a * u, 0, +(Math.abs(d[1] - d[0]) > 180), 0,
            (h.x2 + o.dx), (h.y2 + o.dy) * u, "L", (h.x2 + o.dx), ((h.y2 + o.dy) * u) + t, "A", a, a * u, 0,
            +(Math.abs(d[1] - d[0]) > 180), 1, (h.x1 + o.dx), ((h.y1 + o.dy) * u) + t, "L", (h.x1 + o.dx),
            (h.y1 + o.dy) * u, "z"
        ])
    }
    l.push(n.bottom);
    if(k == "top")
    {
        for(var j = 0; j < n.outer.length; j++)
        {
            l.push(n.outer[j])
        }
    }
    if(Math.cos(m) < 0)
    {
        l.push(n.sr, n.sl)
    } else
    {
        l.push(n.sl, n.sr)
    }
    if(k == "bottom")
    {
        for(var j = 0; j < n.outer.length; j++)
        {
            l.push(n.outer[j])
        }
    }
    l.push(n.top);
    return l
}});
/* Better event delegation for MooTools - Cristopher Pitt & Arieh Glazer - MIT Style License */
Element.implement({delegateEvent: function (g, d, b, a)
{
    var c = g + "-delegates", f = this.retrieve(c) || false;
    if(f)
    {
        Hash.each(d, function (i, h)
        {
            if(f[h])
            {
                f[h].push(i)
            } else
            {
                f[h] = [i]
            }
        });
        return this
    } else
    {
        f = new Hash();
        Hash.each(d, function (i, h)
        {
            f[h] = [i]
        });
        this.store(c, f)
    }
    return this.addEvent(g, function (k)
    {
        var j = document.id(k.target), i = i || true, h = h || false;
        f = this.retrieve(c), args = arguments;
        Hash.each(f, function (m, l)
        {
            if(j.match(l))
            {
                if(i)
                {
                    k.preventDefault()
                }
                if(!h)
                {
                    k.stopPropagation()
                }
                Array.each(m, function (n)
                {
                    if(n.apply)
                    {
                        n.apply(j, args)
                    }
                })
            }
        });
        return this
    })
}, delegateEvents               : function (c, b, a)
{
    for(key in c)
    {
        this.delegateEvent(key, c[key], b, a)
    }
    return this
}, denyEvent                    : function (f, a, d)
{
    var b = f + "-delegates", c = this.retrieve(b) || false;
    if(c && c[a])
    {
        c[a].erase(d)
    }
    return this
}, denyEvents                   : function (d, a)
{
    var b = d + "-delegates", c = this.retrieve(b) || false;
    if(c && c[a])
    {
        delete c[a]
    }
    return this
}});
Element.alias("delegateEvent", "relayEvent");
Element.alias("delegateEvents", "relayEvents");
/* DynamicTextarea - Amadeus Demarzi (http://enmassellc.com/) - MIT Style License */
var DynamicTextarea = new Class({Implements: [
    Options, Events
], options                                 : {value: "", minRows: 1, string: "", noBreaks: false, value: null, basic: "default", focused: "focused", filled: "filled", disabled: "disabled", timeout: "ready", maxLength: Infinity, lineHeight: null, offset: 0, ctaClass: ""}, elements: {input: null, parent: null, cta: null}, initialize: function (b, a)
{
    this.setOptions(a);
    this.elements.input = document.id(b);
    if(!this.elements.input)
    {
        return
    }
    if(window.Browser.Engine.gecko)
    {
        this.options.offset = parseInt(this.elements.input.getStyle("padding-top"), 10) + parseInt(this.elements.input.getStyle("padding-bottom"), 10) + parseInt(this.elements.input.getStyle("border-bottom-width"), 10) + parseInt(this.elements.input.getStyle("border-top-width"), 10);
        this.options.padding = 0
    } else
    {
        this.options.offset = parseInt(this.elements.input.getStyle("border-bottom-width"), 10) + parseInt(this.elements.input.getStyle("border-top-width"), 10);
        this.options.padding = parseInt(this.elements.input.getStyle("padding-top"), 10) + parseInt(this.elements.input.getStyle("padding-bottom"), 10)
    }
    this.elements.parent = this.elements.input.getParent();
    if(this.options.string != "" && window.OverText)
    {
        this.elements.cta = new OverText(this.elements.input, {textOverride: this.options.string, labelClass: this.options.ctaClass})
    }
    var c = "";
    if(this.elements.input.value == "")
    {
        this.elements.parent.addClass(this.options.basic)
    } else
    {
        c = this.elements.input.value;
        this.elements.parent.addClass(this.options.filled)
    }
    this.elements.input.set({rows: 1, styles: {resize: "none", position: "relative", display: "block", overflow: "hidden", height: "auto"}});
    this.elements.input.value = "M";
    this.options.lineHeight = (this.elements.input.measure(function ()
    {
        return this.getScrollSize().y
    })) - this.options.padding;
    this.elements.input.value = c;
    this.elements.input.setStyle("height", this.options.lineHeight * this.options.minRows);
    this.focus = this.focus.bind(this);
    this.delayStart = this.delayStart.bindWithEvent(this);
    this.delayStart = this.delayStart.bindWithEvent(this);
    this.blur = this.blur.bind(this);
    this.scrollFix = this.scrollFix.bind(this);
    this.checkSize = this.checkSize.bind(this);
    this.clean = this.clean.bind(this);
    this.disable = this.disable.bind(this);
    this.enable = this.enable.bind(this);
    this.checkSize(true);
    this.elements.input.addEvent("focus", this.focus);
    this.fireEvent("load")
}, scrollFix                               : function ()
{
    this.elements.input.scrollTo(0, 0)
}, focus                                   : function ()
{
    this.elements.parent.removeClass(this.options.basic);
    this.elements.parent.removeClass(this.options.filled);
    this.elements.parent.addClass(this.options.focused);
    this.elements.input.addEvents({keydown: this.delayStart, keypress: this.delayStart, blur: this.blur, scroll: this.scrollFix});
    this.fireEvent("focus")
}, blur                                    : function ()
{
    this.elements.parent.removeClass(this.options.focused);
    if(this.elements.input.value == "")
    {
        this.elements.parent.addClass(this.options.basic)
    } else
    {
        this.elements.parent.addClass(this.options.filled)
    }
    this.elements.input.removeEvents({keydown: this.delayStart, keypress: this.delayStart, blur: this.blur, scroll: this.scrollFix});
    this.fireEvent("blur")
}, delayStart                              : function (a)
{
    if(this.options.timeout == "ready" && this.options.value.length < this.options.maxLength)
    {
        this.options.timeout = setTimeout(this.checkSize, 1);
        return
    }
    if((this.options.maxLength && this.options.maxLength != null && this.options.value.length >= this.options.maxLength && a.key != "backspace" && a.key != "delete" && a.meta == false && a.control == false && a.shift == false && a.key != "up" && a.key != "down" && a.key != "left" && a.key != "tab" && a.key != "right") || (this.options.noBreaks == true && (a.key == "enter" || a.key == "return")))
    {
        a.preventDefault();
        return
    }
    if(this.options.timeout == "ready")
    {
        this.options.timeout = setTimeout(this.checkSize, 1)
    }
}, checkSize                               : function (f)
{
    var b = this.options.value;
    this.options.value = this.elements.input.value;
    this.options.timeout = 0;
    if(this.options.value == b && f != true)
    {
        this.options.timeout = "ready";
        return
    }
    if(b == null || this.options.value.length < b.length)
    {
        this.elements.parent.setStyle("height", this.elements.parent.getSize().y);
        this.elements.input.setStyle("height", this.options.minRows * this.options.lineHeight)
    }
    var d = this.elements.input.getScrollSize().y;
    var a = this.elements.input.offsetHeight;
    var c = d - this.options.padding;
    var g = d + this.options.offset;
    if(g != a && c > this.options.minRows * this.options.lineHeight)
    {
        this.elements.input.setStyle("height", c)
    }
    this.elements.parent.setStyle("height", "auto");
    this.options.timeout = "ready";
    if(f != true)
    {
        this.fireEvent("keyPress")
    }
}, reset                                   : function ()
{
    this.elements.input.value = "";
    this.checkSize(true);
    this.elements.parent.removeClass(this.options.filled);
    this.elements.parent.removeClass(this.options.focused);
    this.elements.parent.addClass(this.options.basic);
    this.fireEvent("reset")
}, setCaret                                : function (b)
{
    if(!document.selection)
    {
        this.elements.input.selectionStart = b;
        this.elements.input.selectionEnd = b
    } else
    {
        var a = document.selection.createRange();
        a.moveStart("character", -this.elements.input.value.length);
        a.moveStart("character", b);
        a.moveEnd("character", 0);
        a.select()
    }
}, clean                                   : function ()
{
    this.elements.input.removeEvents({focus: this.focus, keydown: this.delayStart, keypress: this.delayStart, blur: this.blur, scroll: this.scrollFix})
}, disable                                 : function ()
{
    this.elements.input.blur();
    this.elements.input.removeEvents({focus: this.focus, keydown: this.delayStart, keypress: this.delayStart, blur: this.blur, scroll: this.scrollFix});
    this.elements.input.set(this.options.disabled, true);
    this.elements.parent.addClass(this.options.disabled);
    this.fireEvent("disable")
}, enable                                  : function ()
{
    this.elements.input.addEvents({focus: this.focus, scroll: this.scrollFix});
    this.elements.input.set(this.options.disabled, false);
    this.elements.parent.removeClass(this.options.disabled);
    this.fireEvent("enable")
}});
/*
 * Gender guessing function (Norwegian)
 *
 * Based on Mikael Berg's automagic gender script for PHP:
 * http://mikbe.com/2008/04/automagi-kjønn-fra-navn/
 *
 * © 2010 Redress AS (http://russedress.no/)
 */
function guessGender(a)
{
    a = a.toLowerCase();
    var c = {f: {rules: [
        "a", "e", "i", "o", "u", "y", "æ", "ø", "å", "lin", "unn", "it", "id", "ig", "borg", "bjørg",
        "ild", "rin", "vår", "iken", "ritt", "th", "bet", "inger", "sti", "stin", "liv", "run",
        "hildur", "lillian", "lilian", "vigdis", "ren", "iv", "inn", "ann", "agnes", "helen", "ett",
        "len", "ill", "il", "marion", "rakel", "gjerd", "maj", "carmen", "ljot", "dagmar", "edel",
        "ellinor", "ester", "evelyn", "frøydis", "gerd", "rud", "vor", "nnah", "dis", "iris", "ret",
        "reth", "miriam", "mor", "aug", "sarah", "sidsel", "sissel", "siw", "vivian", "summer",
        "carola"
    ], regular        : false, exception: false}, m: {rules: [
        "b", "c", "d", "f", "g", "h", "j", "k", "l", "m", "n",
        "p", "q", "r", "s", "t", "v", "w", "x", "z", "andre",
        "andré", "helge", "ingo", "roberto", "sondre", "onny",
        "arne", "tle", "re", "arild", "tommy", "ståle", "rve",
        "ole", "rune", "pelle", "jarle", "frode", "inge", "agne",
        "dino", "kenneth", "henry", "ove", "finn", "rje", "aute",
        "brede", "mike", "ola", "emil", "stig", "olai", "skild",
        "skil", "tony", "vid", "kai", "ludvig", "åge", "age",
        "asle", "audunn", "børge", "cato", "denny", "egil",
        "gisle", "rry", "hugo", "jo", "remi", "roy", "sigve",
        "viggo", "willy", "kjetil", "bertil", "yngve", "ari",
        "ali", "kalle"
    ], regular                                             : false, exception: false}};
    ["f", "m"].each(function (d)
    {
        c[d].rules.each(function (f)
        {
            if(f == a.substr(0 - f.length))
            {
                c[d].regular = true;
                if(f.length > 1)
                {
                    c[d].exception = true
                }
            }
        })
    });
    var b = "m";
    if(c.f.regular)
    {
        b = "f"
    }
    if(c.m.regular)
    {
        b = "m"
    }
    if(c.f.exception)
    {
        b = "f"
    }
    if(c.m.exception)
    {
        b = "m"
    }
    return b
}
/* HTML 5 placeholder attribute to all browsers - Alexey Gromov - MIT Style License */
var NS = NS || {};
NS.Placeholder = new Class({Implements: [
    Options
], options                            : {elements: "input[type=text]", cssClass: "placeholder", color: null}, initialize: function (a)
{
    this.setOptions(a);
    var b;
    switch ($type(this.options.elements))
    {
        case"string":
            b = $$(this.options.elements);
            break;
        case"element":
            b = [this.options.elements];
            break;
        default:
            b = this.options.elements
    }
    b.each(function (c)
    {
        var f = c.get("placeholder");
        if(f)
        {
            c.store("ns-placeholder-text", f);
            c.store("ns-placeholder-color", c.getStyle("color"));
            this.blur(c);
            c.addEvents({focus: function ()
            {
                this.focus(c)
            }.bind(this), blur: function ()
            {
                this.blur(c)
            }.bind(this)});
            var d = c.getParent("form");
            if(d)
            {
                d.addEvent("submit", function ()
                {
                    if(c.value == f)
                    {
                        c.set("value", "")
                    }
                })
            }
        }
    }.bind(this))
}, focus                              : function (b, a)
{
    a = a == undefined || a;
    var d = b.retrieve("ns-placeholder-text"), c = b.get("value");
    if(c == "" || c == d)
    {
        if(this.options.cssClass)
        {
            b[a ? "removeClass" : "addClass"](this.options.cssClass)
        }
        if(this.options.color)
        {
            b.setStyle("color", a ? b.retrieve("ns-placeholder-color") : this.options.color)
        }
        b.set("value", a ? "" : d)
    }
}, blur                               : function (a)
{
    this.focus(a, false)
}});
/* MooTools Uploader - Copyright (c) Harald Kirschner <mail [at] digitarald [dot] de> - MIT Style License */
var Uploader = new Class({Implements: [
    Options, Events
], options                          : {container: null, queued: true, verbose: false, url: null, method: null, data: null, mergeData: true, fieldName: null, allowDuplicates: false, fileListMax: 0, instantStart: false, appendCookieData: false, fileClass: null}, initialize: function (a)
{
    this.setOptions(a);
    this.target = $(this.options.target);
    this.box = new Element("div").setStyles({position: "absolute", opacity: 0.01, zIndex: 9999, overflow: "hidden"});
    this.reposition();
    window.addEvent("resize", this.reposition.bind(this));
    this.box.inject(this.options.container || document.body);
    this.addEvents({buttonEnter: this.targetRelay.bind(this, ["mouseenter"]), buttonLeave: this.targetRelay.bind(this, [
        "mouseleave"
    ]), buttonDown             : this.targetRelay.bind(this, ["mousedown"]), buttonDisable: this.targetRelay.bind(this,
        ["disable"])});
    this.uploading = 0;
    this.fileList = [];
    this.createIFrame();
    return this
}, targetRelay                      : function (a)
{
    if(this.target)
    {
        this.target.fireEvent(a)
    }
}, createIFrame                     : function ()
{
    this.iframe = new Element("iframe", {src: "javascript:'<html></html>'", frameborder: "no", border: 0, styles: {width: "100%", height: "100%"}}).inject(this.box);
    this.runner = this.createIBody.periodical(50, this)
}, createIBody                      : function ()
{
    var a = this.iframe.contentWindow.document;
    if(!a || !a.body)
    {
        return
    }
    $clear(this.runner);
    var b = (Browser.Engine.trident) ? "left" : "right";
    a.body.innerHTML = '<form method="post" enctype="multipart/form-data" id="form"><input type="file" id="file" style="position:absolute;' + b + ':0;top:0" /><input type="submit" /><div id="data"></div></form><style type="text/css">*{margin:0;padding:0;border:0;overflow:hidden;cursor:pointer;}</style>';
    this.doc = a;
    this.processIBody.delay(50, this)
}, processIBody                     : function ()
{
    this.doc;
    if(!(this.file = this.doc.getElementById("file")) || !this.file.offsetHeight)
    {
        this.createIBody();
        return
    }
    $extend(this.file, {onmousedown: function ()
    {
        if(Browser.Engine.presto)
        {
            return true
        }
        (function ()
        {
            this.file.click();
            this.fireEvent("buttonDown")
        }).delay(10, this);
        return false
    }.bind(this), onfocus          : function ()
    {
        return false
    }, onchange                    : this.select.bind(this), onmouseover: this.fireEvent.bind(this, "buttonEnter"), onmouseout: this.fireEvent.bind(this, "buttonLeave")})
}, select                           : function ()
{
    this.file.onchange = this.file.onmousedown = this.file.onfocus = null;
    var c = this.file.value.replace(/^.*[\\\/]/, "");
    var a = this.options.fileClass || Uploader.File;
    var b = new a(this, c, this.iframe.setStyle("display", "none"));
    if(!b.validate())
    {
        b.invalidate().render();
        this.fireEvent("onSelectFailed", [
            [b]
        ]);
        return
    }
    this.fileList.push(b);
    b.render();
    this.fireEvent("onSelectSuccess", [
        [b]
    ]);
    if(this.options.instantStart)
    {
        this.start()
    }
    this.file = null;
    this.createIFrame()
}, reposition                       : function ()
{
    var a = this.target.getCoordinates(this.box.getOffsetParent());
    this.box.setStyles(a)
}, start                            : function ()
{
    this.fireEvent("beforeStart");
    var c = this.options.queued;
    c = (c) ? ((c > 1) ? c : 1) : 0;
    for(var b = 0, a; a = this.fileList[b]; b++)
    {
        if(this.fileList[b].status != Uploader.STATUS_QUEUED)
        {
            continue
        }
        this.fileList[b].start();
        if(c && this.uploading >= c)
        {
            break
        }
    }
    return this
}, stop                             : function ()
{
    this.fireEvent("beforeStop");
    for(var a = this.fileList.length; a--;)
    {
        this.fileList[a].stop()
    }
}, remove                           : function ()
{
    this.fireEvent("beforeRemove");
    for(var a = this.fileList.length; a--;)
    {
        this.fileList[a].remove()
    }
}, setEnabled                       : function (a)
{
    this.file.disabled = !!(a);
    if(a)
    {
        this.fireEvent("buttonDisable")
    }
}});
$extend(Uploader, {STATUS_QUEUED: 0, STATUS_RUNNING: 1, STATUS_ERROR: 2, STATUS_COMPLETE: 3, STATUS_STOPPED: 4, id: 0, log: function ()
{
    if(window.console && console.info)
    {
        console.info.apply(console, arguments)
    }
}});
Uploader.File = new Class({Extends: Events, Implements: Options, options: {url: null, method: null, data: null, mergeData: true, fieldName: null}, initialize: function (c, a, b)
{
    this.base = c;
    this.id = Uploader.id++;
    this.name = a;
    this.extension = a.replace(/^.*\./, "").toLowerCase();
    this.status = Uploader.STATUS_QUEUED;
    this.dates = {};
    this.dates.add = new Date();
    this.iframe = b.addEvents({abort: this.stop.bind(this), load: this.onLoad.bind(this)})
}, fireEvent                      : function (a)
{
    this.base.fireEvent("file" + a.capitalize(), [this]);
    Uploader.log("File::" + a, this);
    return this.parent(a, [this])
}, validate                       : function ()
{
    var c = this.base.options;
    if(!c.allowDuplicates)
    {
        var a = this.name;
        var b = this.base.fileList.some(function (d)
        {
            return(d.name == a)
        });
        if(b)
        {
            this.validationError = "duplicate";
            return false
        }
    }
    if(c.fileListMax && this.base.fileList.length >= c.fileListMax)
    {
        this.validationError = "fileListMax";
        return false
    }
    return true
}, invalidate                     : function ()
{
    this.invalid = true;
    return this.fireEvent("invalid")
}, render                         : function ()
{
    return this
}, onLoad                         : function ()
{
    if(this.status != Uploader.STATUS_RUNNING)
    {
        return
    }
    this.status = Uploader.STATUS_COMPLETE;
    var b = new Window(this.iframe.contentWindow);
    var a = new Document(b.document);
    this.response = {window: b, document: a, text: a.innerHTML || ""};
    this.base.uploading--;
    this.dates.complete = new Date();
    this.fireEvent("complete");
    this.base.start()
}, start                          : function ()
{
    if(this.status != Uploader.STATUS_QUEUED)
    {
        return this
    }
    var a = this.base.options, j = this.options;
    var h = {};
    for(var i in a)
    {
        h[i] = (this.options[i] != null) ? this.options[i] : a[i]
    }
    h.url = h.url || location.href;
    h.method = (h.method) ? (h.method.toLowerCase()) : "post";
    var g = this.iframe.contentWindow.document;
    var c = g.getElementById("data");
    c.innerHTML = "";
    if(h.data)
    {
        if(h.mergeData && a.data && j.data)
        {
            if($type(a.data) == "string")
            {
                h.data = a.data + "&" + j.data
            } else
            {
                h.data = $merge(a.data, j.data)
            }
        }
        var d = ($type(h.data) == "string") ? h.data : Hash.toQueryString(h.data);
        if(d.length)
        {
            if(h.method == "get")
            {
                if(data.length)
                {
                    h.url += ((h.url.contains("?")) ? "&" : "?") + d
                }
            } else
            {
                d.split("&").map(function (l)
                {
                    l = l.split("=");
                    var k = g.createElement("input");
                    k.type = "hidden";
                    k.name = decodeURIComponent(l[0]);
                    k.value = decodeURIComponent(l[1] || "");
                    c.appendChild(k)
                }).join("")
            }
        }
    }
    var b = g.forms[0];
    b.action = h.url;
    var f = b.elements[0];
    f.name = h.fieldName || "Filedata";
    this.status = Uploader.STATUS_RUNNING;
    this.base.uploading++;
    b.submit();
    this.dates.start = new Date();
    this.fireEvent("start");
    return this
}, requeue                        : function ()
{
    this.stop();
    this.status = Uploader.STATUS_QUEUED;
    this.fireEvent("requeue")
}, stop                           : function (a)
{
    if(this.status == Uploader.STATUS_RUNNING)
    {
        this.status = Uploader.STATUS_STOPPED;
        this.base.uploading--;
        this.base.start();
        if(!a)
        {
            this.iframe.contentWindow.history.back();
            this.fireEvent("stop")
        }
    }
    return this
}, remove                         : function ()
{
    this.stop(true);
    this.iframe = this.iframe.destroy();
    this.base.fileList.erase(this);
    this.fireEvent("remove");
    return this
}});
/*
 * General site enhancements for Russesiden.no
 *
 * © 2010 Redress AS (http://russedress.no/)
 */
(function ()
{
    $$("a[rel=external]").setProperty("target", "_blank");
    try
    {
        var d = window.location.hash.substring(1);
        if(d)
        {
            window.scrollTo(0, 0);
            new Fx.Scroll(window, {wait: false, duration: 1000, transition: Fx.Transitions.Quad.easeInOut}).toElement(d)
        }
        new Fx.SmoothScroll({wait: false, duration: 1000, transition: Fx.Transitions.Quad.easeInOut}, window)
    }
    catch (m)
    {
    }
    new NS.Placeholder({color: "#aaa"});
    function k()
    {
        $each($$("textarea.dynamic:not(.is-dynamic)"), function (q)
        {
            try
            {
                new DynamicTextarea(q, {minRows: q.getProperty("rows")});
                q.addClass("is-dynamic")
            }
            catch (r)
            {
            }
        })
    }

    k();
    $$("ul.posts").delegateEvent("click", {"span.showform": function (t)
    {
        var q = this.getProperty("class").split("-")[1];
        var r = $$("ul.posts li.reply.root form")[0].clone();
        r.getElement("input[name=parent_id]").setProperty("value", q);
        r.getElement("textarea").removeClass("is-dynamic").erase("value").setAttribute("rows", 1);
        r.getElement('div.image').destroy();
        r.inject(this, "after");
        var s = new Form.Request.Append(r, r.getParent(), {extraData: {return_post: 1}, resetForm: true, inject: "before"});
        r.addEvent("submit", function ()
        {
            s.send();
            return false
        });
        this.addClass("hidden");
        k();
        return false
    }, "a.showform"                                       : function (t)
    {
        // @todo, fix me later.
        // the first reply does not ident properly on the javascript call

        var q = this.getProperty("class").split("-")[1];
        var r = $$("ul.posts li.reply.root form")[0].clone();
        r.getElement("input[name=parent_id]").setProperty("value", q);
        r.getElement("textarea").removeClass("is-dynamic").erase("value").setAttribute("rows", 1);
        r.getElement('div.image').destroy();
        r.addClass("reply");
        r.inject(this.getParents()[3], "after");

        var stuff = r.getParent().getElements('.posts > *');

        var targetChildren = (stuff.length === 0 ||stuff.length === 1 ? stuff.length : (stuff.length - 1));
        var targetElement = (stuff.length ? stuff[targetChildren] : r.getParent());

        var s = new Form.Request.Append(r, targetElement, {extraData: {return_post: 1}, resetForm: true, inject: "after"});
        r.addEvent("submit", function ()
        {
            s.send();
            return false
        });
        this.addClass("hidden");
        k();
        return false
    }});
    $$("ul.ta-actions").delegateEvent("click", {"li.link": function (s)
    {
        var q = this.getParent().getParent().getElement("textarea");
        var r = q.getSelectedText() || prompt("Skriv inn adressen til nettsiden:", "http://");
        if(!r.length)
        {
            return
        }
        if(r.search(/youtube\.com/gi) != -1)
        {
            q.insertAtCursor(r);
            return
        }
        var t = prompt("Skriv inn tittelen på linken (valgfritt):");
        if(!t.length)
        {
            q.insertAtCursor("<" + r + ">");
            return
        }
        q.insertAtCursor("[" + t + "](" + r + ")")
    }, "li.bold"                                         : function (r)
    {
        var q = this.getParent().getParent().getElement("textarea");
        q.insertAroundCursor({before: "**", after: "**"})
    }, "li.italic"                                       : function (r)
    {
        var q = this.getParent().getParent().getElement("textarea");
        q.insertAroundCursor({before: "*", after: "*"})
    }});
    if($("school"))
    {
        $("school").addEvent("change", function (r)
        {
            var s = this.value;
            if(!s.length)
            {
                if($("class"))
                {
                    $("class").destroy()
                }
                return
            }
            var q = new Request.JSON({url: "/class/school/" + s, onSuccess: function (t)
            {
                if($("class") != null)
                {
                    var u = $("class");
                    u.empty()
                } else
                {
                    var u = new Element("select", {name: "class", id: "class", "class": "form-control", events: {change: function ()
                    {
                        if(this.value == "missing")
                        {
                            if($("new_class") != null)
                            {
                                return
                            }
                            new_class = new Element("input", {type: "text", name: "new_class", id: "new_class", "class": "form-control"});
                            new_class.inject($("class"), "after")
                        } else
                        {
                            if($("new_class") != null)
                            {
                                $("new_class").destroy()
                            }
                        }
                    }}})
                }
                t.unshift(["", "(Velg klasse fra listen - Valgfritt)"]);
                t.push(["missing", "--- KLASSEN MANGLER ---"]);
                t.each(function (x, v)
                {
                    var w = new Element("option", {value: x[0], selected: x[0] == r}).appendText(x[1]);
                    u.grab(w)
                });
                u.inject($("school"), "after")
            }});
            q.get()
        })
    }
    //if($("postal_code"))
    //{
    //    var h = function ()
    //    {
    //        var r = $("postal_code").value;
    //        if($("postal_city"))
    //        {
    //            $("postal_city").destroy()
    //        }
    //        if(!r.length)
    //        {
    //            return
    //        }
    //        var q = new Request({url: "/postal_city/postal_code/" + r, onSuccess: function (t)
    //        {
    //            if(t.length)
    //            {
    //                var s = new Element("span", {id: "postal_city", className: "valid"}).appendText(t)
    //            } else
    //            {
    //                var invalidText = "";
    //                if (r != 'Postnummer') {
    //                    invalidText = "Ugyldig postnummer";
    //                }
    //
    //                    var s = new Element("span", {id: "postal_city", className: "invalid"}).appendText(invalidText)
    //            }
    //            s.inject($("postal_code"), "after")
    //        }});
    //        q.get()
    //    };
    //    $("postal_code").addEvent("blur", h);
    //    h()
    //}
    if($("class"))
    {
        var n = $("class").get("class");
        $("class").destroy();
        $("school").fireEvent("change", n)
    }
    if($("first_name") && $("gender_m"))
    {
        $("first_name").addEvent("change", function ()
        {
            $("gender_m").removeProperty("checked");
            $("gender_f").removeProperty("checked");
            $("gender_" + guessGender(this.value)).setProperty("checked", "checked")
        })
    }
    if($$(".loginmenu"))
    {
        $$(".loginmenu .login a", ".loginmenu .register a").addEvent("click", function ()
        {
            var s = this.getParent().getProperty("class"), u = (s == "login" ? "register" : "login"), q = "sidebar-" + s, v = "sidebar-" + u, r;
            $$(".loginmenu a").removeClass("active");
            if($(q).retrieve("h", false))
            {
                r = $(q).retrieve("h")
            } else
            {
                r = $(q).getDimensions().height;
                $(q).store("h", r).setStyles({display: "block", overflow: "hidden", height: 0})
            }
            if($(v).getSize().y > 0)
            {
                $(v).setStyle("height", 0);
                $(q).setStyle("height", r);
                $(s + "_email").focus();
                this.addClass("active")
            } else
            {
                if($(q).getSize().y > 0)
                {
                    $(q).set("tween", {duration: 300}).tween("height", 0)
                } else
                {
                    $(q).set("tween", {duration: 300}).tween("height", r);
                    $(s + "_email").focus();
                    this.addClass("active")
                }
            }
            return false
        })
    }
    if($("events"))
    {
        var l = 400;
        var c = $("events").getSize().y - 2;
        $$("#events .details-wrap").setStyle("height", c).addEvent("click",function (q)
        {
            q.stopPropagation()
        }).getElement(".event-wrap").setStyle("height", c - 20);
        $$("#events .event").addEvent("click", function (s)
        {
            s.stopPropagation();
            var q = false;
            var r = this.getElement(".details-wrap");
            new Fx.Scroll(window, {wait: false, duration: 1000, transition: Fx.Transitions.Quad.easeInOut}).toElement($("events"));
            this.getParent().getParent().getParent().getElements(".event").removeClass("active").each(function (v, u)
            {
                var t = v.getElement(".details-wrap");
                if(t.getSize().x > 0 && q == false && t != r)
                {
                    q = t
                }
            });
            this.addClass("active");
            if(q != false)
            {
                r.setStyle("width", l);
                q.setStyle("width", 0)
            } else
            {
                if(r.getSize().x == 0)
                {
                    r.set("tween", {duration: 400}).tween("width", l)
                } else
                {
                    this.removeClass("active");
                    r.set("tween", {duration: 400}).tween("width", 0)
                }
            }
            return false
        })
    }
    if($("veh-create"))
    {
        $$("#veh-create input[name=title]").addEvent("focus",function (q)
        {
            if($("veh-create-error"))
            {
                $("veh-create-error").destroy()
            }
        }).addEvent("blur", function (r)
        {
            var q = this.getParent();
            new Request.JSON({url: "/vehicles/similar", data: {title: this.value}, onComplete: function (t)
            {
                if(t.length)
                {
                    var s = new Element("div", {id: "veh-create-error", text: (t.length == 1 ? "Et" : "Flere") + " kjøretøy med en tilsvarende tittel eksisterer allerede. Vennligst sjekk ut kjøretøyene nedenfor for å unngå dobbeltregistreringer:"}), v = new Element("ul", {"class": "bullet"}).inject(s);
                    for(var u = 0; u < t.length; u++)
                    {
                        new Element("a", {target: "_blank", href: t[u][0], text: t[u][1]}).inject(new Element("li").inject(v))
                    }
                    s.inject(q, "after")
                }
            }}).send()
        })
    }
    if($("veh-invite"))
    {
        function g()
        {
            $$("div[id^=veh-invite-]").each(function (q)
            {
                q = q.getElement("ul");
                if(!q.getChildren().length)
                {
                    new Element("li", {"class": "empty wrap"}).appendText("Klikk på en person i den andre listen").inject(q)
                }
            })
        }

        g();
        $$("#veh-invite .wrap").addEvent("click", function (v)
        {
            var t = this, s = t.getParent("div[id^=veh-invite-]").getProperty("id"), q = s.split("-")[2] == "list" ? "friends" : "list", u = $$("#veh-invite-" + q + " ul")[0], w = t.clone(), x = t.getPosition(), r;
            new Request({url: "/vehicles/invite", data: {u: this.getProperty("class").match(/\[([a-z0-9-]+)\]/)[1], a: q == "friends" ? "del" : "add"}, onComplete: function (y)
            {
                console.log(y)
            }}).send();
            if(r = u.getElements(".empty.wrap"))
            {
                r.destroy()
            }
            t.inject(u).setStyle("visibility", "hidden");
            g();
            w.inject(u).setStyles({position: "absolute", left: x.x, top: x.y}).set("move", {duration: 0, transition: Fx.Transitions.Quart.easeOut, onComplete: function (y)
            {
                w.destroy();
                t.setStyle("visibility", "visible").highlight()
            }}).move({relativeTo: t, position: "upperLeft"});
            return false
        })
    }
    if($$(".articles-index .articles").length)
    {
        var j = new Element("li", {"class": "post-feed"}), i = new Element("li", {"class": "user-feed"});
        new Request({url: "/feed/lastjoined/20", onComplete: function (q)
        {
            i.set("html", q)
        }}).send();
        new Request({url: "/feed/posts", initialDelay: 0, delay: 10000, limit: 15000, onComplete: function (q)
        {
            j.set("html", q)
        }}).startTimer();
        j.inject($$(".art:nth-child(7)")[0], "after");
        i.inject($$(".art:nth-child(7)")[0], "after")
    }
    if(typeof sbPoll != "undefined")
    {
        if(sbPoll.total > 0)
        {
            new Raphael3DPieChart({target: $("sidebar-poll-chart"), colors: sbPoll.colors}).setData(sbPoll.data).draw()
        }
    }
    try
    {
        $$(".ad").each(function (q)
        {
            if(q.getElement("div"))
            {
                q.set("styles", {display: "block"})
            }
        })
    }
    catch (m)
    {
    }
    $$("#sharefb #fbsharejoin").addEvent("click", function (q)
    {
        q.stop();
        FB.ui({method: "feed", link: "http://russesiden.no", picture: "http://russesiden.no/gfx/theme/russedress-logo-square.png", name: "Russesiden.no", caption: "Gjør som meg, bli medlem på Norges største side for Russ. Det er her alt skjer. Bli medlem nå og vinn russeklær for 2500 kroner + masse mer!"});
        return false
    });
    $$("#fbfriendinvite").addEvent("click", function (r)
    {
        recepitants = new Array();
        $$(".fbfriendinvite").each(function (s)
        {
            if(s.checked)
            {
                recepitants.push(s.get("data-fbid"))
            }
        });
        var q = recepitants.join(",");
        r.stop();
        FB.ui({method: "apprequests", title: "Russesiden.no", message: "Gjør som meg, bli medlem på Norges største side for Russ. Det er her alt skjer. Bli medlem nå og vinn russeklær for 2500 kroner + masse mer!", to: recepitants.join(",")}, function (t)
        {
            if(t != null)
            {
                var s = $$("#pid").getProperty("tag-test")[0];
                var u = new Request({method: "get", url: "/facebookfriends/invadd", onSuccess: function (v)
                {
                    window.location.href = "/facebookfriends"
                }, onFailure               : function ()
                {
                    alert("Beklager, noe gikk galt. Vennligst prøv igjen")
                }});
                u.send("list=" + q + "&pid=" + s)
            }
        });
        return false
    });
    function o()
    {
        if($$(".fbfriendscontainer").get("data-lock") == "true")
        {
            return
        }
        $$("#fbfriendsearhnoresults").set("style", "display: none");
        $$("#fbfriendloadmore").set("style", "display: none");
        $$("#fbfriendloadingmore").set("style", "");
        $$(".fbfriendscontainer")[0].empty();
        var q = new Request.JSON({url: "/facebookfriends/search", onSuccess: function (r)
        {
            $$(".fbfriendscontainer").set("data-lock", "true");
            if(r.redirect != null)
            {
                window.location.href = r.redirect;
                return
            }
            Array.each(r.friends, function (s)
            {
                $$(".fbfriendscontainer").grab(new Element("li", {html: s, "class": "fbstylefriend"}))
            });
            if(r.friends.length == 0)
            {
                $$("#fbfriendsearhnoresults").set("style", "")
            }
            $$("#fbfriendsearchback").set("style", "");
            $$("#fbfriendloadingmore").set("style", "display: none");
            $$(".fbfriendscontainer").set("data-lock", "false")
        }, onFailure                 : function (r)
        {
            $$("#fbfriendsearchback").set("style", "");
            $$(".fbfriendscontainer").set("data-lock", "false");
            $$("#fbfriendloadingmore").set("style", "display: none")
        }}).post({text: $$("#fbinvitesearchtext").get("value"), })
    }

    $$("#fbinvitesearchtext").addEvent("keydown", function (q)
    {
        if(q.code == 13)
        {
            o()
        }
    });
    $$("#fbfriendsearch").addEvent("click", function (q)
    {
        o()
    });
    function p(r)
    {
        if($$(".fbfriendscontainer").get("data-lock") == "true")
        {
            return
        }
        $$("#fbfriendloadmore").set("style", "display: none");
        $$("#fbfriendloadingmore").set("style", "");
        var q = new Request.JSON({url: "/facebookfriends/loadmore", onSuccess: function (s)
        {
            $$(".fbfriendscontainer").set("data-lock", "true");
            $$(".fbfriendscontainer").set("data-minid", s.minid);
            if(s.redirect != null)
            {
                window.location.href = s.redirect;
                return
            }
            Array.each(s.friend, function (t)
            {
                $$(".fbfriendscontainer").grab(new Element("li", {html: t, "class": "fbstylefriend"}))
            });
            $$("#fbfriendloadingmore").set("style", "display: none");
            if(s.showbutton)
            {
                $$("#fbfriendloadmore").set("style", "")
            }
            $$(".fbfriendscontainer").set("data-lock", "false")
        }, onFailure                 : function (s)
        {
            $$(".fbfriendscontainer").set("data-lock", "false");
            $$("#fbfriendloadmore").set("style", "");
            $$("#fbfriendloadingmore").set("style", "display: none")
        }}).post({minid: r, })
    }

    $$("#fbfriendsearchback").addEvent("click", function (q)
    {
        $$("#fbfriendsearhnoresults").set("style", "display: none");
        $$("#fbfriendsearchback").set("style", "display: none");
        p(0)
    });
    $$("#fbfriendloadmore").addEvent("click", function (q)
    {
        p($$(".fbfriendscontainer").get("data-minid"))
    });
    $$(".fbfriendinvite").addEvent("click", function (r)
    {
        if(this.checked)
        {
            var q = 0;
            $$(".fbfriendinvite").each(function (s)
            {
                if(s.checked)
                {
                    q++
                }
            });
            if(q > 40)
            {
                this.checked = false;
                alert("Du kan bare invitere 40 venner av gangen! Men inviter gjerne flere ganger.")
            }
        }
    });
    var b = false;
    $$("#image-big").addEvent("load", function ()
    {
        if(!b)
        {
            var q = $$("#image-big").getSize();
            var r = "padding:" + (Math.floor((600 - q[0].y - 10) / 2)) + "px " + Math.floor((800 - q[0].x - 10) / 2) + "px;	opacity: 1;";
            $$("#image-big").setProperty("style", r)
        }
    });
    $$(".status-image").each(function (q)
    {
        if(q.getElement("img"))
        {
            var r = q.getElement("img");
            r.addEvent("click", function (u)
            {
                var v = r.getProperty("tag");
                $$("#image-big").setProperty("src", v);
                $$("#image-big").setProperty("style", "opacity:0;");
                $$("#image-big-container-background").show();
                var s = $$("#image-big").getSize();
                b = false;
                if(s[0].x > 0)
                {
                    b = true;
                    var s = $$("#image-big").getSize();
                    var t = "padding:" + (Math.floor((600 - s[0].y - 10) / 2)) + "px " + Math.floor((800 - s[0].x - 10) / 2) + "px;	opacity: 1;";
                    $$("#image-big").setProperty("style", t)
                }
            })
        }
    });
    $$("#image-big-container-background").addEvent("click", function ()
    {
        $$("#image-big-container-background").hide()
    });
    var a = function ()
    {
        var q = this.getParent("li");
        var r = new Request.JSON({url: "/sales/removenote", onSuccess: function (s)
        {
            q.dispose()
        }, onFailure                 : function (s)
        {
            alert("Kan ikke legge til denne")
        }}).get({id: q.get("data-id")})
    };
    var f = function ()
    {
        var s = this.getParent(".members").get("data-id");
        var r = this;
        var t = r.get("value");
        var q = new Request.JSON({url: "/sales/addnote", onSuccess: function (w)
        {
            if(w.message)
            {
                var u = new Element("li", {"class": "note", "data-id": w.id});
                u.grab(new Element("span", {text: t, "class": "note-text"}));
                var v = new Element("a", {text: " - Fjern ", "class": "action-remove-note button"});
                u.grab(v);
                v.addEvent("click", a);
                r.getSiblings(".notes-list").grab(u);
                r.set("value", "")
            } else
            {
                location.href = "/sales"
            }
        }, onFailure                 : function (u)
        {
            alert("Kan ikke legge til denne")
        }}).get({member: s, note: t})
    };
    $$(".h-name").addEvent("click", function ()
    {
    });
    $$(".sales-schools .school-header").addEvent("click", function ()
    {
        this.getSiblings(".members").show()
    });
    $$(".sales-schools .add-new").addEvent("click", function ()
    {
        this.getSiblings(".form-addmember").show();
        this.hide()
    });
    $$(".sales-schools .action-add").addEvent("click", function ()
    {
        var t = this.getParent().getParent();
        var s = t.getElements(".name").get("value");
        var q = t.getElements(".mobile_phone").get("value");
        var u = t.getElements(".school_id").get("value");
        var r = new Request.JSON({url: "/sales/addmember", onSuccess: function (y)
        {
            console.log(t, s, q, u);
            if(y.message == "success")
            {
                var w = new Element("tr", {"class": "members", "data-id": y.id});
                w.grab(new Element("td", {}));
                w.grab(new Element("td", {text: s, "class": "name"}));
                w.grab(new Element("td", {text: q, "class": "mobile_phone",colspan: "2"}));
                w.grab(new Element("td", {colspan: "6", class:"new-input"}));
                w.grab(new Element("td", {class: "action-remove button"}));
////                var x = new Element("div", {"class": "notes"});
////                var z = new Element("ul", {"class": "notes-list"});
////                var v = new Element("input", {type: "text", name: "note", "class": "input-note"});
////                x.grab(z);
////                x.grab(v);
////                w.grab(x);
////                v.addEvent("change", f);
                t.grab(w, 'before');
////                t.getSiblings(".add-new").show();
////                t.hide();
////                t.getElements('.new-input').grab(new Element("input",{type: "text", name: "note", "class": "input-note form-control", placeholder:"Legg til notat"}));
////                w.getElementsByClassName('.action-remove').append('<i class="fa fa-times"></i>');
                t.getElements(".name").set("value", "");
                t.getElements(".mobile_phone").set("value", "")
            } else
            {
                location.href = "/sales"
            }
        }, onFailure                 : function (v)
        {
            alert("Kan ikke legge til denne")
        }}).get({name: s, mobile_phone: q, school: u})
    });
    $$(".sales-schools .action-remove").addEvent("click", function ()
    {
        var q = this.getParent("tr");
        var r = new Request.JSON({url: "/sales/removemember", onSuccess: function (s)
        {
            q.dispose()
        }, onFailure                 : function (s)
        {
            alert("Kan ikke fjerne personen")
        }}).get({id: q.get("data-id")})
    });
    $$(".sales-schools .action-cancel").addEvent("click", function ()
    {
        var q = this.getParent(".form-addmember");
        q.getSiblings(".add-new").show();
        q.hide();
        q.getElements(".name").set("value", "");
        q.getElements(".mobile_phone").set("value", "")
    });
    $$(".sales-schools .check-tag").addEvent("change", function ()
    {
        var t = this.getParent(".school").get("data-id");
        var q = this.get("value");
        var s = this.get("checked");
        var r = new Request.JSON({url: "/sales/check", onSuccess: function (u)
        {
            if(u.message)
            {
            } else
            {
                location.href = "/sales"
            }
        }, onFailure                 : function (u)
        {
            alert("Kan ikke legge til denne")
        }}).get({school: t, tag: q, checked: s})
    });
    $$(".sales-schools .input-note").addEvent("change", f);
    $$(".sales-schools .action-remove-note").addEvent("click", a)
})();